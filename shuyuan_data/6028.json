[
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🍿 日常,🎊 常用,🎨 漫画",
    "bookSourceName": "🎨漫画柜💞✈️",
    "bookSourceType": 2,
    "bookSourceUrl": "https://www.manhuagui.com",
    "bookUrlPattern": "https://.*/manhua/.*/",
    "concurrentRate": "",
    "customOrder": 111,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\neval(String(source.loginUrl));\nvar exploreUrl = [];\ntitle = '✣　　　　　  ✣  榜　　单  ✣  　　　　　✣';\nexploreUrl.push(explore(title, '', 1, 1, false));\ntitle = [\n    '最近更新',\n    '连载漫画',\n    '完结漫画'\n];\ntype = [\n    '/update/d30.html',\n    '/list/lianzai/index_p{{page}}.html',\n    '/list/wanjie/index_p{{page}}.html'\n];\nfor (i in title) {\n    url = `{{Get('url')}}${type[i]}`;\n    exploreUrl.push(explore(title[i], url, 1, 0.25, false));\n}\ntitle = [\n    '日排行',\n    '周排行',\n    '月排行',\n    '总排行'\n];\nrank = [\n    '/rank/',\n    '/rank/week.html',\n    '/rank/month.html',\n    '/rank/total.html'\n];\nfor (i in title) {\n    url = `{{Get('url')}}${rank[i]}`;\n    exploreUrl.push(explore(title[i], url, 1, 0.2, false));\n}\ntitle = '✣　　　　　  ✣  标　　签  ✣  　　　　　✣';\nexploreUrl.push(explore(title, '', 1, 1, false));\nvar Url = Get('url') + '/list/';\nvar J = org.jsoup.Jsoup.parse(java.ajax(Url));\nvar list = J.select('.genre') ? J.select('.genre').select('li') : [];\nO1 = `\\${get('o1',Get('o'))}`;\nP1 = `\\${get('p1',Get('p'))}`;\nQ1 = `\\${get('q1',Get('q'))}`;\nR1 = `{{get('r1',Get('r'))}}`;\nS1 = `\\${get('s1',Get('s'))}`;\nT1 = `\\${get('t1',Get('s'))}`;\nfor (i in list) {\n    var kind = String(list[i].select('a').attr('href')).replace(/\\/list\\/|\\/$/g, '');\n    var Filter = `{{String(\\`${P1}_${kind}_${O1}_${T1}_${S1}_${Q1}/\\`).replace(/_+/g,'_').replace(/_\\\\//g,'\\/').replace(/^_|^\\\\//g,'')}}`;\n    url = `{{Get('url')}}/list/${Filter}${R1}_p{{page}}.html`;\n    exploreUrl.push(explore(list[i].text(), url, 1, 0.25, false));\n}\nBID = (kind % 3) < 1 ? 0 : (3 - (kind % 3));\nfor (i = 0; i < BID; i++) {\n   exploreUrl.push(explore('', '', 1, 0.25, false)); \n}\nJSON.stringify(exploreUrl);\n</js>",
    "header": "<js>\nvar Proxy = Map('代理：').split(\",\");\nheaders={\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36 Edg/127.0.0.0\",\n    \"proxy\": Proxy.some(value => parseInt(value, 10) == parseInt(Get('ci0'), 10)) ? '' : Proxy[0],\n}\ncache.put(java.md5Encode16(Get('url') + \"headers\"),JSON.stringify(headers));\nJSON.stringify(headers);\n</js>",
    "jsLib": "function get(tag,num) {\n    so = [\n        '',\n        '_o2',\n        '_o1',\n        '_o3'\n    ];\n    o1 = [\n        '',\n        'shaonv',\n        'shaonian',\n        'qingnian',\n        'ertong',\n        'tongyong'\n    ];\n    p1 = [\n        '',\n        'japan',\n        'china',\n        'hongkong',\n        'europe',\n        'korea',\n        'other'\n    ];\n    q1 = [\n        '',\n        'lianzai',\n        'wanjie'\n    ];\n    r1 = [\n        'update',\n        'index',\n        'view',\n        'rate'\n    ];\n    s1 = [\n        '',\n        'a',\n        'b',\n        'c',\n        'd',\n        'e',\n        'f',\n        'g',\n        'h',\n        'i',\n        'j',\n        'k',\n        'l',\n        'm',\n        'n',\n        'o',\n        'p',\n        'q',\n        'r',\n        's',\n        't',\n        'u',\n        'v',\n        'w',\n        'x',\n        'y',\n        'z',\n        '0-9'\n    ];\n    t1 = [\n        '',\n        '197x',\n        '198x',\n        '199x',\n        '200x',\n        '2010',\n        '2011',\n        '2012',\n        '2013',\n        '2014',\n        '2015',\n        '2016',\n        '2017',\n        '2018',\n        '2019',\n        '2020',\n        '2021',\n        '2022',\n        '2023',\n        '2024',\n        '2025'\n    ];\n    var e = eval(tag + '[' + num + ']');\n    return e;\n}\nfunction explore(title, url, Grow, Basis, bool) {\n    style = {\n        title:title,\n        url:url,\n        style:{\n            layout_flexGrow:Grow,\n            layout_flexBasisPercent:Basis,\n            layout_wrapBefore: bool\n        }\n    };\n    return style;\n}\nfunction Get(e) {\n    const { java, source, cookie, cache } = this;\n    var Variable = String(source.getVariable()).length > 0 ? source.getVariable() : '{}';\n    var get = JSON.parse(Variable);\n    return get[e];\n}\nfunction Put(data) {\n    const { java, source, cookie, cache } = this;\n    var Variable = String(source.getVariable()).length > 0 ? source.getVariable() : '{}';\n    var get = JSON.parse(Variable);\n    data = get['TC_to_SC'] == true ? java.t2s(data) : data;\n    return JSON.parse(data);\n}\nfunction Map(e) {\n    const { java, source, cookie, cache } = this;\n    var infomap = source.getLoginInfoMap();\n    var map = (infomap !== null && infomap.get(e) && String(infomap.get(e)).length > 0) ? infomap.get(e) : '';\n    return String(map);\n}\nfunction Num(e) {\n    e = String(e);\n    var num = e.length > 8 ? (e.substring(0, e.length - 8) + \"亿\") : (e.length > 4 ? (e.substring(0, e.length - 4) + \"万\") : e);\n    return num;\n}\nfunction sleep(milliseconds) {\n    var start = new Date().getTime();\n    while (new Date().getTime() - start < milliseconds) {\n    }\n}\nfunction Checkwait(e) {\n    while (e == '') {\n        sleep(10000);\n        return true;\n    }\n    return e;\n}\nfunction calculateRating(data) {\n    const { s1, s2, s3, s4, s5 } = data;\n    const total = s1 + s2 + s3 + s4 + s5;\n    const weightedTotal = s1 * 2 + s2 * 4 + s3 * 6 + s4 * 8 + s5 * 10;\n    const average = weightedTotal / total;\n    return Math.round(average * 10) / 10;\n}",
    "lastUpdateTime": "1741087422161",
    "loginCheckJs": "",
    "loginUi": "[\n  { name: \"代理：\", type: \"text\" },\n  { name: \"查看当前\", type: \"button\", action: \"look(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"查看历史\", type: \"button\", action: \"look(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"恢复默认\", type: \"button\", action: \"test(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁体搜索\", type: \"button\", action: \"search_TC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁简转换\", type: \"button\", action: \"TC_to_SC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"目录整理\", type: \"button\", action: \"settle()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换源站  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"①漫画柜❶\", type: \"button\", action: \"$(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"②漫画柜❷\", type: \"button\", action: \"$(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"༺ˇ»`ʚ  点击切换线路  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"自动\", type: \"button\", action: \"u(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"电信\", type: \"button\", action: \"u(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"联通\", type: \"button\", action: \"u(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换受众  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"o(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"少女\", type: \"button\", action: \"o(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"少年\", type: \"button\", action: \"o(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"青年\", type: \"button\", action: \"o(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"儿童\", type: \"button\", action: \"o(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"通用\", type: \"button\", action: \"o(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换地区  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"p(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"日本\", type: \"button\", action: \"p(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"国产\", type: \"button\", action: \"p(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"港台\", type: \"button\", action: \"p(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"欧美\", type: \"button\", action: \"p(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"韩国\", type: \"button\", action: \"p(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"其它\", type: \"button\", action: \"p(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n\n  { name: \"༺ˇ»`ʚ  点击切换进度  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"q(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"连载\", type: \"button\", action: \"q(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"完结\", type: \"button\", action: \"q(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换排序  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"更新\", type: \"button\", action: \"r(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"发布\", type: \"button\", action: \"r(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"最热\", type: \"button\", action: \"r(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"评分\", type: \"button\", action: \"r(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n\n  { name: \"༺ˇ»`ʚ  点击字母筛选  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全\", type: \"button\", action: \"s(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"A\", type: \"button\", action: \"s(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"B\", type: \"button\", action: \"s(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"C\", type: \"button\", action: \"s(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"D\", type: \"button\", action: \"s(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"E\", type: \"button\", action: \"s(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"F\", type: \"button\", action: \"s(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"G\", type: \"button\", action: \"s(7)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"H\", type: \"button\", action: \"s(8)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"I\", type: \"button\", action: \"s(9)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"J\", type: \"button\", action: \"s(10)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"K\", type: \"button\", action: \"s(11)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"L\", type: \"button\", action: \"s(12)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"M\", type: \"button\", action: \"s(13)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"N\", type: \"button\", action: \"s(14)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"O\", type: \"button\", action: \"s(15)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"P\", type: \"button\", action: \"s(16)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"Q\", type: \"button\", action: \"s(17)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"R\", type: \"button\", action: \"s(18)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"S\", type: \"button\", action: \"s(19)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"T\", type: \"button\", action: \"s(120\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"U\", type: \"button\", action: \"s(21)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"V\", type: \"button\", action: \"s(22)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"W\", type: \"button\", action: \"s(23)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"X\", type: \"button\", action: \"s(24)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"Y\", type: \"button\", action: \"s(25)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"Z\", type: \"button\", action: \"s(26)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"0-9\", type: \"button\", action: \"s(27)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n\n  { name: \"༺ˇ»`ʚ  点击切换年份  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"t(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2025\", type: \"button\", action: \"t(20)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2024\", type: \"button\", action: \"t(19)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2023\", type: \"button\", action: \"t(18)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2022\", type: \"button\", action: \"t(17)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2021\", type: \"button\", action: \"t(16)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2020\", type: \"button\", action: \"t(15)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2019\", type: \"button\", action: \"t(14)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2018\", type: \"button\", action: \"t(13)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2017\", type: \"button\", action: \"t(12)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2016\", type: \"button\", action: \"t(11)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2015\", type: \"button\", action: \"t(10)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2014\", type: \"button\", action: \"t(9)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2013\", type: \"button\", action: \"t(8)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2012\", type: \"button\", action: \"t(7)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2011\", type: \"button\", action: \"t(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2010\", type: \"button\", action: \"t(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"00年代\", type: \"button\", action: \"t(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"90年代\", type: \"button\", action: \"t(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"80年代\", type: \"button\", action: \"t(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"更早\", type: \"button\", action: \"t(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  {\n    name: \"💡　　 源　　 站　　 打　　 印　　 💡\",\n    type: \"button\",\n    action: \"test()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  }\n]",
    "loginUrl": "var fburl = '';\noriginal = {\n    'ci0': 0,\n    'ci1': 0,\n    'ci2': 0,\n    'ci3': 0,\n    'o': 0,\n    'p': 0,\n    'q': 0,\n    'r': 0,\n    's': 0,\n    't': 0,\n    'u': 0,\n    'search_TC': false,\n    'TC_to_SC': true,\n    'settle': false,\n    'url': 'https://www.manhuagui.com',\n    'urls': [\n        'https://www.manhuagui.com',\n        'https://www.manhuagui.com',\n        'https://tw.manhuagui.com'\n    ]\n};\ntry {\n    $$$ = JSON.parse(source.getVariable());\n    if ($$$ == null) {\n        error;\n    } else {\n        '';\n    };\n} catch (e) {\n    $$$ = original;\n    put($$$);\n}\nx = '⓪①②③④⑤⑥⑦⑧⑨⑩';\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nfunction test(e) {\n    if (e == undefined) {\n        return java.log('\\n' + JSON.stringify($$$['urls'], null, '\\t')) + login('【源站输出提示】' + n(2) + '源站已打印完毕，请到日志查看');\n    }\n    if (e == 0) {\n        login('【初始化提示】' + n(2) + '已恢复默认设置');\n        return put(original);\n    }\n    date1 = new Date().getTime();\n    html = java.ajax($$$.urls[e] + ',' + JSON.stringify(Option));\n    date2 = new Date().getTime();\n    t = date2 - date1;\n    time = t / 1000 + 's';\n    c = String(html).indexOf('漫画');\n    logTime = '【' + name(e) + '】\\n┋┋\\n' + '解析时间：' + time;\n    if (c == -1 || t > 30000) {\n        return login('【访问失败提示】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♣️源站已失效(可能被墙)♣️\\n┋┋\\n请更新网址/切换源站/切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else if (t < 1000) {\n        return login('【网络环境优良】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n❤️延迟低，推荐使用此站❤️\\n┋┋\\n网络环境优良，请继续保持状态\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else if (t >= 1000 && t < 2000) {\n        return login('【网络环境一般】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♦️延迟一般，勉强可使用♦️\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else if (t >= 2000 && t < 30000) {\n        return login('【网络环境堪忧】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♠延迟过高，不建议使用♠\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    }\n}\nfunction put(data) {\n    return source.setVariable(JSON.stringify(data, null, '\\t'));\n}\nfunction update() {\n    $$$['urls'].splice(4);\n    time = new Date().getTime();\n    host = java.get(fburl + '?t=' + time, Headers).header('location');\n    host = java.get(host, Headers).header('location');\n    host = String(host).replace(/\\/[^\\/]*$/, '');\n    if (String($$$['urls']).indexOf(host) === -1) {\n        java.log('\\n✅已添加源站：\\n' + host);\n        $$$['urls'].unshift(host);\n        put($$$);\n        $(0);\n    } else {\n        return test(1);\n    }\n}\nfunction name(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return x[e] + $$$.urls[e];\n}\nfunction login(e) {\n    if (e == undefined) {\n        return;\n    }\n    java.longToast(e);\n}\nfunction n(e) {\n    n = '\\n';\n    for (m = 1; m < e; m++) {\n        n = n + '\\n';\n    }\n    return n;\n}\nfunction k(e) {\n    k = ' ';\n    for (q = 1; q < e; q++) {\n        k = k + ' ';\n    }\n    return k;\n}\nfunction l(e) {\n    l = '';\n    for (o = 1; o < e; o++) {\n        l = l + '';\n    }\n    return l;\n}\nfunction look(e) {\n    if (e == 0) {\n        return login('【查看当前源站】\\n\\n┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋' + ('\\n ' + '📌' + name($$$.ci0)) + '\\n┋┋' + ('\\n' + '🧭当前线路：' + typeU($$$.u)) + '\\n┋┋' + ('\\n' + '🎯受众分类：' + typeO($$$.o)) + '\\n┋┋' + ('\\n' + '🗺当前地区：' + typeP($$$.p)) + '\\n┋┋' + ('\\n' + '⏲️漫画进度：' + typeQ($$$.q)) + '\\n┋┋' + ('\\n' + '📚标签排序：' + typeR($$$.r)) + '\\n┋┋' + ('\\n' + '📘字母筛选：' + typeS($$$.s)) + '\\n┋┋' + ('\\n' + '📅当前年份：' + typeT($$$.t)) + '\\n┋┋' + ('\\n🔍繁体搜索：' + ($$$.search_TC == true ? '开启' : '关闭')) + '\\n┋┋' + ('\\n📑繁简转换：' + ($$$.TC_to_SC == false ? '关闭' : '开启')) + '\\n┋┋' + ('\\n🗃目录整理：' + ($$$.settle == false ? '关闭' : '开启')) + '\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else {\n        return login('【查看历史接口】\\n\\n┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋' + ('\\n ci1：' + name($$$.ci1)) + '\\n┋┋' + ('\\n ci2：' + name($$$.ci2)) + '\\n┋┋' + ('\\n ci3：' + name($$$.ci3)) + '\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    }\n}\nfunction $(e) {\n    if (e == undefined) {\n        e = result['序号：'];\n        e = e > 0 ? e : '0';\n    }\n    if (/^ci[123]$/.test(e)) {\n        eval('i=$$$.' + e);\n    }\n    if (/\\D|^$/.test(e) || e < 0 || e >= $$$['urls'].length) {\n        return login('【源站错误提示】' + n(2) + '已选择的源站无效，请重新选择');\n    }\n    $$$['url'] = $$$['urls'][e];\n    $$$['ci3'] = $$$['ci2'];\n    $$$['ci2'] = $$$['ci1'];\n    $$$['ci1'] = $$$['ci0'];\n    $$$['ci0'] = e;\n    put($$$);\n    test(e);\n}\nO = ['全部','少女','少年','青年','儿童','通用'];\nfunction typeO(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return O[e];\n}\nfunction o(e) {\n    if (o == undefined) {\n        o = result.o;\n    }\n    if (e == $$$.o) {\n        return login('【受众切换提示】' + n(2) + '已经选择此受众，无需更换');\n    }\n    login('【受众切换提示】' + n(2) + '已经切换到[' + typeO(e) + ']受众');\n    $$$.o = e;\n    return put($$$);\n}\nP = ['全部','日本','国产','港台','欧美','韩国','其它'];\nfunction typeP(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return P[e];\n}\nfunction p(e) {\n    if (p == undefined) {\n        p = result.p;\n    }\n    if (e == $$$.p) {\n        return login('【地区切换提示】' + n(2) + '已经选择此地区，无需更换');\n    }\n    login('【地区切换提示】' + n(2) + '已经切换到[' + typeP(e) + ']地区');\n    $$$.p = e;\n    return put($$$);\n}\nQ = ['全部','连载','完结'];\nfunction typeQ(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return Q[e];\n}\nfunction q(e) {\n    if (q == undefined) {\n        q = result.q;\n    }\n    if (e == $$$.q) {\n        return login('【进度切换提示】' + n(2) + '已经选择此进度，无需更换');\n    }\n    login('【进度切换提示】' + n(2) + '已经切换到[' + typeQ(e) + ']进度');\n    $$$.q = e;\n    return put($$$);\n}\nR = ['更新','发布','最热','评分'];\nfunction typeR(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return R[e];\n}\nfunction r(e) {\n    if (r == undefined) {\n        r = result.r;\n    }\n    if (e == $$$.r) {\n        return login('【排序切换提示】' + n(2) + '已经选择此排序，无需更换');\n    }\n    login('【排序切换提示】' + n(2) + '已经切换到[' + typeR(e) + ']排序');\n    $$$.r = e;\n    return put($$$);\n}\nS = ['全部','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0-9'];\nfunction typeS(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return S[e];\n}\nfunction s(e) {\n    if (s == undefined) {\n        s = result.s;\n    }\n    if (e == $$$.s) {\n        return login('【筛选切换提示】' + n(2) + '已经选择此筛选，无需更换');\n    }\n    login('【筛选切换提示】' + n(2) + '已经切换到[' + typeS(e) + ']筛选');\n    $$$.s = e;\n    return put($$$);\n}\nT = ['全部','更早','80年代','90年代','00年代','2010年','2011年','2012年','2013年','2014年','2015年','2016年','2017年','2018年','2019年','2020年','2021年','2022年','2023年','2024年','2025年'];\nfunction typeT(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return T[e];\n}\nfunction t(e) {\n    if (t == undefined) {\n        t = result.t;\n    }\n    if (e == $$$.t) {\n        return login('【年份切换提示】' + n(2) + '已经选择此年份，无需更换');\n    }\n    login('【年份切换提示】' + n(2) + '已经切换到[' + typeT(e) + ']');\n    $$$.t = e;\n    return put($$$);\n}\nU = ['自动','电信','联通'];\nfunction typeU(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return U[e];\n}\nfunction u(e) {\n    if (u == undefined) {\n        u = result.u;\n    }\n    if (e == $$$.u) {\n        return login('【线路切换提示】' + n(2) + '已经选择此线路，无需更换');\n    }\n    login('【线路切换提示】' + n(2) + '已经切换到[' + typeU(e) + ']线路');\n    $$$.u = e;\n    return put($$$);\n}\nfunction search_TC() {\n    if (search_TC == undefined) {\n        search_TC = true;\n    }\n    if ($$$.search_TC == true) {\n        login('【繁体搜索提示】' + n(2) + '已关闭繁体搜索，请重新搜索');\n        $$$.search_TC = false;\n        put($$$);\n    } else {\n        login('【繁体搜索提示】' + n(2) + '已开启繁体搜索，请重新搜索');\n        $$$.search_TC = true;\n        put($$$);\n    }\n}\nfunction TC_to_SC() {\n    if (TC_to_SC == undefined) {\n        TC_to_SC = true;\n    }\n    if ($$$.TC_to_SC == true) {\n        login('【简繁转换提示】' + n(2) + '已关闭繁体转换，请刷新书籍');\n        $$$.TC_to_SC = false;\n        put($$$);\n    } else {\n        login('【简繁转换提示】' + n(2) + '已开启繁体转换，请刷新书籍');\n        $$$.TC_to_SC = true;\n        put($$$);\n    }\n}\nfunction settle() {\n    if (settle == undefined) {\n        settle = true;\n    }\n    if ($$$.settle == true) {\n        login('【目录整理提示】' + n(2) + '已关闭目录整理，请刷新目录');\n        $$$.settle = false;\n        put($$$);\n    } else {\n        login('【目录整理提示】' + n(2) + '已开启目录整理，请刷新目录');\n        $$$.settle = true;\n        put($$$);\n    }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "canReName": "reName",
      "coverUrl": "cover",
      "downloadUrls": "durl",
      "init": "<js>\neval(String(source.loginUrl));\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nif (String(book['author']) !== \"xiaohan231\") {\n    var J = org.jsoup.Jsoup.parse(result);\n    var $2 = element => String(java.getElements(element).text());\n    var $3 = element => String(J.select(element).attr('src'));\n    url = baseUrl;\n    {{java.importScript(\"https://gcore.jsdelivr.net/npm/lz-string@1.4.4/libs/lz-string.min.js\")}}\n    var VIEWSTATE = String(java.getElements('#__VIEWSTATE') ? LZString.decompressFromBase64(String(java.getElements('#__VIEWSTATE').attr('value')).replace(/\\s/g, '')) : '');\n    java.put('VIEWSTATE',VIEWSTATE);\n    var others = [];\n    var others1 = [];\n    var chapter = VIEWSTATE.length > 5 ? org.jsoup.Jsoup.parse(VIEWSTATE) : java.getElements('.chapter');\n    var klist = chapter.select('.chapter-list');\n    var vlist = chapter.select('h4');\n    for (i in vlist) {\n        others.push(String('\\n[' + i + ']' + vlist[i].text() + '〔' + klist[i].select('li').length + '章〕'));\n        others1.push(vlist[i].text());\n    }\n    other = others.length > 1 ? ('📋全部目录：' + others.join(' ') + '\\nㅤ\\n') : '';\n    var index = book.getVariable(\"custom\") > 0 ? book.getVariable(\"custom\") : '0';\n    s = '';\n    var data = JSON.parse(java.ajax(Get('url') + '/tools/vote.ashx?act=get&bid=' + baseUrl.match(/comic\\/(\\d+)\\//)[1])).data;\n    var num = data.s1 + data.s2 + data.s3 + data.s4 + data.s5;\n    k = '★ ' + calculateRating(data) + '(' + num + ')' + ',' + $2('span:contains(漫画状态：) span.0').replace(/[中已]/, '') + ',' + $2('span:contains(出品年代：) a.0') + ',' + $2('span:contains(漫画地区：) a.0') + ',' + $2('span:contains(漫画剧情：)').replace(/漫画剧情：/, '').replace(/\\s*\\,\\s*/g, ',');\n    t = $2('span:contains(漫画状态：) span.1');\n    l = $2('span:contains(漫画状态：) a');\n    l = String(l);\n    l = Get('settle') == true ? l.replace(/\\s-\\s|-/g, ' ').replace(/\\s+/, ' ').replace(/.*第(\\d+)[话話章回期](|\\s)第.*?[话話章回期]/, '$1').replace(/.*第(\\d+)[话話章回期][^\\s]/, '$1 ').replace(/.*第(\\d+)[话話章回期]\\s\\d+/, '$1').replace(/.*第.*(\\d+).*?[话話章回期]/, '$1').replace(/(\\d+)/, l.match(/\\d+/) ? l.match(/(\\d+)/)[1].padStart(3, '0') : '$1') : l;\n    Setting = '\\n📌当前源站：' + (Get('ci1') == 0 ? '〖默认〗' : '〖更新〗') + x[Get('ci0')] + (Get('url').length > 26 ? Get('url').substring(0, 26) + \"<br>\" + Get('url').substring(26) : Get('url')) + ('\\n🧭当前线路：〖' + (Get('u') == 0 ? '默认' : '自选') + '〗' + U[Get('u')]) + ('\\n🎯受众分类：〖' + (Get('o') == 0 ? '默认' : '自选') + '〗' + O[Get('o')]) + ('\\n🗺当前地区：〖' + (Get('p') == 0 ? '默认' : '自选') + '〗' + P[Get('p')]) + ('\\n⏲️漫画进度：〖' + (Get('q') == 0 ? '默认' : '自选') + '〗' + Q[Get('q')]) + ('\\n📚标签排序：〖' + (Get('r') == 0 ? '默认' : '自选') + '〗' + R[Get('r')]) + ('\\n📘字母筛选：〖' + (Get('s') == 0 ? '默认' : '自选') + '〗' + S[Get('s')]) + ('\\n📅当前年份：〖' + (Get('t') == 0 ? '默认' : '自选') + '〗' + T[Get('t')]) + ('\\n📒当前目录：〖' + (index == 0 ? '默认' : '自选') + '〗' + others1[index]) + ('\\n🔍繁体搜索：' + (Get('search_TC') == true ? '〖自选〗开启' : '〖默认〗关闭')) + ('\\n📑繁简转换：' + (Get('TC_to_SC') == true ? '〖默认〗开启' : '〖自选〗关闭')) + ('\\n🗃目录整理：' + (Get('settle') == true ? '〖自选〗开启' : '〖默认〗关闭'));\n    changeLog = '\\nㅤ\\nㅤ\\n' + Setting + '\\nㅤ\\n';\n    book = JSON.stringify({\n        'name': $2('h1'),\n        'author': $2('span:contains(漫画作者：)').replace(/漫画作者：/, '').replace(/\\s*\\,\\s*/g, '/'),\n        'kind': s + ',' + k,\n        'word': '',\n        'latest': l + '〔' + t + '〕',\n        'intro': (t != '' ? ('更新时间：' + t + '\\nㅤ\\n') : '') + other + '\\n' + $2('#intro-all p').replace(/.*(介绍|简介|漫画).*[:：]/, '').replace(/(^)/g, '$1<br>') + changeLog,\n        'cover': $3('.hcover img').replace(/.*\\/\\//, 'https://'),\n        'url': url,\n        'durl': '',\n        'reName': true\n    });\n} else {\n    (function Book() {\n        apiBaseUrl = cache.get(java.md5Encode16('cache_api_' + Get('url')));\n        json = java.ajax(apiBaseUrl);\n        Title = JSON.parse(json)['title'];\n        Intro = cache.get(java.md5Encode16('User' + Get('url'))) == 'y' ? JSON.parse(json)['intro1'] : JSON.parse(json)['intro'];\n        return { Title: Title, Intro: Intro };\n    }());\n    book = JSON.stringify({\n        'kind': book['kind'],\n        'latest': Title[Title.length - 1],\n        'intro': Intro[0]\n    });\n}\nPut(book);\n</js>",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "tocUrl": "url",
      "wordCount": "word"
    },
    "ruleContent": {
      "content": "<js>\nif (String(book['author']) !== \"xiaohan231\") {\n    {{java.importScript(\"https://gcore.jsdelivr.net/npm/lz-string@1.4.4/libs/lz-string.min.js\")}}\n    String.prototype.splic = function (f) {\n        return LZString.decompressFromBase64(this).split(f)\n    };\n    var jsp = String(java.getElement(\"body > script:not([src]).-1\").html()).replace(/window.*?\\]/,'');\n    var data = String(eval(String(jsp))).match(/\\((.*?)\\)\\./)[1];\n    var res = JSON.parse(data);\n    var list = res.files;\n    var h = ['eu1','eu2','us'];\n    var result='';\n    for (i in list) {\n        var imgurl = 'https://' + h[Get('u')] + '.hamreus.com' + res.path + list[i] + '?e=' + res.sl.e + '&m=' + res.sl.m;\n        result +='<img src=\"' + imgurl + ',{\"headers\":{\"Referer\":\"' + Get('url') + '/\"}}\">\\n';\n    }\n} else {\n    if (baseUrl.includes('/yc/')) {\n        '<br><img src=\"https://qyyuapi.com/j-img/' + title.replace(/〔.*$/, \"\") + '.jpg\">';\n    } else {\n        '<br><img src=\"https://qyyuapi.com/img/' + title.replace(/〔.*$/, \"\") + '.jpg\">';\n    }\n}\n</js>",
      "imageStyle": "FULL",
      "nextContentUrl": "",
      "replaceRegex": "",
      "sourceRegex": ""
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "<js>\nvar _0x4742=[\"YWVzQmFzZTY0RGVjb2RlVG9TdHJpbmc=\",\"dmFyaWFibGVDb21tZW50\",\"IyMjI3hpYW8taGFuJiYmJg==\",\"QUVTL0VDQi9QS0NTN1BhZGRpbmc=\"],_0xc7ef=function(_0x474281,_0xc7ef55){_0x474281=_0x474281-0x0;var _0x1db329=_0x4742[_0x474281];if(_0xc7ef.xhTBFx===void 0x0){(function(){var _0x1c36ea=function(){var _0x2bf78c;try{_0x2bf78c=Function(\"return (function() {}.constructor(\\\"return this\\\")( ));\")()}catch(_0xcfd8ec){_0x2bf78c=window}return _0x2bf78c},_0xfc2bd5=_0x1c36ea(),_0x336b66=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";_0xfc2bd5.atob||(_0xfc2bd5.atob=function(_0x53f773){var _0x31bc68=String(_0x53f773).replace(new RegExp(\"=+$\",\"\"),\"\"),_0x393f6b=\"\";for(var _0x2aec0d=0x0,_0x2d3c6f,_0x1587ad,_0x4c8021=0x0;_0x1587ad=_0x31bc68.charAt(_0x4c8021++);~_0x1587ad&&(_0x2d3c6f=_0x2aec0d%0x4?_0x2d3c6f*0x40+_0x1587ad:_0x1587ad,_0x2aec0d++%0x4)?_0x393f6b+=String.fromCharCode(0xff&_0x2d3c6f>>(-0x2*_0x2aec0d&0x6)):0x0)_0x1587ad=_0x336b66.indexOf(_0x1587ad);return _0x393f6b})})();_0xc7ef.ylPppH=function(_0x1cf9a9){var _0x1bdc89=atob(_0x1cf9a9),_0x3d0935=[];for(var _0x58ca16=0x0,_0x45cb33=_0x1bdc89.length;_0x58ca16<_0x45cb33;_0x58ca16++)_0x3d0935+=\"%\"+(\"00\"+_0x1bdc89.charCodeAt(_0x58ca16).toString(0x10)).slice(-0x2);return decodeURIComponent(_0x3d0935)};_0xc7ef.WMElMN={};_0xc7ef.xhTBFx=!0x0}var _0x191547=_0xc7ef.WMElMN[_0x474281];_0x191547===void 0x0?(_0x1db329=_0xc7ef.ylPppH(_0x1db329),_0xc7ef.WMElMN[_0x474281]=_0x1db329):_0x1db329=_0x191547;return _0x1db329};eval(String(java[_0xc7ef(\"0x0\")](source[_0xc7ef(\"0x1\")],_0xc7ef(\"0x2\"),_0xc7ef(\"0x3\"),\"\")));\nvar User = '';\nvar Title = '';\nvar Link = '';\nvar Intro = '';\nuser_Check();\nvar data = [];\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nUser = Checkwait(User);\nif (User == true) {\n    if (baseUrl.includes('/d30')) {\n        var list =  java.getElements('.latest-list li');\n        for (i in list) {\n            name = list[i].select('.ell').text();\n            kind = /\"sl\"/.test(list[i]) ? '连载' : '完结';\n            latest = String(list[i].select('.tt').text()).replace(/更新至|^共/, '') + String('〔' + String(list[i].select('.dt').text()) + '〕').replace(/〔〕/, '');\n            data.push({\n                'name': name,\n                'author': '',\n                'kind': kind,\n                'word': '',\n                'latest': latest,\n                'intro': '',\n                'cover': String(list[i].select('.ell a').attr('href')).replace(/\\/comic/, 'https:////cf.mhgui.com/cpic/b').replace(/\\/$/, '.jpg'),\n                'url': Get('url') + list[i].select('.ell a').attr('href')\n            });\n        }\n        Data();\n    }\n    if (baseUrl.includes('/rank/')) {\n        var list =  java.getElements('tbody tr');\n        for (i in list) {\n            name = list[i].select('h5').text();\n            author = list[i].select('.rank-author').text();\n            kind = list[i].select('.rank-score').text() + ',' + list[i].select('.cRed').text() + ',NO:' + list[i].select('.rank-no').text() + ',' + (/\"trend-up\"/.test(list[i]) ? '🔺' : '🔻');\n            latest = String(list[i].select('.rank-update').text()) + String('〔' + String(list[i].select('.rank-time').text()) + '〕').replace(/〔〕/, '');\n            data.push({\n                'name': name,\n                'author': author,\n                'kind': kind,\n                'word': '',\n                'latest': latest,\n                'intro': '',\n                'cover': String(list[i].select('h5 a').attr('href')).replace(/\\/comic/, 'https:////cf.mhgui.com/cpic/b').replace(/\\/$/, '.jpg'),\n                'url': Get('url') + list[i].select('h5 a').attr('href')\n            });\n        }\n        Data();\n    }\n    if (baseUrl.includes('/list/')) {\n        var list =  java.getElements('#contList li');\n        for (i in list) {\n            name = list[i].select('.ell').text();\n            kind = list[i].select('.updateon em').text() + ',' + (/\"sl\"/.test(list[i]) ? '连载' : '完结');\n            latest = String(list[i].select('.tt').text()).replace(/更新至|^共/, '') + String('〔' + String(list[i].select('.updateon').text()).replace(/更新于：/, '').replace(/(\\d{4}-\\d{2}-\\d{2}).*/, '$1') + '〕').replace(/〔〕/, '');\n            data.push({\n                'name': name,\n                'author': '',\n                'kind': kind,\n                'word': '',\n                'latest': latest,\n                'intro': '',\n                'cover': String(list[i].select('.ell a').attr('href')).replace(/\\/comic/, 'https:////cf.mhgui.com/cpic/b').replace(/\\/$/, '.jpg'),\n                'url': Get('url') + list[i].select('.ell a').attr('href')\n            });\n        }\n        var next = java.ajax(baseUrl.replace(/_p(\\d+)/, function(match, p1) {return '_p' + (parseInt(p1) + 1);}) + ',' + JSON.stringify(Option));\n        var next_1 = org.jsoup.Jsoup.parse(next);\n        if (!list[0] || next_1.select('#contList li')[0]) {\n            Data();\n        }\n    }\n    data = JSON.stringify(data);\n} else {\n    data = Data();\n}\nPut(data);\n</js>",
      "bookUrl": "url",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\nvar _0x4742=[\"YWVzQmFzZTY0RGVjb2RlVG9TdHJpbmc=\",\"dmFyaWFibGVDb21tZW50\",\"IyMjI3hpYW8taGFuJiYmJg==\",\"QUVTL0VDQi9QS0NTN1BhZGRpbmc=\"],_0xc7ef=function(_0x474281,_0xc7ef55){_0x474281=_0x474281-0x0;var _0x1db329=_0x4742[_0x474281];if(_0xc7ef.xhTBFx===void 0x0){(function(){var _0x1c36ea=function(){var _0x2bf78c;try{_0x2bf78c=Function(\"return (function() {}.constructor(\\\"return this\\\")( ));\")()}catch(_0xcfd8ec){_0x2bf78c=window}return _0x2bf78c},_0xfc2bd5=_0x1c36ea(),_0x336b66=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";_0xfc2bd5.atob||(_0xfc2bd5.atob=function(_0x53f773){var _0x31bc68=String(_0x53f773).replace(new RegExp(\"=+$\",\"\"),\"\"),_0x393f6b=\"\";for(var _0x2aec0d=0x0,_0x2d3c6f,_0x1587ad,_0x4c8021=0x0;_0x1587ad=_0x31bc68.charAt(_0x4c8021++);~_0x1587ad&&(_0x2d3c6f=_0x2aec0d%0x4?_0x2d3c6f*0x40+_0x1587ad:_0x1587ad,_0x2aec0d++%0x4)?_0x393f6b+=String.fromCharCode(0xff&_0x2d3c6f>>(-0x2*_0x2aec0d&0x6)):0x0)_0x1587ad=_0x336b66.indexOf(_0x1587ad);return _0x393f6b})})();_0xc7ef.ylPppH=function(_0x1cf9a9){var _0x1bdc89=atob(_0x1cf9a9),_0x3d0935=[];for(var _0x58ca16=0x0,_0x45cb33=_0x1bdc89.length;_0x58ca16<_0x45cb33;_0x58ca16++)_0x3d0935+=\"%\"+(\"00\"+_0x1bdc89.charCodeAt(_0x58ca16).toString(0x10)).slice(-0x2);return decodeURIComponent(_0x3d0935)};_0xc7ef.WMElMN={};_0xc7ef.xhTBFx=!0x0}var _0x191547=_0xc7ef.WMElMN[_0x474281];_0x191547===void 0x0?(_0x1db329=_0xc7ef.ylPppH(_0x1db329),_0xc7ef.WMElMN[_0x474281]=_0x1db329):_0x1db329=_0x191547;return _0x1db329};eval(String(java[_0xc7ef(\"0x0\")](source[_0xc7ef(\"0x1\")],_0xc7ef(\"0x2\"),_0xc7ef(\"0x3\"),\"\")));\nvar User = '';\nvar Title = '';\nvar Link = '';\nvar Intro = '';\nuser_Check();\nvar data = [];\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nUser = Checkwait(User);\nif (User == true) {\n    var list =  java.getElements('.book-result li');\n    for (i in list) {\n        name = list[i].select('dt').text();\n        kind = '★ ' + list[i].select('.score-avg strong').text() + '(' + list[i].select('.score-num strong').text() + ')' + ',' + String(list[i].select('span:contains(状态：)').select('span')[1].text()).replace(/[中已]/, '') + ',' + String(list[i].select('span:contains(年份：)').text()).replace(/年份：/, '') + ',' + String(list[i].select('span:contains(地区：)').text()).replace(/地区：/, '') + ',' + String(list[i].select('span:contains(类型：)').text()).replace(/类型：/, '');\n        latest = list[i].select('.blue').text() + '〔' + list[i].select('span:contains(状态：)').select('span')[2].text() + '〕';\n        data.push({\n            'name': name,\n            'author': String(list[i].select('.tags:contains(作者：)').text()).replace(/作者：/, '').replace(/\\,/g, '/'),\n            'kind': kind,\n            'word': '',\n            'latest': latest,\n            'intro': String(list[i].select('.intro').text()).replace(/简介：|\\[详情\\]/g, ''),\n            'cover': list[i].select('.bcover img').attr('src'),\n            'url': Get('url') + list[i].select('.bcover').attr('href')\n        });\n    }\n    var next = java.ajax(baseUrl.replace(/_p(\\d+)/, function(match, p1) {return '_p' + (parseInt(p1) + 1);}) + ',' + JSON.stringify(Option));\n    var next_1 = org.jsoup.Jsoup.parse(next);\n    var searchkey = java.get(java.md5Encode16(Get('url') + \"searchkey\"));\n    if (!list[0] || !next_1.select('.book-result li')[0] || /书源|使用|说明|書源|說明/.test(searchkey)) {\n        Data();\n    }\n    data = JSON.stringify(data);\n} else {\n    data = Data();\n}\nPut(data);\n</js>",
      "bookUrl": "url",
      "checkKeyWord": "我的",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleToc": {
      "chapterList": "<js>\nvar _0x4742=[\"YWVzQmFzZTY0RGVjb2RlVG9TdHJpbmc=\",\"dmFyaWFibGVDb21tZW50\",\"IyMjI3hpYW8taGFuJiYmJg==\",\"QUVTL0VDQi9QS0NTN1BhZGRpbmc=\"],_0xc7ef=function(_0x474281,_0xc7ef55){_0x474281=_0x474281-0x0;var _0x1db329=_0x4742[_0x474281];if(_0xc7ef.xhTBFx===void 0x0){(function(){var _0x1c36ea=function(){var _0x2bf78c;try{_0x2bf78c=Function(\"return (function() {}.constructor(\\\"return this\\\")( ));\")()}catch(_0xcfd8ec){_0x2bf78c=window}return _0x2bf78c},_0xfc2bd5=_0x1c36ea(),_0x336b66=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";_0xfc2bd5.atob||(_0xfc2bd5.atob=function(_0x53f773){var _0x31bc68=String(_0x53f773).replace(new RegExp(\"=+$\",\"\"),\"\"),_0x393f6b=\"\";for(var _0x2aec0d=0x0,_0x2d3c6f,_0x1587ad,_0x4c8021=0x0;_0x1587ad=_0x31bc68.charAt(_0x4c8021++);~_0x1587ad&&(_0x2d3c6f=_0x2aec0d%0x4?_0x2d3c6f*0x40+_0x1587ad:_0x1587ad,_0x2aec0d++%0x4)?_0x393f6b+=String.fromCharCode(0xff&_0x2d3c6f>>(-0x2*_0x2aec0d&0x6)):0x0)_0x1587ad=_0x336b66.indexOf(_0x1587ad);return _0x393f6b})})();_0xc7ef.ylPppH=function(_0x1cf9a9){var _0x1bdc89=atob(_0x1cf9a9),_0x3d0935=[];for(var _0x58ca16=0x0,_0x45cb33=_0x1bdc89.length;_0x58ca16<_0x45cb33;_0x58ca16++)_0x3d0935+=\"%\"+(\"00\"+_0x1bdc89.charCodeAt(_0x58ca16).toString(0x10)).slice(-0x2);return decodeURIComponent(_0x3d0935)};_0xc7ef.WMElMN={};_0xc7ef.xhTBFx=!0x0}var _0x191547=_0xc7ef.WMElMN[_0x474281];_0x191547===void 0x0?(_0x1db329=_0xc7ef.ylPppH(_0x1db329),_0xc7ef.WMElMN[_0x474281]=_0x1db329):_0x1db329=_0x191547;return _0x1db329};eval(String(java[_0xc7ef(\"0x0\")](source[_0xc7ef(\"0x1\")],_0xc7ef(\"0x2\"),_0xc7ef(\"0x3\"),\"\")));\nvar User = '';\nvar Title = '';\nvar Link = '';\nvar Intro = '';\nuser_Check();\nvar data = [];\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nif (String(book['author']) !== \"xiaohan231\") {\n    var index = book.getVariable(\"custom\") > 0 ? book.getVariable(\"custom\") : '0';\n    var date = java.getElements('span:contains(漫画状态：) span.1').text();\n    var newtitle = java.getElements('span:contains(漫画状态：) a').text();\n    var VIEWSTATE = String(java.get('VIEWSTATE'));\n    var chapter = VIEWSTATE.length > 5 ? org.jsoup.Jsoup.parse(VIEWSTATE) : java.getElements('.chapter');\n    var klist = chapter.select('.chapter-list')[index];\n    var list0 = klist.select('ul');\n    for (h in list0) {\n        var list = Array.from(list0[h].select('li a')).reverse();\n        for (i in list) {\n            title = list[i].attr('title') + String(list[i].text()).replace(/.*?(\\d+p)$/,'($1)');\n            title0 = title;\n            order = title.match(/(\\d+)/);\n            title = Get('settle') == true ? String(title).replace(/(-|_|\\s-\\s)/g, ' ').replace(/\\s-\\s|-/g, ' ').replace(/\\s+/, ' ').replace(/.*第(\\d+)[话話章回期](|\\s)第.*?[话話章回期]/, '$1').replace(/.*第(\\d+)[话話章回期][^\\s]/, '$1 ').replace(/.*第(\\d+)[话話章回期]\\s\\d+/, '$1').replace(/.*第.*(\\d+).*?[话話章回期]/, '$1').replace(/(\\d+)/, title.match(/\\d+/) ? order[1].padStart(3, '0') : '$1') : title;\n            data.push({\n                'title': title0.includes(newtitle) ? title + '〔' + date + '〕' : title,\n                'link': Get('url') + list[i].attr('href')\n            });\n        }\n    }\n    data = JSON.stringify(data);\n} else {\n    data = Data1();\n}\nPut(data);\n</js>",
      "chapterName": "title",
      "chapterUrl": "link",
      "preUpdateJs": "if (!String(book.bookUrl).includes(Get('url'))) {\n    book.bookUrl = String(book.bookUrl).replace(/.*\\/\\/[^\\/]+/g, Get('url'));\n    book.tocUrl = String(book.tocUrl).replace(/.*\\/\\/[^\\/]+/g, Get('url'));\n    java.refreshTocUrl();\n}",
      "updateTime": ""
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\n(function (e) {\n    if (Get('search_TC') == true || e.indexOf('TC') > -1) {\n        e = String(java.s2t(e)).replace(/TC/, '');\n    }\n    java.put(java.md5Encode16(Get('url') + \"searchkey\"), e);\n    return Get('url') + '/s/' + e + get('so',Get('r')) + '_p{{page}}.html';\n}(key));\n</js>",
    "variableComment": "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",
    "weight": 0
  }
]