[
  {
    "bookSourceComment": "\n使用登录功能切换模式和域名，切换后需手动刷新\n\n刷新方法：长按跳出菜单 --> 点击刷新",
    "bookSourceGroup": "🔞",
    "bookSourceName": "UAA 修改版",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.uaa.com##主域名，需要梯子",
    "customOrder": 21,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nvar discoveryData = {\n  novel: {\n    topTitle: \"🔖小说专区🔖\",\n    order: [\"最新上架\", \"最近更新\", \"最多观看\", \"最多收藏\"],\n    cateTitle: \"🏷小说分类🏷\",\n    cate: [\"都市\", \"校园\", \"乱伦\", \"玄幻\", \"系统\", \"穿越\", \"武侠\", \"奇幻\", \"乡村\", \"历史\", \"明星\", \"科幻\", \"同人\"],\n    tagTitle: \"🏷标签🏷\",\n    tag: [\"1v1\", \"BE\", \"Futa\", \"HE\", \"NP\", \"NTL\", \"NTR\", \"SM\", \"暗黑\", \"百合\", \"变装\", \"病娇\", \"产奶\", \"痴女\", \"触手\", \"纯爱\", \"粗口\", \"催眠\", \"耽美\", \"道具\", \"调教\", \"反差\", \"父女\", \"复仇\", \"改造\", \"搞笑\", \"公媳\", \"狗血\", \"骨科\", \"好文笔\", \"后宫\", \"监禁\", \"交换伴侣\"]\n  },\n  audio: {\n    topTitle: \"🔖听书专区🔖\",\n    cateTitle: \"🏷听书分类🏷\",\n    cate: [\"有声小说\", \"淫词艳曲\", \"激情骚麦\", \"寸止训练\"],\n    authorTitle: \"🏷作者标签🏷\",\n    authors: [\"小苮儿\", \"曼曼\", \"点心\", \"小窈\", \"小咪\", \"戴逸\", \"雅朵\", \"小野猫\", \"步非烟\", \"小瑶\", \"姽狐\", \"芯媛\", \"小美\", \"浅浅\", \"沙拉\", \"萱妹\", \"Rain\", \"南征\", \"小筝\", \"小琳\", \"林三岁\", \"叶倩彤\", \"秋水\", \"Mini姐\", \"戴猫耳的大魔王\", \"源源\", \"青梅\", \"嫣然\", \"小爽\", \"大宝\", \"Rainnight.雨\", \"小颦\", \"楪祈\", \"小一熟了吗\", \"小晶晶软糖\", \"李二狗\", \"绝色\", \"梦瑶\", \"紫洛\", \"小晴\", \"想睡觉\", \"宋恩\", \"小优\", \"墨白\", \"小媚\", \"魅惑\", \"鹿梧\", \"偷听\", \"狐姬\", \"柳瑶\"],\n    rankTitle: \"🏷排行榜🏷\",\n    rank: [\"周榜\", \"月榜\", \"年榜\", \"热门\"]\n  },\n  comic: {\n    topTitle: \"🔖漫画专区🔖\",\n    area: [\"全部\", \"日本\", \"韩漫\"],\n    cate: [\"短篇\", \"单本\", \"同人\", \"剧情\", \"校园\", \"爱情\", \"BL\", \"奇幻\", \"调教\", \"乱伦\"],\n    status: [\"全部\", \"已完结\", \"连载中\"],\n    tag: {\n      \"全部彩色\": \"\",\n      \"女主\": \"orientation=2\",\n      \"原创首发\": \"source=1\"\n    },\n    rankTitle: \"🏷排行榜🏷\",\n    rank: [\"周榜\", \"月榜\", \"年榜\", \"收藏\"]\n  },\n  video: {\n    topTitle: \"🔖视频专区🔖\",\n    order: [, \"最新排行\", , \"观看排行\", \"收藏排行\"], // 不要删除多余逗号\n    cate: [\"国产视频\", \"日本AV\", \"H动漫\"],\n    tagTitle: \"🏷标签🏷\",\n    tag: [\"自拍偷拍\", \"主播福利\", \"丝袜网袜\", \"泳装水着\", \"JK制服\", \"女仆\", \"吊带袜\", \"兔女郎\", \"少女萝莉\", \"白虎\", \"苗条\", \"美腿美脚\", \"美臀\", \"熟女\", \"巨乳\", \"颜射\", \"肛交\", \"潮吹\", \"口交\", \"69\", \"乳交\", \"内射中出\", \"捆绑调教\", \"痴女痴汉\", \"强奸轮奸\", \"3P群交\", \"奇异催眠\", \"出轨\", \"NTR\", \"医生护士\", \"空中女郎\", \"未亡人\", \"老师校园\", \"人妻主妇\", \"OL\", \"姐姐妹妹\", \"母亲女儿\", \"TS人妖\", \"女高中生\"]\n  }\n}\n\n\nlet type = String(source.getVariable())?.split(\",\")?.[0] || 0;\njava.toast(\"type：\"+type)\nlet list = [];\nconst typeSort = [\n  \"novel\",\n  \"comic\",\n  \"video\",\n  \"audio\"\n ]\n\nconst push = (title, url, type1, type2) => {\n  list.push({\n    title: title,\n    url: url,\n    style: {\n      layout_flexGrow: type1,\n      layout_flexBasisPercent: type2\n    }\n  });\n};\n\nlet { novel, audio, comic, video } = discoveryData;\nif (typeSort[type] === \"novel\") {\n  let url = `{{getUrl()}}api/novel/app/novel/search?`;\n  push(novel.topTitle, null, 1, 1);\n  novel.order.forEach((order, i) => {\n    push(order, `${url}page={{page}}&size=20&orderType=${i + 1}`, 1, 0.35);\n  });\n  push(novel.cateTitle, null, 1, 1);\n  novel.cate.forEach(cat => {\n    push(cat, `${url}category=${cat}&page={{page}}&size=20`, 1, 0.25);\n  });\n  push(novel.tagTitle, null, 1, 1);\n  novel.tag.forEach(tag => {\n    push(tag, `${url}includeTags=${tag}&page={{page}}&size=20`, 1, 0.25);\n  });\n}\nelse if (typeSort[type] === \"audio\") {\n  push(audio.topTitle, null, 1, 1);\n  push(audio.cateTitle, null, 1, 1);\n  audio.cate.forEach(cat => {\n    push(cat, `{{getUrl()}}api/audio/app/audio/search?category=${cat}&page={{page}}&size=25`, 1, 0.4);\n  });\n  push(audio.authorTitle, null, 1, 1);\n  audio.authors.forEach(author => {\n    push(author, `{{getUrl()}}api/audio/app/audio/search?author=${author}&sort=3&searchType=1&page={{page}}&size=25`, 1, 0.25);\n  });\n  push(audio.rankTitle, null, 1, 1);\n  audio.rank.forEach((rank, i) => {\n    push(rank, `{{getUrl()}}api/audio/app/audio/rank?page={{page}}&type=${i + 1}&size=25`, 1, 0.4);\n  });\n}\nelse if (typeSort[type] === \"comic\") {\n  let url = `{{getUrl()}}api/comic/app/comic/search?`;\n  push(comic.topTitle, null, 1, 1);\n  comic.area.forEach((area, arigin) => {\n    push(area, `${url}origin=${arigin || \"\"}&page={{page}}&size=25`, 1, 0.39);\n  });\n  comic.cate.forEach(cat => {\n    push(cat, `${url}category=${cat}&page={{page}}&size=25`, 1, 0.25);\n  });\n  const finished = [\"\", 1, 0];\n  comic.status.forEach((status, i) => {\n    push(status, `${url}finished=${finished[i]}&page={{page}}&size=25`, 1, 0.39);\n  });\n  for (let [tag, value] of Object.entries(comic.tag)) {\n    push(tag, `${url}${value}&page={{page}}&size=25`, 1, 0.25);\n  }\n  push(comic.rankTitle, null, 1, 1);\n  comic.rank.forEach((rank, i) => {\n    push(rank, `{{getUrl()}}api/comic/app/comic/rank?page={{page}}&type=${i + 1}&size=25`, 1, 0.25);\n  });\n}\nelse if (typeSort[type] === \"video\") {\n  let url = `{{getUrl()}}api/video/app/video/search?`;\n  push(video.topTitle, null, 1, 1);\n  for (let i = 0; i < video.order.length; i++) {\n    let order = video.order[i];\n    if (!order) continue;\n    push(order, `${url}category=&orderType=${i}&page={{page}}&searchType=1&size=40`, 1, 0.25);\n  };\n  video.cate.forEach((cat, index) => {\n    push(cat, `${url}orderType=1&origin=${index + 1}&page={{page}}&searchType=1&size=40`, 1, 0.25);\n  });\n  push(video.tagTitle, null, 1, 1);\n  video.tag.forEach(tag => {\n    push(tag, `${url}tag=${tag}&page={{page}}&searchType=1&size=40`, 1, 0.25);\n  });\n}\nelse {\n\t java.toast(\"类型出错，请用登录功能重新选择类型！！！\")\n}\n\nJSON.stringify(list, null, 2)",
    "header": "@js:\nJSON.stringify({\n  'User-Agent': \"Mozilla/5.0 (Linux; Android 15; V2304A Build/AP3A.240905.015.A2; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/132.0.6834.163 Mobile Safari/537.36\",\n  'sec-ch-ua-platform': \"\\\"Android\\\"\",\n  'origin': getUrl(),\n  'x-requested-with': \"cn.mujiankeji.mbrowser\",\n  'Referer': getUrl(),\n  'Accept-language': \"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\"\n})",
    "jsLib": "var host = [\n  \"https://www.uaa001.com/\",\n  \"https://www.uaa002.com/\",\n\t\"https://www.uaa003.com/\",\n\t\"https://www.uaa004.com/\",\n\t\"https://www.uaa005.com/\",\n\t\"https://www.uaa202410.com/\"\n]\n\nfunction getUrl() {\n\t let v = String(this.source.getVariable());\n  let code = v.split(\",\")[1] || 0;\n  return host[code]\n}\n\nvar ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0';",
    "lastUpdateTime": "1745846299577",
    "loginUi": "[\n{\n\"name\": \"🔺登　录🔺\",\n\"type\": \"button\",\n\"action\": \"login(true)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.39\n}\n},\n{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },\n{\n\"name\": \"⚙️ 当前模式 ⚙️\",\n\"type\": \"button\",\n\"action\": \"K()\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 1\n}\n},\n{\n\"name\": \"❗小说❗\",\n\"type\": \"button\",\n\"action\": \"M(0)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.39\n}\n},\n{\n\"name\": \"❗漫画❗\",\n\"type\": \"button\",\n\"action\": \"M(1)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.39\n}\n},\n{\n\"name\": \"❗视频❗\",\n\"type\": \"button\",\n\"action\": \"M(2)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.39\n}\n},\n{\n\"name\": \"❗听书❗\",\n\"type\": \"button\",\n\"action\": \"M(3)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.39\n}\n},\n{\n\"name\":\"❗ ⚙️ 当前 域名 ⚙️ ❗\",\n\"type\":\"button\",\n\"action\":\"H()\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 1\n}\n},\n{\n\"name\":\"0⃣️\",\n\"type\":\"button\",\n\"action\":\"A(0)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}\n\n},\n{\n\"name\":\"1⃣️\",\n\"type\":\"button\",\n\"action\":\"A(1)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}\n\n},\n{\n\"name\":\"2⃣️\",\n\"type\":\"button\",\n\"action\":\"A(2)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}\n\n},\n{\n\"name\":\"3⃣️\",\n\"type\":\"button\",\n\"action\":\"A(3)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.25\n}\n\n},\n{\n\"name\":\"4⃣️\",\n\"type\":\"button\",\n\"action\":\"A(4)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.25\n}\n\n},\n{\n\"name\":\"5⃣️\",\n\"type\":\"button\",\n\"action\":\"A(5)\",\n\"style\": {\n\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.25\n}\n}\n]       ",
    "loginUrl": "//登录\nfunction login() {\n\t  let url = getUrl();\n   let cookies = this.cookie.getCookie(url) || this.java.getCookie(url)\n   if (cookies && cookies != \"\") {\n     java.toast(\"\\n请不要重复登录，请先退出登录！\")\n     return false\n   }\n   try {\n     java.startBrowserAwait(url, \"登录\")\n   } catch (e) {\n     java.toast(e)\n   }\n   cookies = cookie.getCookie(url)\n   if (!cookies || cookies == \"\") {\n     java.toast(\"登录失败！\")\n     return false\n   }\n   java.toast(\"登录成功！\")\n   return true\n}\n\n//退出登录\nfunction logout() {\n   cookie.removeCookie(getUrl());\n   let cookies = cookie.getCookie(url)\n   if (cookies && cookies != \"\") {\n     java.toast(\"退出登录失败！\")\n     return false\n   }\n   java.toast(\"成功退出登录！\")\n   return true\n}\n\n var mode = [\"❗小说模式❗\",\"❗漫画模式❗\",\"❗视频模式❗\",\"❗听书模式❗\"]\n \n //显示当前模式\nvar K = () => {\n  let v = String(source.getVariable()).split(\",\");\n  let x = v[0] || 0;\n  java.toast(\"\\n\" + mode[x])\n}\n \n //设置模式\nvar M = (x) => {\n  let v = String(source.getVariable()).split(\",\");\n  v[0] = x;\n  source.setVariable(v.join(\",\"));\n  java.toast(`\\n成功设置\\n${mode[x]}`)\n}\n\n//显示当前域名\nvar H = () => {\n  let v = String(source.getVariable()).split(\",\");\n  let x = v[1] || 0;\n\t java.toast(`\\n当前域名:【${x}】\\n${getUrl()}`)\n}\n\n//设置域名\nvar A = (x) => {\n  let v = String(source.getVariable()).split(\",\");\n  v[1] = x;\n\t source.setVariable(v.join(\",\"));\n\t java.toast(`\\n当前域名:【${v[1]}】\\n${getUrl()}`)\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "init": "<js>\nlet v = String(source.getVariable()).split(\",\");\nlet x = v[2];\n if (baseUrl.match(/novel/)){\nname=`{{@@class.novel_box@class.info_box@tag.h1.0@text}}`\nauthor=`{{@@class.novel_box@class.info_box@class.item.1@a@text}}`\nkind=`{{book.kind}}`\nword=`{{book.wordCount}}`\nlast=`{{@@class.novel_box@class.info_box@class.item.0@text##最新：}}`\n\ntry {\n    const response = java.ajax(`{{getUrl()}}api/novel/app/novel/comments?novelId=@get:{bid}&sortType=1&page=${x}&rows=5`);\n    const jsonData = JSON.parse(response);\n    const logOutput = jsonData.data.map(comment => {\n        const cleanNickName = comment.updateTime.replace(/T/g,'  ').replace(/\\..*/g, '');\n        // 根据分数生成星星显示\n        const generateStars = (score) => {\n            let starCount = Math.min(Math.floor(score / 2), 5);\n            let stars = '';\n            for (let i = 0; i < 5; i++) {\n                stars += i < starCount? '★' : '☆';\n            }\n            return stars;\n        };\n        const starDisplay = generateStars(comment.score);\n        return `\n  [${cleanNickName}]  ${comment.createTimeFormat}\n⛄【${comment.nickName}】:👍🏻${comment.score} ${starDisplay}\n ${comment.content}\n \\n&shy;\n \n`;\n    }).join('\\n');\n    //java.log(logOutput);\n} catch (error) {\n    const errorLog = {\n        [SyntaxError.name]: '数据解析失败: ',\n        default: 'AJAX请求失败: '\n    }[error.name || 'default'] + error.message;\n    java.log(errorLog);\n}\ninfo = `&nbsp;\n📖 书名：{{@@class.novel_box@class.info_box@tag.h1.0@text}}\n👤 作者：{{@@class.novel_box@class.info_box@class.item.1@a@text}}\n📜 篇幅：{{@@class.props_box@tag.ul@li.1@text}}\n🔖 标签：{{@@class.tag_box@li[0:-3]@a@text##\\n}}\n🗿 肉量：{{@@class.props_box@ul@li.0@text}}\n✏  评分：{{@@class.score_box@span@text}}\n🕰 最新：{{@@class.novel_box@class.info_box@class.item.0@text##最新：}}\n👁 观看：{{@@class.props_box@ul@li.2@text}}\n❤️ 收藏：{{@@class.props_box@ul@li.3@text}}\n🏷 简介：{{@@class.ellipsis@text##小说简介：}}`;\nintro=info+`\\n&shy;\\n【✨评论✨】最新\\n&shy;${logOutput}`\ninfo=logOutput?intro:info\n}else if(baseUrl.match(/comic/)){\n\tname=`{{book.name}}`\n\t\tauthor=`{{book.author}}`\n\t\tkind=`{{book.kind}}`\n\t\tword=``\n\t\tlast=``\n\t\tinfo=`&nbsp;\n📖 书名：{{book.name}}\n👤 作者：{{book.author}}\n🏷 简介：{{book.intro}}`;\n\n\t}else if (baseUrl.match(/video/)) {\n\t\tname=`{{$.model.title}}`\n\t\tauthor=`{{$.model.keywords}}`\n\t\tkind=`{{$..tags}}`\n\t\tword=``\n\t\tlast=``\n\t\tinfo=`{{$..brief}}`\n\t\t}else if (baseUrl.match(/audio/)) {\n   name=`{{$.model.title}}`\n\t\tauthor=`{{$.model.authors}}`\n\t\tkind=`{{java.getString('.finished')==1?\"完结\":\"连载\"}},{{$..categories}}`\n\t\tword=``\n\t\tlast=`{{$..latestUpdate}}`\n\t\tinfo=`{{$..brief}}`\n}\ndata = {\n    name: name,\n    author: author,\n    kind: kind,\n    word:word,\n    last: last,\n    info: info\n};\n\nJSON.stringify(data);\n</js>",
      "intro": "info",
      "kind": "kind##\\###,",
      "lastChapter": "last",
      "name": "name",
      "wordCount": "word"
    },
    "ruleContent": {
      "content": "<js>\nif (baseUrl.match(/novel/)){\nvar document = org.jsoup.Jsoup.parse(result);\nvar limit_box = document.select(\"div.limit_code_box\");\nif (result['match'](/正文内容已隐藏/)) {\n    java['toast']('\\n❗❗❗【抱歉，系统检测到访问异常，请输入验证码!】👻');\n    java.startBrowser(baseUrl,'验证')\n      }\nif (limit_box.hasClass(\"hide\")) {\n  \tdocument.select(\"div.line\");\n }}\nelse if(baseUrl.match(/comic/)){\tresult=java.getString(\"#content@img@src\");\nresult.split('\\n').map(x=>`<img src=\"${x}\">`).join('\\n');\n\t}else if(baseUrl.match(/video/)){\n\t\tif (book['durChapterIndex'] == chapter['index']) {\n        b64 = java['base64Encode'](`\n    <html>\n    <head>\n        <meta name=\"viewport\" content=\"width=device-width\">\n        <style>\n            body {\n                margin: 0;\n                font-family: Arial, sans-serif;\n                background: linear-gradient(135deg, #ece9e6, #ffffff);\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: flex-start;\n                padding: 20px;\n            }\n            .container {\n                width: 100%;\n                max-width: 800px;\n                background: #fff;\n                border-radius: 10px;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n                overflow: hidden;\n                margin-bottom: 20px;\n            }\n            h3 {\n                margin: 0;\n                padding: 10px 20px;\n                font-size: 0.9em;\n                background: #333;\n                color: #fff;\n                border-radius: 10px 10px 0 0;\n            }\n            .video-container {\n                width: 100%;\n                background: #000;\n                position: relative;\n            }\n            video {\n                width: 100%;\n                height: auto;\n                display: block;\n            }\n            .info-container {\n                padding: 20px;\n            }\n            .info-container p {\n                margin: 10px 0;\n                color: #555;\n            }\n            .info-container p span {\n                font-weight: bold;\n                color: #000;\n            }\n        </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <h3>{{$.model.title}}</h3>\n            <div class=\"video-container\">\n                <video id=\"video\" src=\"{{$.model.url}}\" poster=\"{{$.model.coverUrl}}\" controls></video>\n            </div>\n        </div>\n        <div class=\"info-container\">\n            <p>⌚️ 时长：<span>{{$.model.durationFormat}}</span></p>\n            <p>📆 日期：<span>{{$.model.onlineTime##T|.000.*## }}</span></p>\n            <p>🎥 播放：<span>{{$.model.viewCount}}次</span></p>\n            <p>📩 收藏：<span>{{$.model.collectCount}}</span></p>\n            <p>🕵 片商：<span>{{$.model.authors}}</span></p>\n            <p>👤 上传：<span>{{$.model.uploader}}</span></p>\n            <p>🔖 标签：<span>{{$.model.categories}},{{$.model.tags}}</span></p>\n            <p>🏷 简介：<span>{{$.model.brief}}</span></p>\n        </div>\n        <script>\n            // 获取视频元素\n            const video = document.getElementById('video');\n            let touchStartX = 0;\n            let touchStartY = 0;\n            let touchStartTime = 0;\n            let isLongPress = false;\n\n            // 滑动快进\n            video.addEventListener('touchstart', (e) => {\n                touchStartX = e.touches[0].clientX;\n                touchStartY = e.touches[0].clientY;\n                touchStartTime = Date.now();\n                isLongPress = false;\n            });\n\n            video.addEventListener('touchmove', (e) => {\n                const deltaX = e.touches[0].clientX - touchStartX;\n                const deltaY = e.touches[0].clientY - touchStartY;\n\n                // 如果是水平滑动，且未进入长按状态\n                if (Math.abs(deltaX) > Math.abs(deltaY) && !isLongPress) {\n                    const duration = video.duration;\n                    const seekTime = video.currentTime + (deltaX / 50); // 每滑动100px快进1秒\n                    video.currentTime = Math.min(Math.max(seekTime, 0), duration);\n                }\n                e.preventDefault(); // 防止默认行为（如页面滚动）\n            });\n\n            // 长按快进\n            video.addEventListener('touchend', (e) => {\n                const touchEndTime = Date.now();\n                const touchDuration = touchEndTime - touchStartTime;\n\n                // 如果长按时间超过500ms，进入长按快进状态\n                if (touchDuration > 500) {\n                    isLongPress = true;\n\n                    // 在长按状态下，根据滑动距离快进\n                    const deltaX = e.changedTouches[0].clientX - touchStartX;\n                    const duration = video.duration;\n                    const seekTime = video.currentTime + (deltaX / 100); // 每滑动100px快进1秒\n                    video.currentTime = Math.min(Math.max(seekTime, 0), duration);\n                } else {\n                    isLongPress = false;\n                }\n            });\n        </script>\n    </body>\n    </html>\n`);\n        dataUrl = 'data:text/html;base64,' + b64;\n        java['startBrowser'](dataUrl, title);\n        java['toast']('正在加载视频\\n视频加载较慢，请耐心等待');\n    }\n    '【刷新正文】播放\\n✅直链:\\n' + `{{$.model.url}}`;\n\n\t\t}else if (baseUrl.match(/audio/)) {\njava.getString('{$.model.url}')\n}\n</js>",
      "title": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "$.authors",
      "bookList": "$.model.data||$.model",
      "bookUrl": "<js>\n if (baseUrl.match(/novel/)){\n'{{getUrl()}}novel/intro?id={{$.id}}'\n}else if (baseUrl.match(/comic/)) {\n\t'{{getUrl()}}comic/intro?id={{$.id}}'\n\t}else if (baseUrl.match(/video/)) {\n'{{getUrl()}}api/video/app/video/intro?force=false&id={{$.id}}&viewId='+new Date().getTime() + Math.round(Math.random() * (9999 - 1000) + 1000)\n\t\t}else if (baseUrl.match(/audio/)) {\n'{{getUrl()}}api/audio/app/audio/intro?id={{$.id}}'\n}\n</js>",
      "coverUrl": "$.coverUrl",
      "intro": "$.brief##原作：",
      "kind": "{{$.finished##0##连载}}\n{{$.pornRateDesc##\\((.*)\\)##$1###}}\n{{$.categories}}##1##完结",
      "lastChapter": "$.latestUpdate",
      "name": "$.title&&@put:{bid:$.id}",
      "wordCount": "$.wordCount"
    },
    "ruleSearch": {
      "author": "$.authors",
      "bookList": "<js>\njava.setContent(cache.get('urlss') );\ncache.delete('urlss');\nresult=java.getElements('$.model.data')\nresult\n</js>",
      "bookUrl": "<js>\nlet v = String(source.getVariable()).split(\",\");\nlet x = v[0];\n if (x==0){\n'{{getUrl()}}novel/intro?id={{$.id}}'\n}else if (x==1) {\n\t'{{getUrl()}}comic/intro?id={{$.id}}'\n\t}else if (x==2) {\n'{{getUrl()}}api/video/app/video/intro?force=false&id={{$.id}}&viewId='+new Date().getTime() + Math.round(Math.random() * (9999 - 1000) + 1000)\n\t\t}else if (x==3) {\n'{{getUrl()}}api/audio/app/audio/intro?id={{$.id}}'\n}\n</js>",
      "checkKeyWord": "",
      "coverUrl": "$.coverUrl",
      "intro": "$.brief##原作：",
      "kind": "{{$.finished##0##连载}}\n{{$.pornRateDesc##\\((.*)\\)##$1###}}\n{{$.categories}}##1##完结",
      "lastChapter": "$.latestUpdate",
      "name": "$.title&&@put:{bid:$.id}",
      "wordCount": "$.wordCount"
    },
    "ruleToc": {
      "chapterList": "<js>\n if (baseUrl.match(/novel/)){\n\tbook.type = 8;\n //java.toast('当前为小说模式🧾'); \n var data = [];\nvar list = java.getElements(\".catalog_ul li\");\nvar n = src.match(/catalog_ul[^\\(]+.*-n.*(\\d+)\\)/) ? parseInt(src.match(/catalog_ul[^\\(]+.*-n.*(\\d+)\\)/)[1]) : 0;\nvar m = list.length;\nvar k = /menu/.test(list) && /展开章节/.test(list) ? 1 : 0;\n//java.log(n+'/'+m+'/'+k);\nfor (i in list) {\n    if (i >= m - n - k) {break}\n    var list_i = /img/.test(list[i].select(\"span\")[0]) ? list[i].select(\"span\")[0] : list[i].select(\"a\");\n    data.push({\n        title: String(list_i.text()).replace(book.name, \"\").replace(/^\\s+|\\snew/g, \"\"),\n        link: /img/.test(list[i].select(\"span\")[0]) ? \"\" : `${getUrl()}${list[i].select(\"a\").attr(\"href\")}`,\n        time: /img/.test(list[i].select(\"span\")[0])  ? \"\" : String(list[i].select(\"span\").text()).replace(/游客/g,'✨').replace(/币/g,'💰').replace(/new\\s/g,''),\n        vol: /img/.test(list[i].select(\"span\")[0]) ? true : false,\n        vip: /币/.test(list[i].select(\"span\")[0]) ? true : false\n    });\n}\ndata;\n }else if (baseUrl.match(/comic/)) {\n\tbook.type = 64;\n //java.toast('当前为漫画模式🧾'); \n var data=[]\nvar list = java.getElements(\".catalog_ul li\");\nvar n = src.match(/catalog_ul[^\\(]+.*-n.*(\\d+)\\)/) ? parseInt(src.match(/catalog_ul[^\\(]+.*-n.*(\\d+)\\)/)[1]) : 0;\nvar m = list.length;\nvar k = /menu/.test(list) && /展开章节/.test(list) ? 1 : 0;\n//java.log(n+'/'+m+'/'+k);\nfor (i in list) {\n    if (i >= m - n - k) {break}\n    var list_i = /img/.test(list[i].select(\"span\")[0]) ? list[i].select(\"span\")[0] : list[i].select(\"a\");\n    data.push({\n        title: String(list_i.text()).replace(book.name, \"\").replace(/^\\s+|\\snew/g, \"\"),\n        link: /img/.test(list[i].select(\"span\")[0]) ? \"\" : `${getUrl()}${list[i].select(\"a\").attr(\"href\")}`,\n        time: /img/.test(list[i].select(\"span\")[0])  ? \"\" : String(list[i].select(\"span\").text()).replace(/游客/g,'✨').replace(/币/g,'💰').replace(/new\\s/g,''),\n        vol: /img/.test(list[i].select(\"span\")[0]) ? true : false,\n        vip: /币/.test(list[i].select(\"span\")[0]) ? true : false\n    });\n}\ndata;\n\t}else if (baseUrl.match(/video/)) {\n    book.type = 8;\n    //java.toast('当前为视频模式🧾');\n  var data = []\n    name=java.getString('{$..title}')\n    href=`${getUrl()}api/video/app/video/intro?force=false&id=`+java.getString('{$.model.id}')+`&viewId=` + Date.now() + Math.round(Math.random() * (9999 - 1000) + 1000);\n\n data.push({\n    \ttitle:name,\n    \tlink:href\t  \t\t\n    });\n data\n  }else if (baseUrl.match(/audio/)) {\n    book.type = 32;\n    //java.toast('当前为听书模式🧾');\n    var data = []\n    name=java.getString('{$..title}')\n    href=`${getUrl()}api/audio/app/audio/chapter?force=false&id=`+java.getString('{$..latestReadChapterId}')+`&offset=0&viewId=` + Date.now() + Math.round(Math.random() * (9999 - 1000) + 1000);\n data.push({\n    \ttitle:name,\n    \tlink:href\t  \t\t\n    });\n    \n data\n}\n </js>",
      "chapterName": "title",
      "chapterUrl": "link",
      "isVip": "vip",
      "isVolume": "vol",
      "updateTime": "time"
    },
    "searchUrl": "<js>\n let v = String(source.getVariable()).split(\",\");\n let x = v[0];\nlet url = getUrl();\nlet ss;\nlet uri = `${url}api/novel/app/novel/search?category=&excludeTags=&keyword=${key}&orderType=0&page=${page}&searchType=1&size=40`; //默认搜索小说\n\ntry {\n\tif (x == 0){\n\turl +=\t`api/novel/app/novel/search?category=&excludeTags=&keyword=${key}&orderType=0&page=${page}&searchType=1&size=40`\n\tss = java.get(url,{\t'user-agent': ua});\n\t\t\t\t}else if (x == 1) {\nurl +=\t`api/comic/app/comic/search?keyword=${key}&orderType=1&page=${page}&searchType=1&size=40`\nss = java.get(url,{\t'user-agent': ua});\n     }else if (x == 2 ) {\nurl +=\t`api/video/app/video/search?keyword=${key}&orderType=1&page=${page}&searchType=1&size=40`\nss = java.get(url,{\t'user-agent': ua});\n\t   \t}else if (x == 3 ) {\nurl +=\t`api/audio/app/audio/search?category=&keyword={{encodeURIComponent(key)}}&orderType=0&page=${page}&searchType=1&size=42`\nss = java.get(url,{\t'user-agent': ua});\n}\njava.log(ss.ss.statusCode())\njava.log(String(Object.keys(ss)))\nlet code = ss.statusCode();\nif (code==302||code==301) {\n\turi=ss.header(\"location\");\n\t}\n\telse if (code == 200) {\n\tcache.put('urlss', ss.body());\n\t\t}else if (code == 502) {\n\t\tjava.toast('\\n'+'👻ip被拉黑了👻')\n}\n\t}catch(err) {\n\t\tjava.log('💔访问出错💔')\n\t\tjava.log(String(err))\n\t\tjava.toast('\\n💔访问出错，更换域名💔')\n\t}\n\turi;\n</js>",
    "variableComment": "设置模式和域名\n！！！建议在登录功能中设置！！！\n\n模式选择：\n小说：0\n漫画：1\n视频：2\n听书：3\n\n域名：0~5\n\n填入数字，用英文逗号隔开",
    "weight": 0
  },
  {
    "bookSourceComment": "//无名25.04.30\n//部分节点过不了CF",
    "bookSourceGroup": "源社区,飞机",
    "bookSourceName": "小說網85novel",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.85novel.com",
    "concurrentRate": "2000",
    "customOrder": 1,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "header": "{\n\"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\"\n}",
    "lastUpdateTime": "1746020098065",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "{{book.author}}",
      "coverUrl": "{{book.coverUrl}}",
      "intro": "{{book.intro}}",
      "kind": "{{book.kind}}",
      "lastChapter": "li.flex.items-center.0@a@text",
      "name": "{{book.name}}",
      "tocUrl": "",
      "wordCount": ".text-base-700[-1]@span.0@text"
    },
    "ruleContent": {
      "content": "div.flex.flex-col.gap-5.pb-12.relative@html@js:java.t2s(result)"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "span.0@text##✍ ##",
      "bookList": "<js>\nif(result.match(/Just a moment.../)){\n\txb=(baseUrl)+\",\"+JSON.stringify({\n\t\t\"headers\":{\n\t\t\t\"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\"\n}})\njava.startBrowserAwait(xb,\"验证\")\nresult=java.ajax(xb)\n\t}\n\tresult\n</js>\ndiv.flex.flex-col.gap-2",
      "bookUrl": "a.0@href@js:result+',{webView:“true”}'",
      "checkKeyWord": "",
      "coverUrl": "img@src",
      "intro": "p@text",
      "kind": "span[2:3]@text",
      "lastChapter": "a.-1@text",
      "name": "h3@text",
      "wordCount": "span.4@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nvar datax = null;\nvar allChapters = [];\nvar finalJsonOutput = null;\nvar inputString = baseUrl;\nvar parts = inputString.split(',');\nvar url = parts[0].trim();\ntry {\n    var xDataRegex = /x-data=\"[^\"]*Login\\(\\d+,\\s*'([^']+)'/;\n    var match = result.match(xDataRegex);\n    if (match && match[1]) {\n        datax = match[1];\n    } else {\n        java.log(\"未能从源码中匹配并提取到 x-data token\");\n        throw new Error(\"XSRF token not found\"); // Token 是必须的\n    }\n    var urlWithXsrf = url + \"?_xsrf=\" + encodeURIComponent(datax);\n    var cookie = \"85_ID=\" + java.getCookie(url, \"85_ID\");\n    var baseHeaders = {\n        \"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        \"Referer\": url,\n        \"Accept\": \"application/json, text/plain\",\n        \"Cookie\": cookie\n    };\n    var slices = [];\n    var selectContentRegex = /<select class=\"[^\"]*select-primary[^\"]*\"[^>]*>([\\s\\S]*?)<\\/select>/;\n    var selectMatch = result.match(selectContentRegex);\n    if (selectMatch && selectMatch[1]) {\n        var optionsHtml = selectMatch[1];\n        var sliceRegex = /(\\d+)\\s*~\\s*(\\d+)/g;\n        var sliceMatch;\n        while ((sliceMatch = sliceRegex.exec(optionsHtml)) !== null) {\n            var start = parseInt(sliceMatch[1], 10);\n            var end = parseInt(sliceMatch[2], 10);\n            if (!isNaN(start) && !isNaN(end)) {\n                slices.push([start, end]);\n            }\n        }\n    }\n    if (slices.length === 0) {\n        java.log(\"未能提取到任何章节 Slice，将尝试获取默认范围 [1, 200]\");\n        slices = [\n            [1, 200]\n        ];\n    }\n    java.log(\"将要处理的 Slices: \" + JSON.stringify(slices));\n    for (var i = 0; i < slices.length; i++) {\n        var currentSlice = slices[i];\n        // java.log(\"准备获取 Slice: \" + currentSlice.join(' ~ '));\n        var maxAttempts = 3;\n        var success = false;\n        for (var attempt = 1; attempt <= maxAttempts; attempt++) {\n            java.log(\"尝试获取 Slice \" + currentSlice.join('~') + \" (第 \" + attempt + \"/\" + maxAttempts + \" 次)\");\n            var jsonString = null;\n            try {\n                var bodyPayload = {\n                    \"action\": \"chapters\",\n                    \"slice\": currentSlice\n                };\n                var op = {\n                    \"body\": JSON.stringify(bodyPayload),\n                    \"method\": \"post\",\n                    \"headers\": baseHeaders\n                };\n                var requestString = urlWithXsrf + \",\" + JSON.stringify(op);\n                jsonString = java.ajax(requestString);\n                if (jsonString && (jsonString.trim().startsWith('{') || jsonString.trim().startsWith('['))) {\n                    var jsonObject = JSON.parse(jsonString);\n                    if (jsonObject && jsonObject.result && Array.isArray(jsonObject.result.chapters)) {\n                        var fetchedCount = jsonObject.result.chapters.length;\n                        allChapters = allChapters.concat(jsonObject.result.chapters);\n                        // java.log(\"成功获取 Slice \" + currentSlice.join('~') + \" (第 \" + attempt + \" 次尝试): 本次获取 \" + fetchedCount + \" 章, 累计 \" + allChapters.length + \" 章\");\n                        java.log(\"成功获取 Slice \" + currentSlice.join('~') + \" (第 \" + attempt + \" 次尝试)\");\n                        success = true;\n                        break;\n                    } else {\n                        java.log(\"第 \" + attempt + \" 次尝试: Slice \" + currentSlice.join('-') + \" 的 JSON 响应格式不正确或未包含 chapters 数组: \" + jsonString.substring(0, 200));\n                    }\n                } else {\n                    java.log(\"第 \" + attempt + \" 次尝试: Slice \" + currentSlice.join('-') + \" 返回的不是有效的 JSON: \" + jsonString.substring(0, 200));\n                    java.log(\"Slice \" + currentSlice.join('-') + \" Raw Response (Attempt \" + attempt + \"): \" + jsonString);\n                }\n            } catch (ajaxOrParseError) {\n                java.log(\"第 \" + attempt + \" 次尝试获取或解析 Slice \" + currentSlice.join('-') + \" 时出错: \" + ajaxOrParseError);\n            }\n            if (!success && attempt < maxAttempts) {\n                var retryDelay = 4000;\n                java.log(\"等待 \" + retryDelay + \"ms 后重试...\");\n\n                Packages.java.lang.Thread.sleep(retryDelay);\n            } else if (!success && attempt === maxAttempts) {\n\n                java.log(\"已达到最大尝试次数 (\" + maxAttempts + \")，放弃获取 Slice 重新搜索过下cf试试\" + currentSlice.join('~'));\n            }\n        }\n        if (i < slices.length - 1) {\n            java.log(\"等待2500ms\");\n            Packages.java.lang.Thread.sleep(2500);\n        }\n    }\n    var combinedResult = {\n        \"code\": 0,\n        \"result\": {\n            \"code\": 1,\n            \"chapters\": allChapters\n        }\n    };\n    finalJsonOutput = JSON.stringify(combinedResult);\n\n} catch (e) {\n    java.log(\"处理目录 JS 规则时发生顶层错误: \" + e);\n    finalJsonOutput = null;\n}\nresult = finalJsonOutput; \n</js>\n$.result.chapters",
      "chapterName": "$.ChapterName",
      "chapterUrl": "$.ChapterUrl##(.*?)/(.*?)##https://www.85novel.com/book/$1/$2",
      "nextTocUrl": "",
      "preUpdateJs": ""
    },
    "searchUrl": "https://www.85novel.com/search?k={{key}}&page={{page}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//无名25.05.01修\n//25.05.02用电脑ua解决搜索下一页，验证成功跳转后请重新搜索",
    "bookSourceGroup": "源社区",
    "bookSourceName": "篱笆好文学",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.libahao.com/",
    "bookUrlPattern": "",
    "concurrentRate": "",
    "coverDecodeJs": "",
    "customOrder": 3,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAADC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\"}",
    "lastUpdateTime": "1746180515869",
    "loginCheckJs": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "coverUrl": "img@src",
      "intro": "[property=\"og:description\"]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property~=las?test_chapter_name]@content",
      "name": "[property=\"og:novel:book_name\"]@content",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": ".chapter-content@html",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "",
      "intro": "",
      "name": ""
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "<js>\nif(result.match(/百度安全验证/)){\n\txb=(baseUrl)+\",\"+JSON.stringify({\n\t\t\"headers\":{\n\t\t\t\"User-Agent\": \"Mozilla/5.0 (X11; Linux x86 64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\"\n}})\njava.startBrowserAwait(xb,\"验证\")\nresult=java.ajax(xb)\n\t}\n\nvar bookList = [];\nvar finalJsonOutput = null;\ntry {\n    var doc = result;\n    if (!doc) {\n        throw new Error(\"无法解析 HTML\");\n    }\n    var containers = org.jsoup.Jsoup.parse(doc).select(\"div.c-container.result-op, div.c-container.result\");\n    java.log(\"找到 \" + containers.size() + \" 个\");\n    for (var i = 0; i < containers.size(); i++) {\n        var container = containers.get(i);\n        var book = {};\n        if (container.hasClass(\"result-op\")) {            \n            java.log(\"处理第 \" + (i + 1) + \" 个 (result-op)\");            \n            book.bookUrl = container.attr(\"mu\") || null;             \n            var nameElement = container.selectFirst(\"a\");\n            if (nameElement) {\n                var nameText = nameElement.text().trim();\n                book.name = (nameText) ? nameText : \"未找到\";\n                if (!nameText) {\n                    //java.log(\"未找到书名，a 标签内容: \" + nameElement.outerHtml());\n                }\n            } else {\n                book.name = \"未找到\";\n                //java.log(\"未找到书名对应的 a 标签\");\n            }            \n            var authorElement = container.selectFirst(\"span\");\n            if (authorElement) {\n                var authorText = authorElement.text().trim();\n                var prefix = \"作者： \"; \n                if (authorText.includes(prefix)) {\n                    book.author = authorText.substring(prefix.length).trim();\n                } else {\n                    book.author = \"未找到\";\n                    //java.log(\"作者信息未找到或格式不符: \" + authorElement.outerHtml());\n                }\n            } else {\n                book.author = \"未找到\";\n                //java.log(\"未找到作者对应的 span 标签\");\n            }            \n            var introElement = container.selectFirst(\"div.text_2NOr6\");\n            var introText = null;\n            if (introElement) {\n                introText = introElement.text().trim();\n                book.intro = introText;                 \n                book.kind = null; \n                if (!introText.startsWith(\"简介:\")) {\n                    var kindPrefix = \"类别:\";\n                    var kindIndex = introText.indexOf(kindPrefix);\n                    if (kindIndex !== -1) {\n                        var kindTemp = introText.substring(kindIndex + kindPrefix.length).trim();\n                        var chapterPrefix = \"最新章节\"; \n                        var chapterIndex = kindTemp.indexOf(chapterPrefix);\n                        if (chapterIndex !== -1) {\n                            book.kind = kindTemp.substring(0, chapterIndex).trim(); \n                        } else {\n                            book.kind = kindTemp; \n                        }\n                    } else {\n                        //java.log(\"未在 intro 文本中找到 '类别:' 用于提取 kind: \" + introText);\n                    }\n                } else {\n                    //java.log(\"intro 文本以 '简介:' 开头，kind 设为 null\");\n                }\n            } else {\n                book.intro = null; \n                book.kind = null;\n                //java.log(\"未找到 intro/kind 对应的 div.text_2NOr6 标签\");\n            }            \n            var allAElements = container.select(\"a\");\n            if (allAElements.size() >= 2) {\n                book.lastChapter = allAElements.get(allAElements.size() - 2).text().trim();\n            } else {\n                book.lastChapter = null; \n                //java.log(\"a 标签数量不足，无法提取倒数第二个作为 lastChapter\");\n            }\n        } else if (container.hasClass(\"result\")) {            \n            java.log(\"处理第 \" + (i + 1) + \" (result)\");            \n            book.bookUrl = container.attr(\"mu\") || null;            \n            var nameElement = container.selectFirst(\"a\");\n            if (nameElement) {\n                var nameText = nameElement.text().trim();\n                book.name = (nameText) ? nameText : \"未找到\";\n                if (!nameText) {\n                   //java.log(\"未找到书名，a 标签内容: \" + nameElement.outerHtml());\n                }\n            } else {\n                book.name = \"未找到\";\n                //java.log(\"未找到书名对应的 a 标签\");\n            }            \n            var contentRightElement = container.selectFirst(\".content-right_1THTn\");\n            if (contentRightElement) {\n                var fullText = contentRightElement.text().trim();\n                book.intro = fullText;                 \n                book.author = null; \n                var authorPrefix = \"作者:\"; \n                var authorIndex = fullText.indexOf(authorPrefix);\n                var kindSeparator = \"类别\"; \n                var kindIndexForAuthor = fullText.indexOf(kindSeparator);\n                if (authorIndex !== -1) { \n                    var startIndex = authorIndex + authorPrefix.length;\n                    var endIndex = (kindIndexForAuthor !== -1 && kindIndexForAuthor > authorIndex) ? kindIndexForAuthor : fullText.length;\n                    book.author = fullText.substring(startIndex, endIndex).trim();\n                } else {\n                    //java.log(\"未在 .content-right_1THTn 中找到 '作者:'\");\n                }                \n                book.kind = null; \n                var kindPrefix = \"类别:\"; \n                var kindIndex = fullText.indexOf(kindPrefix);\n                var chapterSeparator = \"最新章节\"; \n                var chapterIndexForKind = fullText.indexOf(chapterSeparator);\n                if (kindIndex !== -1) { \n                    var startIndex = kindIndex + kindPrefix.length;\n                    var endIndex = (chapterIndexForKind !== -1 && chapterIndexForKind > kindIndex) ? chapterIndexForKind : fullText.length;\n                    book.kind = fullText.substring(startIndex, endIndex).trim();\n                } else {\n                    //java.log(\"未在 .content-right_1THTn 中找到 '类别:'\");\n                }                \n                book.lastChapter = null; \n                var chapterPrefix = \"最新章节:\"; \n                var chapterIndex = fullText.indexOf(chapterPrefix);\n                var updateSeparator = \"最新更新\"; \n                var updateIndex = fullText.indexOf(updateSeparator);\n\n                if (chapterIndex !== -1) { \n                    var startIndex = chapterIndex + chapterPrefix.length;\n                    var endIndex = (updateIndex !== -1 && updateIndex > chapterIndex) ? updateIndex : fullText.length;\n                    book.lastChapter = fullText.substring(startIndex, endIndex).trim();\n                } else {\n                    //java.log(\"未在 .content-right_1THTn 中找到 '最新章节:'\");\n                }\n            } else {                \n                book.author = null;\n                book.kind = null;\n                book.lastChapter = null;\n                book.intro = null;\n                //java.log(\"未找到 .content-right_1THTn 元素\");\n            }\n        } else {\n            //java.log(\"跳过未知类型的容器: \" + container.outerHtml().substring(0, 100));\n            continue; \n        }        \n        bookList.push(book);\n    }\n    var finalResult = {\n        bookList: bookList \n    };\n    finalJsonOutput = JSON.stringify(finalResult);\n} catch (e) {\n    java.log(\"错误: \" + e);\n    finalJsonOutput = JSON.stringify({\n        bookList: []\n    }); \n}\nresult = finalJsonOutput;\n</js>\n$.bookList",
      "bookUrl": "$.bookUrl@js:result+',{webView:“true”}'",
      "checkKeyWord": "斗破苍穹",
      "coverUrl": "",
      "intro": "$.intro",
      "kind": "$.kind",
      "lastChapter": "$.liastChapter",
      "name": "$.name",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": ".chapter-list.1@li",
      "chapterName": "a@text",
      "chapterUrl": "a@href@js:result = \"https://m.libahao.com\" + result"
    },
    "searchUrl": "https://www.baidu.com/s?wd=site%3Awww.libahao.com + %20{{key}}&pn={{(page - 1) * 10}},{\n    \"headers\": {\"User-Agent\": \"Mozilla/5.0 (X11; Linux x86 64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\"},\n    \"webView\": true\n}",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "\n\n可下载可在线观看,下载需要改成【文件】\n@天天的鸟蛋蛋：修复搜索\n原来的源只能用【发现】，\n我发现手机版能【搜索】，\n电脑版【搜索】找不到【列表】，\n于是就用手机版的【搜索】顶替电脑版的【搜索】。\n2025/3/5 更新优化搜索加入搜索下一页 优化，发现",
    "bookSourceGroup": "下载,在线,💐 女频,搜索失效",
    "bookSourceName": "💐 爱久久小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.jjjjxsw.com",
    "bookUrlPattern": "http://www.jjjjxs.com/txt/\\d+.html",
    "customOrder": 1203,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\n    \"title\":\"女生\",\n    \"url\":\"/e/action/toplist.php?page={{page-1}}&class=1\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":1\n    }\n  },\n  {\n    \"title\":\"男生\",\n    \"url\":\"/e/action/toplist.php?page={{page-1}}&class=2\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":1\n    }\n  },\n  {\n    \"title\":\"耽美\",\n    \"url\":\"/e/action/toplist.php?page={{page-1}}&class=3\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":1\n    }\n  },{\"title\":\"最新上传\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"现代\",\"url\":\"/txt/young/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/txt/wuxia/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/txt/xuanhuan/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/txt/kongbu/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"架空\",\"url\":\"/txt/lsjs/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"网游\",\"url\":\"/txt/juben/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"总裁\",\"url\":\"/txt/qinggan/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"耽美\",\"url\":\"/txt/dmtr/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/txt/tiexue/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/txt/chuanyue/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"异能\",\"url\":\"/txt/dushi/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"重生\",\"url\":\"/txt/chongshengxiaoshuo/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/txt/tongrenxiaoshuo/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"人气最高\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"现代\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=9&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=10&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=11&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=12&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"架空\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=14&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"网游\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=16&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"总裁\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=37&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"耽美\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=41&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=42&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=47&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"异能\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=48&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"重生\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=49&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=76&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"收藏最多\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"现代\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=9&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=10&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=11&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=12&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"架空\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=14&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"网游\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=16&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"总裁\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=37&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"耽美\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=41&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=42&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=47&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"异能\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=48&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"重生\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=49&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=76&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}}]",
    "lastUpdateTime": "1745926689933",
    "respondTime": 188879,
    "ruleBookInfo": {
      "author": ".downInfoRowL@li.0@a@text",
      "coverUrl": ".downInfoRowL@img@src##\\?.*",
      "downloadUrls": ".downAddress_li@a@href\n<js>\nvar url=book.origin+result[0];\nresult=java.ajax(url);\nresult;\n</js>\na.22@href",
      "intro": "{{@@[name=\"description\"]@content##简介:.*|,|，##\n}}\n简介：{{@@#mainSoftIntro@html}}##(^|[。！？]+[”」）】]?)##$1<br>",
      "kind": ".downInfoRowL@.strong.0@text&&.downInfoRowL@li.1:5:6@textNodes##小说",
      "lastChapter": "",
      "name": "id.downInfoArea@h1@text##《|》",
      "tocUrl": ".yuedu@a@href##1\\.html|(?<=read)/\\d+",
      "wordCount": ".downInfoRowL@li.2@textNodes##(.*?) (k|m|K|M)B##$1$2"
    },
    "ruleContent": {
      "content": "#view_content_txt@html",
      "nextContentUrl": "text.下一页@href||text.下一@href",
      "sourceRegex": ".*\\.(txt)",
      "title": ""
    },
    "ruleExplore": {
      "author": ".mainGreen@text##.*作者.|\\s写作.*",
      "bookList": ".listbg",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": "div.1@text",
      "kind": ".mainGreen@text&&.oldDate@text&&.newDate@text##.*进度.|\\s文件.*|\\[|\\]",
      "name": "a.1@text",
      "wordCount": ".mainGreen@text##.*大小.|\\s下载.*|\\s书籍.*"
    },
    "ruleSearch": {
      "author": "span.2@text",
      "bookList": "ul@li@.list_a",
      "bookUrl": "a.1@href@js:##.+\\D((\\d+)\\d{3})\\D##http://www.jjjjxs.com/txt/$1.html###",
      "checkKeyWord": "",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": "span.3@a@text&&",
      "lastChapter": "",
      "name": "a.1@text",
      "wordCount": "span.3@textNodes##\\[\n\\] 大小:(.*) (k|m|K|M)B##$1$2###"
    },
    "ruleToc": {
      "chapterList": ".view_content_list@li@a",
      "chapterName": "text##节##页@js:##{{book.name}}",
      "chapterUrl": "href",
      "formatJs": ""
    },
    "searchUrl": "https://m.jjjxsw.com/e/search/index.php,{\n  \"body\": \"show=writer%2Ctitle&keyboard={{key}}&Submit22=%E6%90%9C%E7%B4%A2\",\n  \"method\": \"POST\"\n}\n@js:\njava.webView(null,baseUrl,null)\nurl=String(result).replace(\"{{key}}\",key);\nso=java.connect(url).raw().request().url();\nString(so).replace(/\\d+.html?$/, \"{{page-1}}.html\");",
    "weight": 0
  },
  {
    "bookSourceName": "🎴 四库书屋 (Bing)",
    "bookSourceUrl": "http://www.4ksw.com##Bing接口",
    "bookSourceType": 0,
    "bookUrlPattern": "http://www.4ksw.com/\\d+/\\d+/",
    "customOrder": 10,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "header": {
      "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36"
    },
    "searchUrl": "https://cn.bing.com/search?q=site%3Awww.4ksw.com+{{key}}",
    "ruleSearch": {
      "bookList": "li.b_algo",
      "name": "h2@text",
      "bookUrl": "h2 a@href",
      "coverUrl": "",
      "author": "",
      "intro": "p@text",
      "lastChapter": ""
    },
    "ruleBookInfo": {
      "name": "h1@text",
      "author": ".book_author@text",
      "intro": ".book_intro@text",
      "coverUrl": ".book_img img@src",
      "kind": "",
      "lastChapter": ".book_last a@text"
    },
    "ruleToc": {
      "chapterList": ".list-group li",
      "chapterName": "a@text",
      "chapterUrl": "a@href"
    },
    "ruleContent": {
      "content": "#content@html",
      "imageStyle": "FULL",
      "nextContentUrl": "a:contains(下一页)@href"
    },
    "ruleExplore": {
      "bookList": ".article li",
      "name": "a@text",
      "bookUrl": "a@href",
      "coverUrl": "",
      "intro": "",
      "author": "",
      "kind": "",
      "lastChapter": ""
    },
    "lastUpdateTime": "1746025496066"
  },
  {
    "bookSourceComment": "//无名25.04.29",
    "bookSourceGroup": "源社区",
    "bookSourceName": "玫瑰jygfa",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.jygfa.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "header": "{\n\t\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36\",\n\t\"referer\":\"https://www.jygfa.com\"\n\t}",
    "lastUpdateTime": "1745938918665",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "a.0@text",
      "coverUrl": "img@src",
      "init": ".bookinfo",
      "intro": ".bookintromore@text",
      "kind": "{{book.kind}}",
      "lastChapter": ".bookchapter@text",
      "name": "h1@text",
      "tocUrl": "id.showmore01"
    },
    "ruleContent": {
      "content": "id.TextContent@p@text"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": ".author[0]@a@text",
      "bookList": ".bookbox",
      "bookUrl": ".bookname@a@href@js:result+',{webView:“true”}'",
      "checkKeyWord": "仙逆",
      "coverUrl": "img@data-original",
      "intro": ".update@textNodes",
      "kind": ".author[1]@text",
      "lastChapter": ".cat@a@text",
      "name": ".bookname@text"
    },
    "ruleToc": {
      "chapterList": "id.chapter",
      "chapterName": "text",
      "chapterUrl": "a@href@js:result+',{webView:“true”}'",
      "nextTocUrl": ""
    },
    "searchUrl": "/search.php?searchkey={{key}}&action=login&submit=",
    "weight": 0
  },
  {
    "bookSourceComment": "//无名25.05.02修，需要魔法。\n//24.12",
    "bookSourceGroup": "源社区,飞机",
    "bookSourceName": "和圖書",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.hetubook.com",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = [];\njava.toast(\"🔥动态获取发现中……\");\nvar push=(title,url,size)=>result.push({\n  \t\"title\": title,\n  \t\"url\": url,\n  \t\"style\": {\n   \"layout_flexGrow\": 1,\n   \"layout_flexBasisPercent\": size\n   }\n });\nvar tag = java.ajax(\"https://www.hetubook.com/book/index.php\")\n\nif(tag.match(/Just a moment/)){\n\txb=\"https://www.hetubook.com/book/index.php\"+\",\"+JSON.stringify({\n\t\t\"headers\":{\n  \"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Mobile Safari/537.36\",\n  \"webView\": true\n}})\n\tcookie.removeCookie(source.bookSourceUrl)\njava.startBrowserAwait(xb,\"www.hetubook.com\")\ntag=java.ajax(xb)\n\t}\nif (tag) {\nb=org.jsoup.Jsoup.parse(tag).select(\".catalog a\");\npush(\"全部\",null,1)\n    for(i in b){\n        title=b[i].text()\n        url=b[i].attr(\"href\")\n        size=0.25\n        if (url.endsWith(\"index.php\")) {\n            url=\"/book/\"+url+\"?page=1\"\n            url=String(url).replace(\"1\",\"{{page}}\")\n            push(title,url,size)\n        } else {\n            url=\"/book/\"+url+\"&page=1\"\n            url=String(url).replace(\"1\",\"{{page}}\")\n            push(title,url,size)\n    }};\npush(\"已完結\",null,1)\n    for(i2 in b){\n        title=b[i2].text()\n        url=b[i2].attr(\"href\")\n        size=0.25\n        if (url.endsWith(\"index.php\")) {\n            url=\"/book/\"+url+\"?state=2&page=1\"\n            url=String(url).replace(\"1\",\"{{page}}\")\n            push(title,url,size)\n        } else {\n            url=\"/book/\"+url+\"&state=2&page=1\"\n            url=String(url).replace(\"1\",\"{{page}}\")\n            push(title,url,size)\n    }};\npush(\"連載中\",null,1)\n    for(i in b){\n        title=b[i].text()\n        url=b[i].attr(\"href\")\n        size=0.25\n        if (url.endsWith(\"index.php\")) {\n            url=\"/book/\"+url+\"?state=1&page=1\"\n            url=String(url).replace(/1$/,\"{{page}}\")\n            push(title,url,size)\n        } else {\n            url=\"/book/\"+url+\"&state=1&page=1\"\n            url=String(url).replace(/1$/,\"{{page}}\")\n            push(title,url,size)\n    }}}\nJSON.stringify(result);",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\",\n\"Referer\":\"https://www.hetubook.com\"}",
    "lastUpdateTime": "1746118728064",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "a[0]@text@js:java.t2s(result)",
      "coverUrl": "img@src",
      "init": "id.left",
      "intro": ".intro@text@js:java.t2s(result)",
      "kind": "div:containsOwn(類別：)@text##類別：@js:java.t2s(result)",
      "lastChapter": "id.dir@a[-1]@text@js:java.t2s(result)",
      "name": "h2@text@js:java.t2s(result)",
      "tocUrl": "",
      "wordCount": ".book_info.finish > div:nth-of-type(3)@text##字數：@js:java.t2s(result)"
    },
    "ruleContent": {
      "content": "//div[@id='content']/div/text()@js:java.t2s(result)",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "span[1]@text@js:java.t2s(result)",
      "bookList": "<js>\nif(result.match(/Just a moment/)){\n\txb=(baseUrl)+\",\"+JSON.stringify({\n\t\t\"headers\":{\n  \"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\",\n  \"webView\": true\n}})\n\tcookie.removeCookie(source.bookSourceUrl)\njava.startBrowserAwait(xb,\"www.hetubook.com\")\nresult=java.ajax(xb)\n\t}\n\tresult\n</js>\nid.list@li",
      "bookUrl": ".name@a@href",
      "coverUrl": "img@src",
      "intro": ".intro@text@js:java.t2s(result)",
      "kind": "span[0]@text@js:java.t2s(result)",
      "name": ".name@text@js:java.t2s(result)"
    },
    "ruleSearch": {
      "author": "span[0]@text##/|/@js:java.t2s(result)",
      "bookList": "<js>\nif(result.match(/Just a moment/)){\nvar x=java.get(\"url\")\ncookie.removeCookie(source.bookSourceUrl)\njava.startBrowserAwait(x,\"www.hetubook.com\")\nresult=java.ajax(x)\n\t}\n\tresult\n</js>\n.list@dd",
      "bookUrl": "a[1]@href",
      "checkKeyWord": "我的",
      "coverUrl": "img@src",
      "intro": ".intro@text@js:java.t2s(result)",
      "name": "a[1]@text@js:java.t2s(result)"
    },
    "ruleToc": {
      "chapterList": "id.dir@dd@a",
      "chapterName": "text@js:java.t2s(result)",
      "chapterUrl": "href##$##,\n{\"webView\":true}"
    },
    "searchUrl": "@js:\njava.put(\"url\",String(source.bookSourceUrl+\"/search/?keyword=\"+key+\",\"+JSON.stringify({\n\t\t\"headers\":{\n\t\t\t  \"User-Agent\": \"Mozilla/5.0 (Linux; Android 14; 2312DRAABC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Mobile Safari/537.36\",\n\t\t\t\"Referer\":\"https://www.hetubook.com/search/?keyword=%E6%88%91%E7%9A%84\"\n\t\t\t  }\n})))",
    "weight": 0
  },
  {
    "bookSourceComment": "by阿鬼\n\n在程宝的基础上改了下！",
    "bookSourceGroup": "🎉 精选",
    "bookSourceName": "香书小说",
    "bookSourceType": 0,
    "bookSourceUrl": "http://wap.xbiqugu.la/",
    "bookUrlPattern": "http?://wap.xbiqugu.la/wapbook/\\d+.html",
    "customOrder": 280,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "玄幻::/wapsort/1_{{page}}/\n修真::/wapsort/2_{{page}}/\n都市::/wapsort/3_{{page}}/\n穿越::/wapsort/4_{{page}}/\n网游::/wapsort/5_{{page}}/\n科幻::/wapsort/6_{{page}}/\n其他::/wapsort/7_{{page}}/",
    "header": "{\n\t\"User-Agent\":\"Mozilla/5.0 (Linux; Android 13; V2148A Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/128.0.6613.146 Mobile Safari/537.36\"\n\t}",
    "lastUpdateTime": "1746068125673",
    "respondTime": 287215,
    "ruleBookInfo": {
      "author": "@get:{a}##作者：",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\".block_txt2@h2@text\",\na:\".block_txt2@p[2]@text\",\nc:\".block_txt2@p[3]@text&&.block_txt2@p[4]@text&&.block_txt2@p[5]@text\",\nl:\".block_txt2@p[6]@a@text\",\nd:\".intro_info@text\",\ni:\".block_img2@img src\"}",
      "intro": "@get:{d}##最新章节推荐.*",
      "kind": "@get:{c}##分类：|状态：|更新：",
      "lastChapter": "@get:{l}",
      "name": "@get:{n}"
    },
    "ruleContent": {
      "content": "#nr1@html",
      "nextContentUrl": "text.下一页@href",
      "replaceRegex": "##.*\\(第.*\\/.*页\\)\\s*|最新网址.*\\s*|\\s（本章.*\\s*"
    },
    "ruleExplore": {
      "author": "ownText##.*\\/",
      "bookList": ".line",
      "bookUrl": "a@href",
      "coverUrl": "a@href##.+\\D((\\d+)\\d{3})\\D##/files/article/image/$2/$1/$1s.jpg###",
      "kind": "ownText##\\[|\\]|\\/.*",
      "lastChapter": "",
      "name": "a@text"
    },
    "ruleSearch": {
      "author": "p[3]@text##作者：",
      "bookList": ".block",
      "bookUrl": "a@href",
      "checkKeyWord": "长生",
      "coverUrl": "a@href##.+\\D((\\d+)\\d{3})\\D##/files/article/image/$2/$1/$1s.jpg###",
      "kind": "p[2]@text##分类：",
      "lastChapter": "p[4]@a@text",
      "name": "h2@text"
    },
    "ruleToc": {
      "chapterList": ".chapter[!0]@li a",
      "chapterName": "text##正文卷.|正文.|VIP卷.|默认卷.|卷_|VIP章节.|免费章节.|章节目录.|最新章节.|[\\(（【].*?[求更票谢乐发订合补加架字修Kk].*?[】）\\)]",
      "chapterUrl": "href",
      "nextTocUrl": "option@value"
    },
    "searchUrl": "/modules/article/waps.php,{\n  \"method\": \"post\",\n  \"body\": \"searchkey={{key}}\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "校验可用",
    "bookSourceName": "大文学②",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.ssdzgj.com/",
    "customOrder": 77,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "lastUpdateTime": "1745836096198",
    "respondTime": 4992,
    "ruleBookInfo": {
      "author": "[property=og:novel:author]@content",
      "coverUrl": "[property=og:image]@content",
      "intro": "[property=og:description]@content",
      "kind": "[property=og:novel:update_time]@content&&\n[property=og:novel:category]@content&&\n[property=og:novel:status]@content",
      "lastChapter": "[property=og:novel:latest_chapter_name]@content##免费章节 |正文卷 |正文 |VIP章节 ",
      "name": "[property=og:novel:book_name]@content##|\\（.*|\\(.*|免费阅读|全文.*阅读|最新章节|小说|笔趣阁|免费.*"
    },
    "ruleContent": {
      "content": "id.htmlContent@p@html##推荐下.*更新快！|推荐一个.*com ！|广个告.*离线朗读！|广个告.*更新快！|.*咪.*咪.*阅.*读.*"
    },
    "ruleExplore": [],
    "ruleReview": [],
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$..search[*]",
      "bookUrl": "{{$.book_list_url}}",
      "checkKeyWord": "",
      "coverUrl": "{{$.cover}}",
      "intro": "$.intro",
      "kind": "{{$.uptime}}\n{{$.cate_name}}\n{{$.status_str}}",
      "lastChapter": "$.latest_chapter_name",
      "name": "$.book_name"
    },
    "ruleToc": {
      "chapterList": "id.at@tag.td@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/api/search?q={{key}}",
    "weight": 0
  },
  {
    "ruleSearch": {
      "bookList": "class.txt-list txt-list-row5@li!0",
      "name": "a.0@text",
      "author": "class.s1@text",
      "lastChapter": "a.1@text",
      "bookUrl": "a.0@href"
    },
    "ruleBookInfo": {
      "name": "class.top@tag.h1@text",
      "author": "class.top@a.0@text",
      "lastChapter": "class.top@a.2@text",
      "coverUrl": "class.m-desc xs-show@tag.p.0@text"
    },
    "ruleToc": {
      "chapterList": "class.section-list fix.1@li",
      "chapterName": "a.0@text",
      "chapterUrl": "a.0@href",
      "nextTocUrl": "class.listpage@class.right@tag.a@href"
    },
    "ruleContent": {
      "content": ".content@p@text",
      "title": "class.title@text",
      "nextContentUrl": "id.next_url.0@href"
    },
    "ruleReview": [],
    "ruleExplore": [],
    "bookSourceType": 0,
    "searchUrl": "{{url=source.getKey();\ncookie.removeCookie(url)}}/search,{\n  \"body\": \"searchkey={{key}}\",\n  \"method\": \"POST\"\n}",
    "bookSourceUrl": "https://www.xbiqu6.com/",
    "bookSourceName": "笔趣阁",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "enabled": true,
    "lastUpdateTime": "1745738535317"
  },
  {
    "ruleContent": {
      "content": "#chapterContent p@textNodes"
    },
    "ruleExplore": [],
    "weight": 0,
    "loginUrl": "https://alicesw.tw/user/user/login.html",
    "searchUrl": "https://alicesw.tw/search.html?keyword={{key}}&page={{page}}",
    "ruleSearch": {
      "coverUrl": "{{$.coverUrl}}http://u3v.cn/5zBiW8",
      "author": ".s4@text",
      "bookUrl": "a@href",
      "kind": ".s1@text##\\[|\\]",
      "bookList": ".txt-list@li!0",
      "name": "a@text"
    },
    "coverDecodeJs": "",
    "enabledExplore": true,
    "ruleBookInfo": {
      "author": "a",
      "tocUrl": "t",
      "lastChapter": "l",
      "wordCount": "w",
      "intro": "i",
      "coverUrl": "c",
      "init": "@js:\n$ = (_) => java.getString(_);\n({\n    n: $(\"[property$=title]@content\"),\n    a: $(\"[property$=author]@content\"),\n    k: $(\"[property~=category|status|update_time]@content\"),\n    w: $(\"text.字数@text\\#\\#字数[：:]\"),\n    l: $(\"[property~=las?test_chapter_name]@content\"),\n    i: $(\"[property$=description]@content\"),\n    c: $(\"[property$=image]@content\"),\n    t: $(\"class.opt@a.2@href\"),\n    d: $(\"text.下载@href\")\n});",
      "kind": "k",
      "name": "n"
    },
    "ruleToc": {
      "chapterName": "text",
      "chapterUrl": "href",
      "chapterList": ".fix li a"
    },
    "bookSourceUrl": "https://alicesw.org/##ʕ ᵔᴥᵔ ʔ喜静",
    "lastUpdateTime": "1746284721992",
    "customOrder": 0,
    "bookSourceType": 0,
    "enabled": true,
    "bookSourceName": "🐣爱丽丝书屋",
    "header": "{\n\t\"User-Agent\":\"Mozilla/5.0 (Linux; Android 14; PJH110 Build/SP1A.210812.016) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.6533.103 Mobile Safari/537.36\",\"Referer\":\"{{baseUrl}}\"\n\t}",
    "bookSourceComment": "不能看完整就登录一下试试。\n备用https://xn--b9-209co42jzck.alicesw6.xyz/",
    "respondTime": 180000,
    "exploreUrl": "[{\"title\":\"校园\",\"url\":\"/lists/61.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"贤者小说\",\"url\":\"/lists/79.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/lists/62.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"奇幻\",\"url\":\"/lists/75.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"强奸\",\"url\":\"/lists/74.htm&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/lists/73.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"科幻\",\"url\":\"/lists/71.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"乡村\",\"url\":\"/lists/63.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"都市\",\"url\":\"/lists/64.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"系统\",\"url\":\"/lists/69.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"武侠\",\"url\":\"/lists/68.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"历史\",\"url\":\"/lists/67.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"明星\",\"url\":\"/lists/72.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"乱伦\",\"url\":\"/lists/65.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/lists/70.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"凌辱\",\"url\":\"/lists/46.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"反差\",\"url\":\"/lists/22.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"堕落\",\"url\":\"/lists/18.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"纯爱\",\"url\":\"/lists/19.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"伪娘\",\"url\":\"/lists/52.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"性奴\",\"url\":\"/lists/45.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"萝莉\",\"url\":\"/lists/48.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"熟女\",\"url\":\"/lists/56.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"禁忌\",\"url\":\"/lists/51.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"NTR\",\"url\":\"/lists/54.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"媚黑\",\"url\":\"/lists/53.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"绿帽\",\"url\":\"/lists/55.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"调教\",\"url\":\"/lists/58.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"女主\",\"url\":\"/lists/59.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"正太\",\"url\":\"/lists/50.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"下克上\",\"url\":\"/lists/43.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"反转\",\"url\":\"/lists/23.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"羞耻\",\"url\":\"/lists/34.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"百合\",\"url\":\"/lists/47.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"重口\",\"url\":\"/lists/21.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"其他\",\"url\":\"/lists/57.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"人气榜\",\"url\":\"/all/order/hits+desc.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"字数榜\",\"url\":\"/all/order/word+desc.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}},{\"title\":\"推荐榜\",\"url\":\"/all/order/recommend+desc.html&page={{page}}\",\"style\":{\"layout_flexBasisPercent\":0.25,\"layout_flexGrow\":1}}]",
    "enabledCookieJar": true,
    "bookSourceGroup": "🐣R18小说"
  },
  {
    "bookSourceComment": "coolapk@芜恙",
    "bookSourceGroup": "有声",
    "bookSourceName": "幻听网",
    "bookSourceType": 1,
    "bookSourceUrl": "https://www.ting27.com",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledExplore": true,
    "exploreUrl": "玄幻::/booklist/1<,_{{page}}>.html\n武侠::/booklist/2<,_{{page}}>.html\n都市::/booklist/3<,_{{page}}>.html\n言情::/booklist/4<,_{{page}}>.html\n女生::/booklist/38<,_{{page}}>.html\n科幻::/booklist/5<,_{{page}}>.html\n推理::/booklist/6<,_{{page}}>.html\n恐怖::/booklist/7<,_{{page}}>.html\n惊悚::/booklist/8<,_{{page}}>.html\n历史::/booklist/9<,_{{page}}>.html\n军事::/booklist/10<,_{{page}}>.html\n网游::/booklist/11<,_{{page}}>.html\n通俗::/booklist/35<,_{{page}}>.html\n百家::/booklist/36<,_{{page}}>.html\n儿童::/booklist/16<,_{{page}}>.html\n粤语::/booklist/40<,_{{page}}>.html\n相声::/booklist/34<,_{{page}}>.html\n评书::/booklist/13<,_{{page}}>.html",
    "header": "",
    "lastUpdateTime": "1745952120582",
    "loginUrl": "",
    "ruleBookInfo": {
      "author": "",
      "intro": "//*[@class=\"introbox\"]##(^|[。！？]+[”」）】]?)##$1<br>"
    },
    "ruleContent": {
      "content": "//audio/@src"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "//p[3]/text()",
      "bookList": "//*[@class=\"clist\"]/ul/li",
      "bookUrl": "//p[1]/a/@href",
      "coverUrl": "//a[1]/img/@src",
      "kind": "//p[2]/text()&&//p[6]/text()##.*：",
      "lastChapter": "//p[5]/text()",
      "name": "//p[1]/a/b/text()",
      "wordCount": "//p[4]/text()"
    },
    "ruleToc": {
      "chapterList": "//*[@class=\"compress\"][1]/ul/li/a",
      "chapterName": "//text()",
      "chapterUrl": "//@href@js:result+',{webView:“true”}'"
    },
    "searchUrl": "/search.asp,{\n  \"charset\": \"gb2312\",\n  \"method\": \"POST\",\n  \"body\": \"searchword={{key}}\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttps://s1.shushan.xyz\n*/\n\n250414更新日志:\n新增快速搜索\n搜索关键词：x:我的     小说搜索\n搜索关键词：m:我的     漫画搜索\n搜索关键词：t:我的      听书搜索\n搜索关键词：d:我的     短剧搜索\n搜索关键词：我的        根据自定义模式搜索\n\n250416更新日志:\n新增快速搜索\n书籍名@来源\n目前支持来源：番茄、七猫、得间、QQ、熊猫、塔读、69书吧、伪69、喜马拉雅、小米、猫眼、百度、米读、顶点、星星小说、笔趣阁22、爱下电子书、搜书神器、得奇\n\n250428更新日志:\n新增河马短剧，七猫短剧\n\n250416更新日志:\n恢复69书吧使用:www.69shuba.com\n由于搜索可靠性不高，可能搜索时间较长，故不加入全部搜索，请点击69书吧搜索使用\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增书山书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和书山书架栏目\n2.预计新增阅读记录，阅读过的书籍可在书山书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增书山书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceGroup": "书山小说会员专属请勿传播,番茄小说,七猫小说,塔读小说,得间小说,起点小说",
    "bookSourceName": "书山融合2.1(完全版)",
    "bookSourceType": 0,
    "bookSourceUrl": "📚https://s1.shushan.xyz",
    "concurrentRate": "14/10000",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"书山书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1746245444468",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录书山账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚书山书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"69书吧\",\n        \"type\": \"button\",\n        \"action\": \"set_source('69书吧')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"河马短剧\",\n        \"type\": \"button\",\n        \"action\": \"set_source('河马')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','书山书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录书山小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('https://fb.shusan.cc', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n    const mediaConfig = {\n        '喜马拉雅': ['听书'],\n        '番茄': ['小说', '听书', '短剧', '漫画'],\n        '七猫': ['小说', '听书', '短剧'],\n        '河马': ['短剧'],\n        '歪瑞古德': ['漫画'],\n        '全部': '*', // 允许所有模式\n        '默认': ['小说']\n    };\n    \n    const source = getArgument('source');\n    const allowedModes = mediaConfig[source] || mediaConfig['默认'];\n    let targetMedia = mediaConfig['默认'][0]; \n    let isAllowed = false;\n    \n    if (allowedModes === '*' || allowedModes.includes(media)) {\n        targetMedia = media;\n        isAllowed = true;\n    } else if (Array.isArray(allowedModes)) {\n        targetMedia = allowedModes[0]; \n    }\n\n    const message = isAllowed \n        ? `\\n\\n已切换至：${targetMedia}\\n请重新搜索书籍！`\n        : `\\n\\n目前${source}：不支持【${media}】模式！\\n已自动切换至：${targetMedia}`;\n\n    setArgument('media', targetMedia);\n    java.toast(message);\n}\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\n//java.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录书山账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄书山账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('书山融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t//如果要显示最新章节，请去除注释，去除会影响搜索速度\n//if ('{{$.source}}'=='番茄'){\n//\t'番茄:'+fq_last();\n//\t} else if ('{{$.source}}'=='七猫'){\n//\t'七猫:'+qm_last();\n//\t} else {\n\t'{{$.source}} {{$.last_chapter_title}}'\n//\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet device;\nlet device_type;\nlet tab = book_detail.tab;\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n \tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\nlet content_url = `${item_id}书山融合2.1${tab}书山融合2.1${title}书山融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\n\n\nlet media;\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\nif (String(key).startsWith(\"m:\")||String(key).startsWith(\"m：\")) {\n  media = \"漫画\"\n  key = key.slice(2)\n  }else if (String(key).startsWith(\"t:\")||String(key).startsWith(\"t：\")) {\n  media = \"听书\"\n  key = key.slice(2)\n} else if (String(key).startsWith(\"d:\")||String(key).startsWith(\"d：\")) {\n  media = \"短剧\"\n  key = key.slice(2)\n} else if (String(key).startsWith(\"x:\")||String(key).startsWith(\"x：\"))  {\n\tmedia = \"小说\"\n  key = key.slice(2)\n\t} else {\n\tmedia = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\n\t}\nif (key.includes('@')) {\n  const parts = key.split('@');\n  key = parts[0];\n  sources = parts[1] || sources;\n}\n\t`${base_url}/search?title=${key}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "\n搜索已废！阿鬼小改了一下！！",
    "bookSourceGroup": "💠 综合",
    "bookSourceName": "第九中文[只发现]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.d9book.net",
    "bookUrlPattern": "https?://m.d9book.net/\\d+_\\d+/",
    "customOrder": 303,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "总点击榜::/top/allvisit_{{page}}/\n总收藏榜::/top/goodnum_{{page}}/\n字数排行::/top/size_{{page}}/\n总推荐榜::/top/allvote_{{page}}/\n最新入库::/top/postdate_{{page}}/\n最近更新::/top/lastupdate_{{page}}/\n玄幻魔法::/sort/1_{{page}}/\n仙侠修真::/sort/2_{{page}}/\n都市言情::/sort/3_{{page}}/\n历史军事::/sort/4_{{page}}/\n网游竞技::/sort/5_{{page}}/\n科幻小说::/sort/6_{{page}}/\n恐怖灵异::/sort/7_{{page}}/\n其他小说::/sort/8_{{page}}/\n完本小说::/quanben",
    "header": "{\n\t\"User-Agent\":\"Mozilla/5.0 (Linux; Android 13; V2148A Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/128.0.6613.146 Mobile Safari/537.36\"\n\t}",
    "lastUpdateTime": "1746064279156",
    "loginUrl": "",
    "respondTime": 180892,
    "ruleBookInfo": {
      "author": ".info_t4@a@text",
      "coverUrl": ".info_novel_img@img@src",
      "intro": ".info_intro@text##最新章节.*",
      "kind": ".info_t2,.info_t3,.info_t5@text##.*：|小说|\\s..:.*",
      "lastChapter": ".info_t6@a@text##正文卷.|正文.|VIP卷.|默认卷.|卷_|VIP章节.|免费章节.|章节目录.|最新章节.|[\\(（【].*?[求更票谢乐发订合补加架字修Kk].*?[】）\\)]",
      "name": ".info_t1@text##书名.",
      "tocUrl": ".book_operation@a.1@href",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "#nr1@html",
      "nextContentUrl": "text.下一页@href",
      "replaceRegex": "##第.*章.*|\\s*喜欢.*更新速度最快。\\s*|\\s*.*最新章节！\\s*|\\s*本站不支持.*畅读服务。\\s*|\\(\\)|（本章节未完结.*）|（本章节完结）|\\s本章未完.*\\s*",
      "title": ""
    },
    "ruleExplore": {
      "author": ".p3@text||.ewbook_author@a@text||.newbook_author@a@text",
      "bookList": ".articlegeneral||.full_content||.newbook_list",
      "bookUrl": "a.0@href",
      "coverUrl": "a.0@href##(\\d+)_(\\d+)##//www.d9book.net/files/article/image/$1/$2/$2s.jpg###",
      "intro": ".newbook_intor@text",
      "kind": ".p1@text&&span@text##\\[|\\]",
      "name": ".p2@a@text||.newbook_title@a@text"
    },
    "ruleSearch": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "a.0@href##(\\d+)_(\\d+)##//www.d9book.net/files/article/image/$1/$2/$2s.jpg###",
      "intro": "",
      "kind": "",
      "name": ""
    },
    "ruleToc": {
      "chapterList": ".chapters li a",
      "chapterName": "text##返回书籍.*|正文卷.|正文.|VIP卷.|默认卷.|卷_|VIP章节.|免费章节.|章节目录.|最新章节.|[\\(（【].*?[求更票谢乐发订合补加架字修Kk].*?[】）\\)]",
      "chapterUrl": "href",
      "nextTocUrl": "text.下一页@href"
    },
    "searchUrl": "",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.5.3 ◎夜泽川◎",
    "bookSourceGroup": "自制,网络",
    "bookSourceName": "笔趣阁ail",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.ailcai.com",
    "customOrder": 637,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nvar result = [];\nvar push = (title, url, size) => result.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: size\n  }\n});\nvar tagul = org.jsoup.Jsoup.parse(java.ajax(source.key + \"/category/\")).select('.module li a');\nfor (i in tagul) {\n    push(tagul[i].select('h4').text(),`/e/extend/more/lsmore.php?page={{page}}&line=10&cl=${Number(i)+1}`,0.45);\n}\nJSON.stringify(result);",
    "header": "{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": "1746282082600",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "canReName": "",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\"\n}\n<js>src</js>",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js:\nvar id = baseUrl.match(/(\\d+).*?$/)[1];\nvar sr = java.ajax(\"http://www.ailcai.com\" + org.jsoup.Jsoup.parse(src).select('.page_main script')[1].attr('src'));\nresult = sr.match(/url: \"([^\"]+)/)[1] + id + \"&pageNum=0&dz=asc\";"
    },
    "ruleContent": {
      "content": "#text@html"
    },
    "ruleExplore": {
      "author": "$.writer",
      "bookList": "$.[*]",
      "bookUrl": "$.url",
      "coverUrl": "$.pic",
      "intro": "$.smalltext",
      "kind": "$.date",
      "name": "$.title"
    },
    "ruleSearch": {
      "author": ".book-author@text",
      "bookList": ".s-nv-list",
      "bookUrl": "a@href",
      "intro": "p@text",
      "kind": ".green@text",
      "name": ".title@text"
    },
    "ruleToc": {
      "chapterList": "$.list[*]",
      "chapterName": "$.title",
      "chapterUrl": "$.pic",
      "nextTocUrl": "@js:\nvar pages = JSON.parse(src).totalPage\nvar pagesList = [];\nfor (let i = 1; i < pages; i++) {\npagesList.push(baseUrl.replace(\"pageNum=0\",`pageNum=${i}`));\n}\npagesList;"
    },
    "searchUrl": "/e/search/index.php,{\n  \"body\": \"show=title&tempid=1&keyboard={{key}}\",\n  \"method\": \"POST\"\n}",
    "weight": 0
  }
]