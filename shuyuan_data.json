[
  {
    "bookSourceComment": "@小新\n@🍟\n20250405\n20250507调整\nBuding大佬帮忙调整",
    "bookSourceGroup": "1自写",
    "bookSourceName": "咕咕",
    "bookSourceType": 0,
    "bookSourceUrl": "https://cooingc.cc/",
    "customOrder": 106,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "动漫::https://cooingc.cc/vodshow/1--------{{page}}---/\n电影::https://cooingc.cc/vodshow/2--------{{page}}---/\n剧集::https://cooingc.cc/vodshow/3-----------/\n短剧::https://cooingc.cc/vodshow/63-------{{page}}---/\n综艺::https://cooingc.cc/vodshow/4--------{{page}}---/",
    "header": "{\"User-Agent\":\"Mozilla/5.0 (Linux; U; Android 13; zh-Hans-CN; PFJM10 Build/TP1A.220905.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/135.0.4896.58 Quark/6.13.6.581 Mobile Safari/537.36\",\"Accept-Language\":\"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\"}",
    "lastUpdateTime": "1747823784232",
    "respondTime": 7665,
    "ruleBookInfo": {
      "author": "class.mx-auto@class.flex@tag.p.4@text",
      "kind": "class.mx-auto@class.flex@tag.p.0@text&&class.mx-auto@class.flex@tag.p.1@text&&class.mx-auto@class.flex@tag.p.2@text",
      "lastChapter": "class.mx-auto@class.flex@tag.p.-1@text",
      "name": "class.mx-auto@class.flex@tag.h1.0@text"
    },
    "ruleContent": {
      "content": "<js>\nurl=String(result.match(/(http.*.m3u8)\",\"u/)[1]).replace(/\\\\/g,'');\njava.log(url);\nif(book.durChapterIndex==chapter.index){\njava.startBrowser(url,chapter.title)\njava.toast('正在加载视频\\n视频加载较慢，请耐心等待')\n}\nt=java.get(\"t\")\nimg=java.get(\"img\")\n' \\n\\n【刷新正文】或【点击章节链接】跳转播放\\n🔗直链:\\n'+url+'\\n'+t+img\n</js>\n\n"
    },
    "ruleExplore": {
      "bookList": "class.text-center text-sm",
      "bookUrl": "tag.button@ownText\n<js>\nsourceUrl='https://cooingc.cc/'\n//java.log(sourceUrl)\nlet result = java.getElement('tag.button').toString();\nconst startIndex = result.indexOf(\"open('/\");\nconst endIndex = result.indexOf(\"/'\");\nconst endUrl = result.substring(startIndex+7, endIndex);\njava.log(endUrl)\nurl=sourceUrl+endUrl+'/'\n</js>",
      "coverUrl": "img@data-original||img@src@put:{\"img\":\"@@img@html\"}",
      "intro": "tag.p.-1@text@put:{\"t\":\"@@tag.p.-1@text\"}",
      "name": "tag.span@text"
    },
    "ruleSearch": {
      "author": "class.w-full@tag.p.4@text&&class.w-full@tag.p.5@text",
      "bookList": "class.flex flex-row min-h-64 my-4 relative",
      "bookUrl": "class.w-full@ownText\n<js>\nsourceUrl='https://cooingc.cc/'\n//java.log(sourceUrl)\nlet result = java.getElement('tag.button').toString();\nconst startIndex = result.indexOf(\"href='/\");\nconst endIndex = result.indexOf(\"/'\");\nconst endUrl = result.substring(startIndex+7, endIndex);\njava.log(endUrl)\nurl=sourceUrl+endUrl+'/'\n</js>",
      "checkKeyWord": "我的",
      "coverUrl": "img@data-original||img@src@put:{\"img\":\"@@img@html\"}",
      "intro": "class.w-full@tag.p.7@text@put:{\"t\":\"@@class.w-full@tag.p.7@text\"}",
      "kind": "class.w-full@tag.p.1@text&&class.w-full@tag.p.2@text&&class.w-full@tag.p.3@text",
      "name": "class.w-full@tag.p.0@text",
      "wordCount": "https://cooingc.cc/vodsearch/%E6%88%91%E7%9A%84----------2---/"
    },
    "ruleToc": {
      "chapterList": "class.video_list.0@tag.button",
      "chapterName": "tag.button@text",
      "chapterUrl": "<js>\nsourceUrl='https://cooingc.cc/'\njava.log(baseUrl)\nlet result = java.getElement('tag.button').toString();\nconst startIndex = result.indexOf(\"href='/\");\nconst endIndex = result.indexOf(\"/'\");\nconst endUrl = result.substring(startIndex+7, endIndex);\njava.log(endUrl)\nurl=sourceUrl+endUrl+'/'\njava.log(url)\n</js>\n"
    },
    "searchUrl": "https://cooingc.cc/vodsearch/{{key}}----------{{page}}---/",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🍿 日常,🎊 常用,🎨 漫画",
    "bookSourceName": "🎨热辣漫画💞",
    "bookSourceType": 2,
    "bookSourceUrl": "https://mapi.hotmangasd.com",
    "bookUrlPattern": "https://.*/api/v3/comic2/.*_update=.*",
    "customOrder": 118,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/exploreUrl.js')));\n</js>",
    "header": "<js>\nvar Proxy = Map('代理：').split(\",\");\nheaders={\n    \"User-Agent\": \"COPY/999.9.9\",\n    \"proxy\": Proxy.some(value => parseInt(value, 10) == parseInt(Get('ci0'), 10)) ? '' : Proxy[0],\n}\ncache.put(java.md5Encode16(Get('url') + \"headers\"),JSON.stringify(headers));\nJSON.stringify(headers);\n</js>",
    "jsLib": "{\"热辣漫画\":\"https://qyyuapi.com/sy/js/热辣漫画/jsLib.js\"}",
    "lastUpdateTime": "1747920958253",
    "loginUi": "[\n  { name: \"代理：\", type: \"text\" },\n  { name: \"账号：\", type: \"text\" },\n  { name: \"密码：\", type: \"password\" },\n  {\n    name: \"💡　　 账　　 号　　 登　　 录　　 💡\",\n    type: \"button\",\n    action: \"Login()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  },\n  { name: \"查看当前\", type: \"button\", action: \"look(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"查看历史\", type: \"button\", action: \"look(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"恢复默认\", type: \"button\", action: \"test(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁体搜索\", type: \"button\", action: \"search_TC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁简转换\", type: \"button\", action: \"TC_to_SC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"目录整理\", type: \"button\", action: \"settle()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换源站  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"①热辣漫画❶\", type: \"button\", action: \"$(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"②热辣漫画❷\", type: \"button\", action: \"$(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"③热辣漫画❸\", type: \"button\", action: \"$(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"④热辣漫画❹\", type: \"button\", action: \"$(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"⑤热辣漫画❺\", type: \"button\", action: \"$(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"⑥热辣漫画❻\", type: \"button\", action: \"$(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"⑦热辣漫画❼\", type: \"button\", action: \"$(7)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"⑧热辣漫画❽\", type: \"button\", action: \"$(8)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"༺ˇ»`ʚ  点击切换分类  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"o(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"日本\", type: \"button\", action: \"o(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"韩国\", type: \"button\", action: \"o(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"欧美\", type: \"button\", action: \"o(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"完结\", type: \"button\", action: \"o(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换排序  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"热门人气\", type: \"button\", action: \"p(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"更新时间\", type: \"button\", action: \"p(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"页数：\", type: \"text\" },\n\n  {\n    name: \"清除网站Cookie缓存\",\n    type: \"button\",\n    action: \"deleteCookie()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  },\n\n  { name: \"清除远程代码标识\", type: \"button\", action: \"DeleteYckey()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n\n  {\n    name: \"💡　　 源　　 站　　 打　　 印　　 💡\",\n    type: \"button\",\n    action: \"test()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  }\n]",
    "loginUrl": "eval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/loginUrl.js')));",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "canReName": "reName",
      "coverUrl": "cover",
      "downloadUrls": "durl",
      "init": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/ruleBookInfo.js')));\n</js>",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "tocUrl": "url",
      "wordCount": "word"
    },
    "ruleContent": {
      "content": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/ruleContent.js')));\n</js>",
      "imageStyle": "FULL"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/ruleExplore.js')));\n</js>",
      "bookUrl": "url",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/ruleSearch.js')));\n</js>",
      "bookUrl": "url",
      "checkKeyWord": "秘密",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleToc": {
      "chapterList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/ruleToc.js')));\n</js>",
      "chapterName": "title",
      "chapterUrl": "link",
      "isVolume": "",
      "nextTocUrl": "@js:\nvar num = Math.floor(java.get(\"total\") / 500); \nvar res = String(baseUrl).match(/(.*offset=)\\d+(.*)/) || ['',''];\nvar data = [];\nfor(i = 1;i <= num; i++){\n    data.push(res[1] + (i*500) + res[2]);\n}\ndata;",
      "preUpdateJs": "if (!String(book.bookUrl).includes(Get('url'))) {\n    book.bookUrl = String(book.bookUrl).replace(/.*\\/\\/[^\\/]+/, Get('url'));\n    book.tocUrl = String(book.tocUrl).replace(/.*\\/\\/[^\\/]+/, Get('url'));\n    java.refreshTocUrl();\n}",
      "updateTime": "time"
    },
    "searchUrl": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/热辣漫画/searchUrl.js')));\n</js>",
    "variableComment": "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",
    "weight": 0
  },
  {
    "bookSourceComment": "每隔八小时访问一遍签到（使用的时候访问）\n点击“登录”自定义发现\n更改过发现要刷新本书源才会生效\n\n❗️注意事项:\n1、请不要退出晋江app的账号，只要点了退出，或者在其他地方登录了，都要重新抓token。\n2、更新token，书籍就要更新目录。\n3、【抓包token登录】和【账号登录】二选一，【抓包token登录】的优先级高些，填了【抓包token登录】，就是按【抓包token登录的值】登录\n\n4、登录步骤【设备保护关闭的状态下】：\n①填写好账号密码，点击“邮箱验证码”或者“手机验证码”\n②填写好验证码，点击“邮箱登录”或者“手机登录”\n③想要确认是否成功可以在登录UI里点右上角三点，查看登录头token里是否有值。\n④如果弹出提示“请校检验证码”，可尝试填入上一次发送给你验证码。\n\n5、如果邮箱和手机号无法登录，可能是需要过滑动验证码，可尝试先在晋江app里登录一遍后，再在阅读里登录，❗️还是不行就只能抓包token，填写在“抓包token登录”处。",
    "bookSourceGroup": "①🔰  正版,②🌸  常用",
    "bookSourceName": "🏷晋江文学",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.jjwxc.net/channel/",
    "bookUrlPattern": "https?://app-cdn.jjwxc.net/androidapi/novelbasicinfo\\?novelId=\\d+",
    "customOrder": 5,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\ntoken = Map(\"token\");\n\n// 选择需要开启的分类\nconst enabledCategories = Map(\"fl\") || \"9,10\";\nconst tagNum = Map(\"bq\") || \"5\";\n\ntagName = [\"言情\",\"纯爱\",\"百合\",\"无Cp\",\"多元\"][Number(tagNum)-1];\ntagCategory = [1,2,3,5,6][Number(tagNum)-1];\nconst at = Map(\"at\");\n\n\n// 一行个数（0是自由排）\nconst defaultNumPerRow = 0;\n\n\n// 分隔符\nconst separator = '::';\n\n\n//标识符\n分类标识 =\"🌸\"\n榜单标识=\"📖\"\n标签标识=\"🏷\"\n\n// 添加作者格式：作者名::作者id\nlet authorNames = String(java.base64Decode(at || \"\")).split(\" \").filter(name => name.trim() !== \"\");\nauthorNames = authorNames.length ? authorNames.map(x => `${x}::::at`) : [];\nif (authorNames.length) authorNames.unshift(\"📖 作者 📖::::1\");\n\n//书架数据\nlet ShelfNum  = Map(\"classNum\")??\"\"\nlet ShelfList = [];\n\tif(/❗️([\\s\\S]+?)❗️/.test(String(source.getVariable()))){\n\t\tShelfList =JSON.parse(String(source.getVariable()).match(/❗️([\\s\\S]+?)❗️/)[1]);\n\t\t}else{\n\t\t\tShelfNum = \"\"\n\t\t\t}\n\n// 为数组中的每一项添加 \"::::class\"\nShelfList = ShelfList.map(item => item + \"::::class\");\n\n// 标题::链接::一行个数::分类\nlet all = [\n\"🍒 其他::::1\",\n  \"点击签到::https://app.jjwxc.org/androidapi/signin,{\\\"method\\\":\\\"POST\\\",\\\"body\\\":\\\"versionCode=313&sign={{enbody = String(Date.now())+':'+String(source.getLoginHeaderMap().get('token'));String(java.createSymmetricCrypto('DES/CBC/PKCS5Padding', String('KW8Dvm2N'), String('1ae2c94b')).encryptBase64(enbody))}}\\\"}\",\n  \"今日限免::https://app-cdn.jjwxc.net/bookstore/getFullPage?channel=novelfree\",\n  \"新书千字榜::https://app-cdn.jjwxc.com/bookstore/favObservationByDate?day=today&use_cdn=1&version=19\",\n  \"⬆️ TOP 100::::1\",\n  \"言情::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=yq,{'headers':{'versionCode': '389'}}::null\",\n\"纯爱::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=dm,{'headers':{'versionCode': '389'}}::null\",\n\"衍生::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=tr,{'headers':{'versionCode': '389'}}::null\",\n\"无CP+::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=nocp_plus,{'headers':{'versionCode': '389'}}::null\",\n\"百合::https://android.jjwxc.net/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=398&type=bh,{'headers':{'versionCode': '398','versiontype':'reading'}}::null\"\n];\n\nconst categories = [\"古代言情\",\"现代言情\",\"幻想现言\",\"古代穿越\",\"奇幻言情\",\"未来游戏悬疑\",\"都市纯爱\",\"现代幻纯\",\"古代纯爱\",\"百合\",\"无CP\",\"衍生无CP\",\"衍生纯爱\",\"衍生言情\",\"二次元言情\",\"多元\",\"男主无CP\",\"女主无CP\",\"未来幻纯\"];\n\n// 分类数据\nconst categoryData = {\n  \"古代言情\": {\n    \"连载\": [\n      \"复仇虐渣::natural_16\",\n      \"重生::natural_12\",\n      \"宫廷侯爵::natural_11\",\n      \"架空历史::natural_13\",\n      \"布衣生活::natural_9\",\n      \"古香古色::natural_8\",\n      \"科举朝堂::natural_18\",\n      \"励志人生::natural_19\",\n      \"市井人家::natural_17\",\n      \"女尊女强::natural_14\",\n      \"传奇武侠::natural_15\"\n    ],\n    \"完结\": [\n      \"复仇虐渣::natural_33\",\n      \"重生::natural_29\",\n      \"宫廷侯爵::natural_28\",\n      \"架空历史::natural_30\",\n      \"布衣生活::natural_26\",\n      \"古香古色::natural_25\",\n      \"科举朝堂::natural_35\",\n      \"励志人生::natural_36\",\n      \"市井人家::natural_34\",\n      \"女尊女强::natural_31\",\n      \"传奇武侠::natural_32\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_23\",\n                  \"运气淘文::40000001\",\n      \"勤奋更新::natural_1482\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=101&ranktype=deep\",\n      \"育苗实验::90001000_101\",\n      \"VIP新文::natural_3\",\n      \"新晋作者::natural_4\",\n      \"月度排行::natural_5\",\n      \"季度排行::natural_6\",\n      \"半年排行::natural_7\"\n    ]\n  },\n  \"现代言情\": {\n    \"连载\": [\n      \"天之骄子::natural_52\",\n      \"豪门世家::natural_44\",\n      \"励志人生::natural_46\",\n      \"娱乐星光::natural_53\",\n      \"婚前婚后::natural_47\",\n      \"时代新风::natural_51\",\n      \"校园青春::natural_73\",\n      \"都市情缘::natural_48\",\n      \"甜心蜜意::natural_75\",\n      \"破镜重圆::natural_49\",\n      \"近水楼台::natural_50\",\n      \"情有独钟::natural_76\",\n      \"时尚流行::natural_74\",\n      \"欢喜冤家::natural_54\",\n      \"因缘邂逅::natural_55\"\n    ],\n    \"完结\": [\n      \"天之骄子::natural_69\",\n      \"豪门世家::natural_61\",\n      \"励志人生::natural_63\",\n      \"娱乐星光::natural_70\",\n      \"婚前婚后::natural_64\",\n      \"时代新风::natural_68\",\n      \"校园青春::natural_77\",\n      \"都市情缘::natural_65\",\n      \"甜心蜜意::natural_79\",\n      \"破镜重圆::natural_66\",\n      \"近水楼台::natural_67\",\n      \"情有独钟::natural_80\",\n      \"时尚流行::natural_78\",\n      \"欢喜冤家::natural_71\",\n      \"因缘邂逅::natural_72\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_59\",\n                  \"运气淘文::40000002\",\n      \"勤奋更新::natural_1483\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=102&ranktype=deep\",\n      \"育苗实验::90001000_102\",\n      \"VIP新文::natural_39\",\n      \"新晋作者::natural_40\",\n      \"月度排行::natural_41\",\n      \"季度排行::natural_42\",\n      \"半年排行::natural_43\"\n    ]\n  },\n  \"幻想现言\": {\n    \"连载\": [\n      \"流金年代::natural_107\",\n      \"豪门世家::natural_100\",\n      \"娱乐时尚::natural_108\",\n      \"快穿系统::natural_97\",\n      \"种田日常::natural_98\",\n      \"打脸爽文::natural_105\",\n      \"重启人生::natural_93\",\n      \"都市异闻::natural_103\",\n      \"穿越时空::natural_94\",\n      \"神奇能力::natural_102\",\n      \"升级逆袭::natural_104\",\n      \"时代奇缘::natural_96\",\n      \"人生赢家::natural_95\",\n      \"现代架空::natural_101\",\n      \"幻想传奇::natural_99\"\n    ],\n    \"完结\": [\n      \"流金年代::natural_123\",\n      \"豪门世家::natural_116\",\n      \"娱乐时尚::natural_124\",\n      \"快穿系统::natural_113\",\n      \"种田日常::natural_114\",\n      \"打脸爽文::natural_121\",\n      \"重启人生::natural_109\",\n      \"都市异闻::natural_119\",\n      \"穿越时空::natural_110\",\n      \"神奇能力::natural_118\",\n      \"升级逆袭::natural_120\",\n      \"时代奇缘::natural_112\",\n      \"人生赢家::natural_111\",\n      \"现代架空::natural_117\",\n      \"幻想传奇::natural_115\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_86\",\n                  \"运气淘文::40000003\",\n      \"勤奋更新::natural_1484\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=103&ranktype=deep\",\n      \"育苗实验::90001000_103\",\n      \"VIP新文::natural_84\",\n      \"新晋作者::natural_87\",\n      \"月度排行::natural_81\",\n      \"季度排行::natural_82\",\n      \"半年排行::natural_88\"\n    ]\n  },\n  \"古代穿越\": {\n    \"连载\": [\n      \"复仇虐渣::natural_148\",\n      \"宫廷侯爵::natural_142\",\n      \"架空穿越::natural_140\",\n      \"系统快穿::natural_147\",\n      \"历史穿越::natural_139\",\n      \"科举朝堂::natural_146\",\n      \"布衣生活::natural_141\",\n      \"欢喜冤家::natural_143\",\n      \"女尊女强::natural_138\",\n      \"市井人家::natural_145\",\n      \"异世穿书::natural_144\"\n    ],\n    \"完结\": [\n      \"复仇虐渣::natural_164\",\n      \"宫廷侯爵::natural_158\",\n      \"架空穿越::natural_156\",\n      \"系统快穿::natural_163\",\n      \"历史穿越::natural_155\",\n      \"科举朝堂::natural_162\",\n      \"布衣生活::natural_157\",\n      \"欢喜冤家::natural_159\",\n      \"女尊女强::natural_154\",\n      \"市井人家::natural_161\",\n      \"异世穿书::natural_160\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_130\",\n                  \"运气淘文::40000004\",\n      \"勤奋更新::natural_1485\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=104&ranktype=deep\",\n      \"育苗实验::90001000_104\",\n      \"VIP新文::natural_128\",\n      \"新晋作者::natural_131\",\n      \"月度排行::natural_125\",\n      \"季度排行::natural_126\",\n      \"半年排行::natural_132\"\n    ]\n  },\n  \"奇幻言情\": {\n    \"连载\": [\n      \"天作之合::natural_179\",\n      \"西方奇幻::natural_183\",\n      \"爽文::natural_181\",\n      \"奇幻甜宠::natural_177\",\n      \"升级逆袭::natural_188\",\n      \"东方玄幻::natural_186\",\n      \"灵异神怪::natural_182\",\n      \"穿书异能::natural_187\",\n      \"系统穿越::natural_185\",\n      \"金手指::natural_184\",\n      \"另类幻想::natural_180\"\n    ],\n    \"完结\": [\n      \"天作之合::natural_191\",\n      \"西方奇幻::natural_195\",\n      \"爽文::natural_193\",\n      \"奇幻甜宠::natural_189\",\n      \"升级逆袭::natural_200\",\n      \"东方玄幻::natural_198\",\n      \"灵异神怪::natural_194\",\n      \"穿书异能::natural_199\",\n      \"系统穿越::natural_197\",\n      \"金手指::natural_196\",\n      \"另类幻想::natural_192\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_170\",\n                  \"运气淘文::40000005\",\n      \"勤奋更新::natural_1486\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=105&ranktype=deep\",\n      \"育苗实验::90001000_105\",\n      \"VIP新文::natural_168\",\n      \"新晋作者::natural_171\",\n      \"月度排行::natural_165\",\n      \"季度排行::natural_166\",\n      \"半年排行::natural_172\"\n    ]\n  },\n  \"未来游戏悬疑\": {\n    \"连载\": [\n      \"赛博废土::natural_225\",\n      \"无限领域::natural_222\",\n      \"基建种田::natural_226\",\n      \"末世异世::natural_215\",\n      \"规则怪谈::natural_223\",\n      \"游戏娱乐::natural_216\",\n      \"悬疑惊悚::natural_220\",\n      \"系统异能::natural_221\",\n      \"穿书快穿::natural_227\",\n      \"升级爽文::natural_224\",\n      \"重生穿越::natural_219\",\n      \"未来科幻::natural_217\",\n      \"推理探案::natural_214\",\n      \"幻想甜宠::natural_228\",\n      \"异度幻想::natural_218\"\n    ],\n    \"完结\": [\n      \"赛博废土::natural_241\",\n      \"无限领域::natural_238\",\n      \"基建种田::natural_242\",\n      \"末世异世::natural_231\",\n      \"规则怪谈::natural_239\",\n      \"游戏娱乐::natural_232\",\n      \"悬疑惊悚::natural_236\",\n      \"系统异能::natural_237\",\n      \"穿书快穿::natural_243\",\n      \"升级爽文::natural_240\",\n      \"重生穿越::natural_235\",\n      \"未来科幻::natural_233\",\n      \"推理探案::natural_230\",\n      \"幻想甜宠::natural_244\",\n      \"异度幻想::natural_234\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_206\",\n                  \"运气淘文::40000006\",\n      \"勤奋更新::natural_1487\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=106&ranktype=deep\",\n      \"育苗实验::90001000_106\",\n      \"VIP新文::natural_204\",\n      \"新晋作者::natural_207\",\n      \"月度排行::natural_201\",\n      \"季度排行::natural_202\",\n      \"半年排行::natural_208\"\n    ]\n  },\n  \"都市纯爱\": {\n    \"连载\": [\n      \"时尚娱乐::natural_270\",\n      \"种田日常::natural_266\",\n      \"现代都市::natural_260\",\n      \"豪门世家::natural_267\",\n      \"业界精英::natural_265\",\n      \"重生::natural_259\",\n      \"边缘恋曲::natural_264\",\n      \"校园青春::natural_261\",\n      \"婚前婚后::natural_272\",\n      \"穿越时空::natural_262\",\n      \"成长励志::natural_268\",\n      \"欢喜冤家::natural_257\",\n      \"情有独钟::natural_271\",\n      \"都市甜文::natural_258\",\n      \"打脸逆袭::natural_263\"\n    ],\n    \"完结\": [\n      \"时尚娱乐::natural_286\",\n      \"种田日常::natural_282\",\n      \"现代都市::natural_276\",\n      \"豪门世家::natural_283\",\n      \"业界精英::natural_281\",\n      \"重生::natural_275\",\n      \"边缘恋曲::natural_280\",\n      \"校园青春::natural_277\",\n      \"婚前婚后::natural_288\",\n      \"穿越时空::natural_278\",\n      \"成长励志::natural_284\",\n      \"欢喜冤家::natural_273\",\n      \"情有独钟::natural_287\",\n      \"都市甜文::natural_274\",\n      \"打脸逆袭::natural_279\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_250\",\n                  \"运气淘文::40000007\",\n      \"勤奋更新::natural_1488\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=107&ranktype=deep\",\n      \"育苗实验::90001000_107\",\n      \"VIP新文::natural_248\",\n      \"新晋作者::natural_251\",\n      \"月度排行::natural_245\",\n      \"季度排行::natural_246\",\n      \"半年排行::natural_252\"\n    ]\n  },\n  \"现代幻纯\": {\n    \"连载\": [\n      \"娱乐星光::natural_517\",\n      \"萌宠频道::natural_515\",\n      \"异闻秘术::natural_514\",\n      \"快穿世界::natural_511\",\n      \"奇幻灵异::natural_523\",\n      \"幻想甜宠::natural_521\",\n      \"无限流::natural_509\",\n      \"系统::natural_512\",\n      \"边缘幻想::natural_516\",\n      \"情有独钟::natural_520\",\n      \"升级爽文::natural_522\"\n    ],\n    \"完结\": [\n      \"娱乐星光::natural_533\",\n      \"萌宠频道::natural_531\",\n      \"异闻秘术::natural_530\",\n      \"快穿世界::natural_527\",\n      \"奇幻灵异::natural_539\",\n      \"幻想甜宠::natural_537\",\n      \"无限流::natural_525\",\n      \"系统::natural_528\",\n      \"边缘幻想::natural_532\",\n      \"情有独钟::natural_536\",\n      \"升级爽文::natural_538\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_502\",\n                  \"运气淘文::40000013\",\n      \"勤奋更新::natural_1495\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=118&ranktype=deep\",\n      \"育苗实验::90001000_118\",\n      \"VIP新文::natural_500\",\n      \"新晋作者::natural_503\",\n      \"月度排行::natural_497\",\n      \"季度排行::natural_498\",\n      \"半年排行::natural_504\"\n    ]\n  },\n  \"古代纯爱\": {\n    \"连载\": [\n      \"仙侠修真::natural_298\",\n      \"布衣生活::natural_297\",\n      \"武侠传奇::natural_307\",\n      \"西幻异世 ::natural_301\",\n      \"穿越时空::natural_303\",\n      \"重生::natural_302\",\n      \"古代幻想::natural_299\",\n      \"系统快穿::natural_304\",\n      \"玄幻灵异::natural_305\",\n      \"天作之合::natural_306\",\n      \"升级逆袭::natural_300\"\n    ],\n    \"完结\": [\n      \"仙侠修真::natural_315\",\n      \"布衣生活::natural_314\",\n      \"武侠传奇::natural_324\",\n      \"西幻异世 ::natural_318\",\n      \"穿越时空::natural_320\",\n      \"重生::natural_319\",\n      \"古代幻想::natural_316\",\n      \"系统快穿::natural_321\",\n      \"玄幻灵异::natural_322\",\n      \"天作之合::natural_323\",\n      \"升级逆袭::natural_317\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_311\",\n                  \"运气淘文::40000008\",\n      \"勤奋更新::natural_1489\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=108&ranktype=deep\",\n      \"育苗实验::90001000_108\",\n      \"VIP新文::natural_291\",\n      \"新晋作者::natural_292\",\n      \"月度排行::natural_293\",\n      \"季度排行::natural_294\",\n      \"半年排行::natural_295\"\n    ]\n  },\n  \"百合\": {\n    \"连载\": [\n      \"幻想未来::natural_336\",\n      \"架空历史::natural_334\",\n      \"都市情缘::natural_337\",\n      \"穿越时空::natural_335\",\n      \"天赐良缘::natural_338\",\n      \"时尚娱乐::natural_339\",\n      \"奇幻异闻::natural_333\",\n      \"系统快穿::natural_342\",\n      \"宫廷侯爵::natural_340\",\n      \"业界精英::natural_341\",\n      \"情有独钟::natural_343\"\n    ],\n    \"完结\": [\n      \"幻想未来::natural_353\",\n      \"架空历史::natural_351\",\n      \"都市情缘::natural_354\",\n      \"穿越时空::natural_352\",\n      \"天赐良缘::natural_355\",\n      \"时尚娱乐::natural_356\",\n      \"奇幻异闻::natural_350\",\n      \"系统快穿::natural_359\",\n      \"宫廷侯爵::natural_357\",\n      \"业界精英::natural_358\",\n      \"情有独钟::natural_360\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_1072\",\n                  \"运气淘文::40000009\",\n      \"勤奋更新::natural_1490\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=9&ranktype=deep\",\n      \"育苗实验::90001000_9\",\n      \"VIP新文::natural_1069\",\n      \"新晋作者::natural_1045\",\n      \"月度排行::natural_1043\",\n      \"季度排行::natural_1042\",\n      \"半年排行::natural_1044\"\n    ]\n  },\n  \"无CP\": {\n    \"连载\": [\n      \"未来幻想-女主::natural_477\",\n      \"都市成长-男主::natural_478\",\n      \"都市成长-女主::natural_479\",\n      \"古代架空-男主::natural_480\",\n      \"古代架空-女主::natural_481\",\n      \"无限快穿-男主::natural_482\",\n      \"无限快穿-女主::natural_483\"\n    ],\n    \"完结\": [\n      \"未来幻想-女主::natural_490\",\n      \"都市成长-男主::natural_491\",\n      \"都市成长-女主::natural_492\",\n      \"古代架空-男主::natural_493\",\n      \"古代架空-女主::natural_494\",\n      \"无限快穿-男主::natural_495\",\n      \"无限快穿-女主::natural_496\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_487\",\n                  \"运气淘文::40000014\",\n      \"勤奋更新::natural_1494\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=114&ranktype=deep\",\n      \"育苗实验::90001000_114\",\n      \"VIP新文::natural_471\",\n      \"新晋作者::natural_472\",\n      \"月度排行::natural_473\",\n      \"季度排行::natural_474\",\n      \"半年排行::natural_475\"\n    ]\n  },\n  \"衍生无CP\": {\n    \"连载\": [\n      \"幻想轻小说::natural_549\",\n      \"东方衍生::natural_550\",\n      \"西方衍生::natural_555\",\n      \"二次元热血::natural_552\",\n      \"二次元幻想::natural_553\",\n      \"二次元异能::natural_554\",\n      \"女主向::natural_551\"\n    ],\n    \"完结\": [\n      \"幻想轻小说::natural_562\",\n      \"东方衍生::natural_563\",\n      \"西方衍生::natural_568\",\n      \"二次元热血::natural_565\",\n      \"二次元幻想::natural_566\",\n      \"二次元异能::natural_567\",\n      \"女主向::natural_564\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_559\",\n      \"运气淘文::40000015\",\n      \"勤奋更新::natural_1496\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=120&ranktype=deep\",\n      \"育苗实验::90001000_120\",\n      \"VIP新文::natural_543\",\n      \"新晋作者::natural_544\",\n      \"月度排行::natural_545\",\n      \"季度排行::natural_546\",\n      \"半年排行::natural_547\"\n    ]\n  },\n  \"衍生纯爱\": {\n    \"连载\": [\n      \"西方罗曼::natural_373\",\n      \"都市轻小说::natural_376\",\n      \"幻想轻小说::natural_377\",\n      \"二次元热血::natural_378\",\n      \"二次元幻想::natural_379\",\n      \"二次元异能::natural_369\",\n      \"其他衍生::natural_372\"\n    ],\n    \"完结\": [\n      \"西方罗曼::natural_390\",\n      \"都市轻小说::natural_393\",\n      \"幻想轻小说::natural_394\",\n      \"二次元热血::natural_395\",\n      \"二次元幻想::natural_396\",\n      \"二次元异能::natural_386\",\n      \"其他衍生::natural_389\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_383\",\n                  \"运气淘文::40000010\",\n      \"勤奋更新::natural_1491\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=110&ranktype=deep\",\n      \"育苗实验::90001000_110\",\n      \"VIP新文::natural_363\",\n      \"新晋作者::natural_364\",\n      \"月度排行::natural_365\",\n      \"季度排行::natural_366\",\n      \"半年排行::natural_367\"\n    ]\n  },\n  \"衍生言情\": {\n    \"连载\": [\n      \"历史传奇::natural_450\",\n      \"西方罗曼::natural_449\",\n      \"无限快穿::natural_451\",\n      \"江湖恩怨::natural_453\",\n      \"娱乐竞技::natural_454\",\n      \"东方幻想::natural_452\",\n      \"其他::natural_455\"\n    ],\n    \"完结\": [\n      \"历史传奇::natural_463\",\n      \"西方罗曼::natural_462\",\n      \"无限快穿::natural_464\",\n      \"江湖恩怨::natural_466\",\n      \"娱乐竞技::natural_467\",\n      \"东方幻想::natural_465\",\n      \"其他::natural_468\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_459\",\n                  \"运气淘文::40000012\",\n      \"勤奋更新::natural_1493\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=112&ranktype=deep\",\n      \"育苗实验::90001000_112\",\n      \"VIP新文::natural_443\",\n      \"新晋作者::natural_444\",\n      \"月度排行::natural_445\",\n      \"季度排行::natural_446\",\n      \"半年排行::natural_447\"\n    ]\n  },\n  \"二次元言情\": {\n    \"连载\": [\n      \"多重身份::natural_415\",\n      \"经营基建::natural_418\",\n      \"竞技社团::natural_422\",\n      \"东方古风::natural_412\",\n      \"西幻魔幻::natural_413\",\n      \"乙女游戏::natural_414\",\n      \"异能超能::natural_417\",\n      \"转生::natural_420\",\n      \"异闻怪谈::natural_421\",\n      \"浪漫情缘::natural_419\",\n      \"新奇幻想::natural_423\"\n    ],\n    \"完结\": [\n      \"多重身份::natural_432\",\n      \"经营基建::natural_435\",\n      \"竞技社团::natural_439\",\n      \"东方古风::natural_429\",\n      \"西幻魔幻::natural_430\",\n      \"乙女游戏::natural_431\",\n      \"异能超能::natural_434\",\n      \"转生::natural_437\",\n      \"异闻怪谈::natural_438\",\n      \"浪漫情缘::natural_436\",\n      \"新奇幻想::natural_440\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_427\",\n                  \"运气淘文::40000011\",\n      \"勤奋更新::natural_1492\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=111&ranktype=deep\",\n      \"育苗实验::90001000_111\",\n      \"VIP新文::natural_407\",\n      \"新晋作者::natural_408\",\n      \"月度排行::natural_409\",\n      \"季度排行::natural_410\",\n      \"半年排行::natural_411\"\n    ]\n  },\n  \"多元\": {\n    \"连载\": [],\n    \"完结\": [],\n    \"榜单\": [\n      \"频道金榜::natural_1010\",\n      \"月度排行::natural_1012\",\n      \"VIP新文::natural_1011\",\n      \"育苗实验::90001000_121\",\n      \"新晋作者::natural_1013\",\n      \"季度排行::natural_1014\",\n      \"半年排行::natural_1518\"\n    ]\n  },\n  \"男主无CP\": {\n    \"连载\": [\n      \"都市成长::natural_478\",\n      \"古代架空::natural_480\",\n      \"无限快穿::natural_482\"\n    ],\n    \"完结\": [\n      \"都市成长::natural_491\",\n      \"古代架空::natural_493\",\n      \"无限快穿::natural_495\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_992\",\n                  \"勤奋更新::natural_1515\",\n      \"VIP新文::natural_986\",\n      \"新晋作者::natural_987\",\n      \"月度排行::natural_988\",\n      \"季度排行::natural_989\",\n      \"半年排行::natural_990\"\n    ]\n  },\n  \"女主无CP\": {\n    \"连载\": [\n      \"都市成长::natural_479\",\n      \"古代架空::natural_481\",\n      \"无限快穿::natural_483\"\n    ],\n    \"完结\": [\n      \"都市成长::natural_492\",\n      \"古代架空::natural_494\",\n      \"无限快穿::natural_496\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_1000\",\n                  \"勤奋更新::natural_1516\",\n      \"VIP新文::natural_994\",\n      \"新晋作者::natural_995\",\n      \"月度排行::natural_996\",\n      \"季度排行::natural_997\",\n      \"半年排行::natural_998\"\n    ]\n  },\n  \"未来幻纯\": {\n    \"连载\": [\n      \"娱乐竞技::natural_1112\",\n      \"快穿::natural_1113\",\n      \"无限流::natural_1114\",\n      \"系统::natural_1115\",\n      \"末世狂想::natural_1116\",\n      \"幻想甜宠::natural_1117\",\n      \"星际日常::natural_1118\",\n      \"奇幻异想::natural_1119\",\n      \"边缘幻想::natural_1120\",\n      \"未来畅想::natural_1121\",\n      \"升级爽文::natural_1122\"\n    ],\n    \"完结\": [\n      \"娱乐竞技::natural_1128\",\n      \"快穿::natural_1129\",\n      \"无限流::natural_1130\",\n      \"系统::natural_1131\",\n      \"末世狂想::natural_1132\",\n      \"幻想甜宠::natural_1133\",\n      \"星际日常::natural_1134\",\n      \"奇幻异想::natural_1135\",\n      \"边缘幻想::natural_1136\",\n      \"未来畅想::natural_1137\",\n      \"升级爽文::natural_1138\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_1104\",\n      \"运气淘文::wlhxca\",\n      \"勤奋更新::natural_1497\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=126&ranktype=deep\",\n      \"育苗实验::90001000_126\",\n      \"VIP新文::natural_1102\",\n      \"新晋作者::natural_1105\",\n      \"月度排行::natural_1099\",\n      \"季度排行::natural_1100\",\n      \"半年排行::natural_1106\"\n    ]\n  }\n}\n\n// 标签数据\nconst tags = [\"轻松::262::::bq\",\"爽文::137::::bq\",\"甜文::124::::bq\",\"正剧::263::::bq\",\"穿书::134::::bq\",\"强强::19::::bq\",\"系统::122::::bq\",\"成长::183::::bq\",\"重生::75::::bq\",\"惊悚::9::::lx\",\"悬疑::10::::lx\",\"剧情::16::::lx\",\"快穿::125::::bq\",\"直播::142::::bq\",\"逆袭::184::::bq\",\"励志::121::::bq\",\"打脸::138::::bq\",\"女强::82::::bq\",\"异能::72::::bq\",\"基建::237::::bq\",\"救赎::329::::bq\",\"女配::96::::bq\",\"暗恋::314::::bq\",\"末世::81::::bq\",\"惊悚::29::::bq\",\"婚恋::78::::bq\",\"科幻::28::::bq\",\"炮灰::305::::bq\",\"开挂::344::::bq\",\"经营::180::::bq\",\"脑洞::273::::bq\",\"烧脑::269::::bq\",\"爱情::1::::lx\",\"武侠::2::::lx\",\"奇幻::3::::lx\",\"仙侠::4::::lx\",\"游戏::5::::lx\",\"传奇::6::::lx\",\"科幻::7::::lx\",\"童话::8::::lx\",\"都市::30::::bq\",\"校园::185::::bq\",\"综漫::6::::bq\",\"星际::135::::bq\",\"日常::268::::bq\",\"柯南::241::::bq\",\"年下::21::::bq\",\"咒回::240::::bq\",\"沙雕::266::::bq\",\"美食::99::::bq\",\"生子::20::::bq\",\"群像::356::::bq\",\"萌宠::205::::bq\",\"文野::208::::bq\",\"治愈::265::::bq\",\"团宠::287::::bq\",\"爆笑::261::::bq\",\"西幻::143::::bq\",\"魔幻::27::::bq\",\"综艺::335::::bq\",\"热血::267::::bq\",\"废土::281::::bq\",\"清穿::18::::bq\",\"朝堂::178::::bq\",\"虫族::260::::bq\",\"玄学::206::::bq\",\"萌娃::302::::bq\",\"钓系::298::::bq\",\"电竞::328::::bq\",\"港风::282::::bq\",\"全息::276::::bq\",\"宫斗::74::::bq\",\"剧透::343::::bq\",\"科举::174::::bq\",\"机甲::97::::bq\",\"虐文::42::::bq\",\"网王::1::::bq\",\"原神::371::::bq\",\"古早::275::::bq\",\"师徒::292::::bq\",\"家教::12::::bq\",\"江湖::35::::bq\",\"忠犬::312::::bq\",\"武侠::11::::bq\",\"七五::8::::bq\",\"宅斗::73::::bq\",\"腹黑::290::::bq\",\"权谋::326::::bq\",\"失忆::320::::bq\",\"猎人::5::::bq\",\"洪荒::67::::bq\",\"卡牌::357::::bq\",\"职场::98::::bq\",\"御姐::310::::bq\",\"盲盒::345::::bq\",\"吐槽::270::::bq\",\"替身::286::::bq\",\"预知::346::::bq\",\"创业::330::::bq\",\"足球::368::::bq\",\"BE::317::::bq\",\"HE::318::::bq\",\"ABO::259::::bq\",\"APP::338::::bq\",\"NPC::293::::bq\",\"哨向::369::::bq\",\"田园::58::::bq\",\"中二::375::::bq\",\"群穿::352::::bq\",\"奇谭::197::::bq\",\"囤货::322::::bq\",\"位面::350::::bq\",\"学霸::309::::bq\",\"傲娇::294::::bq\",\"民国::61::::bq\",\"鬼灭::254::::bq\",\"开荒::331::::bq\",\"商战::123::::bq\",\"转生::362::::bq\",\"锦鲤::349::::bq\",\"齐神::201::::bq\",\"血族::69::::bq\",\"网红::141::::bq\",\"现实::271::::bq\",\"扶贫::324::::bq\",\"封神::215::::bq\",\"冰山::296::::bq\",\"聊斋::188::::bq\",\"天降::308::::bq\",\"美娱::140::::bq\",\"毒舌::299::::bq\",\"非遗::323::::bq\",\"吃货::297::::bq\",\"御兽::365::::bq\",\"悲剧::264::::bq\",\"港台::87::::bq\",\"网配::84::::bq\",\"曲艺::306::::bq\",\"婆媳::80::::bq\",\"恶役::359::::bq\",\"轻小说::17::::lx\",\"娱乐圈::64::::bq\",\"无限流::83::::bq\",\"升级流::139::::bq\",\"种田文::66::::bq\",\"年代文::173::::bq\",\"万人迷::295::::bq\",\"美强惨::291::::bq\",\"少年漫::90::::bq\",\"马甲文::243::::bq\",\"克苏鲁::283::::bq\",\"白月光::313::::bq\",\"单元文::355::::bq\",\"高智商::311::::bq\",\"读心术::337::::bq\",\"时尚圈::182::::bq\",\"迪化流::370::::bq\",\"龙傲天::289::::bq\",\"论坛体::354::::bq\",\"对照组::316::::bq\",\"古穿今::65::::bq\",\"红楼梦::15::::bq\",\"反套路::274::::bq\",\"神豪流::348::::bq\",\"纸片人::288::::bq\",\"日韩泰::86::::bq\",\"签到流::351::::bq\",\"读档流::340::::bq\",\"召唤流::347::::bq\",\"大冒险::198::::bq\",\"姐弟恋::186::::bq\",\"模拟器::358::::bq\",\"乙女向::360::::bq\",\"少女漫::14::::bq\",\"吐槽役::366::::bq\",\"犬夜叉::257::::bq\",\"红包群::341::::bq\",\"中世纪::280::::bq\",\"对话体::353::::bq\",\"情有独钟::39::::bq\",\"穿越时空::60::::bq\",\"天作之合::52::::bq\",\"天之骄子::54::::bq\",\"豪门世家::33::::bq\",\"宫廷侯爵::32::::bq\",\"仙侠修真::68::::bq\",\"破镜重圆::47::::bq\",\"业界精英::101::::bq\",\"灵异神怪::26::::bq\",\"幻想空间::25::::bq\",\"先婚后爱::315::::bq\",\"欢喜冤家::41::::bq\",\"悬疑推理::128::::bq\",\"游戏网游::92::::bq\",\"时代奇缘::22::::bq\",\"青梅竹马::62::::bq\",\"因缘邂逅::45::::bq\",\"现代架空::126::::bq\",\"相爱相杀::103::::bq\",\"花季雨季::31::::bq\",\"未来架空::127::::bq\",\"恋爱合约::48::::bq\",\"英美衍生::17::::bq\",\"体育竞技::70::::bq\",\"近水楼台::46::::bq\",\"超级英雄::132::::bq\",\"东方玄幻::144::::bq\",\"布衣生活::38::::bq\",\"乔装改扮::51::::bq\",\"规则怪谈::361::::bq\",\"复仇虐渣::145::::bq\",\"异世大陆::57::::bq\",\"高岭之花::301::::bq\",\"市井生活::175::::bq\",\"赛博朋克::277::::bq\",\"女扮男装::136::::bq\",\"随身空间::56::::bq\",\"第四天灾::285::::bq\",\"前世今生::49::::bq\",\"灵魂转换::23::::bq\",\"西方罗曼::59::::bq\",\"阴差阳错::53::::bq\",\"都市异闻::181::::bq\",\"天选之子::307::::bq\",\"史诗奇幻::199::::bq\",\"时代新风::210::::bq\",\"抽奖抽卡::339::::bq\",\"日久生情::332::::bq\",\"异想天开::190::::bq\",\"边缘恋歌::44::::bq\",\"排球少年::253::::bq\",\"异闻传说::196::::bq\",\"制服情缘::85::::bq\",\"三教九流::36::::bq\",\"神话传说::367::::bq\",\"古代幻想::189::::bq\",\"古典名著::130::::bq\",\"平步青云::55::::bq\",\"灵气复苏::284::::bq\",\"西方名著::16::::bq\",\"荒野求生::319::::bq\",\"赶山赶海::325::::bq\",\"性别转换::24::::bq\",\"真假千金::334::::bq\",\"刀剑乱舞::258::::bq\",\"星穹铁道::372::::bq\",\"多重人格::300::::bq\",\"极品亲戚::336::::bq\",\"骑士与剑::63::::bq\",\"亡灵异族::192::::bq\",\"交换人生::342::::bq\",\"魔法少女::256::::bq\",\"原始社会::279::::bq\",\"七年之痒::79::::bq\",\"蒸汽朋克::278::::bq\",\"古典衍生::20::::lx\",\"东方衍生::18::::lx\",\"西方衍生::19::::lx\",\"历史衍生::91::::bq\",\"其他衍生::21::::lx\",\"追爱火葬场::321::::bq\"];\n\n// 解析分类数据\nfunction parseCategory(data) {\n  const [title, url, num = defaultNumPerRow] = data.split(separator);\n  \n  const fullUrl = /^\\d+|natural/.test(url) \n    ? `http://app-cdn.jjwxc.net/bookstore/getFullPage?channelBody=%7B%22${url}%22%3A%7B%22offset%22%3A%22{{(page-1)*25}}%22%2C%22limit%22%3A%2225%22%7D%7D&versionCode=148`\n    : url;\n  \n  return [title, fullUrl, num];\n}\n\n// 解析标签数据\nfunction parseTag(data, tagCategory) {\n  const [title, url, num = defaultNumPerRow, tagType] = data.split(separator);\n  \n  let fullUrl = url;\n  if (tagType === \"bq\") {\n    fullUrl = `https://android.jjwxc.com/search/getSearchForKeyWords?versionCode=313&offset={{(page-1)*20}}&limit=20&bq=${url}&removetags=0&fw=0&yc=0&xx=${tagCategory}&sd=0&lx=0&fg=0&mainview=0&fbsj=0&collectionTypes=ors&isfinish=0&sortType=0&token=${token}`;\n  } else if (tagType === \"at\") {\n  \tfullUrl = `https://app-cdn.jjwxc.com/androidapi/authorColumn?authorid=${url}`;\n  \t\n  \t}else if (tagType === \"class\") {\n  \tfullUrl = `https://android.jjwxc.net/androidapi/incrementFavorite,{'method':'POST','body':\\\"versionCode=313&token=${token}&order=0&classId=${url}&backupTime=${Date.now()}\\\"}`\n  \t\n  \t}else if (tagType === \"lx\") {\n    fullUrl = `https://android.jjwxc.com/search/getSearchForKeyWords?versionCode=313&offset={{(page-1)*20}}&limit=20&bq=0&removetags=0&fw=0&yc=0&xx=${tagCategory}&sd=0&lx=${url}&fg=0&mainview=0&fbsj=0&collectionTypes=ors&isfinish=0&sortType=0&token=${token}`;\n  }\n  return [title, fullUrl, num];\n}\n\n// 创建 FlexBox 对象\nfunction createFlexBox(title, url, num) {\n  const flexBasisMap = { 1: 1, 2: 0.4, 3: 0.25, 4: 0.2, 5: 0.15, 7: 0.1, 10: 0.05 };\n  return {\n    title,\n    url: url || '',\n    style: {\n      layout_flexGrow: 1,\n      layout_flexBasisPercent: flexBasisMap[num]\n    }\n  };\n}\n\n// 生成分类结果\nconst result = [];\nresult.push(createFlexBox(`📂 我的收藏`, \"https://android.jjwxc.net/androidapi/incrementFavorite,{'method':'POST','body':\\\"versionCode=313&token={{source.getLoginHeaderMap().get('token')}}&order=0&classId=&backupTime={{Date.now()}}\\\"}\", 1));\n\nif(ShelfNum){\nconst ShelfNumList = String(ShelfNum).split(\",\");\nShelfNumList.forEach(x => {\n  const parsedTag = parseTag(ShelfList[x]);\n  result.push(createFlexBox(parsedTag[0], parsedTag[1], parsedTag[2],parsedTag[3]));\n});\n}\n\n\nauthorNames.forEach(tag => {\n  const parsedTag = parseTag(tag, tagCategory);\n  result.push(createFlexBox(parsedTag[0], parsedTag[1], parsedTag[2],parsedTag[3]));\n});\n\nJSON.stringify(result);\n\nall.forEach(item => {\n  const parsedItem = parseCategory(item);\n  result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n});\n\nconst enabledCategoryList = enabledCategories.split(\",\");\nenabledCategoryList.forEach(categoryIndex => {\n  const categoryName = categories[categoryIndex];\n  if (categoryData[categoryName]) {\n    result.push(createFlexBox(`${分类标识} ${categoryName}连载`, null, 1));\n    categoryData[categoryName].连载.forEach(item => {\n      const parsedItem = parseCategory(item);\n      result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n    });\n    result.push(createFlexBox(`${分类标识} ${categoryName}完结`, null, 1));\n    categoryData[categoryName].完结.forEach(item => {\n      const parsedItem = parseCategory(item);\n      result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n    });\n    result.push(createFlexBox(`${榜单标识} ${categoryName}榜单`, null, 1));\n    categoryData[categoryName].榜单.forEach(item => {\n      const parsedItem = parseCategory(item);\n      result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n    });\n  }\n});\n\nresult.push(createFlexBox(`${标签标识} ${tagName}标签`, null, 1));\ntags.forEach(tag => {\n  const parsedTag = parseTag(tag, tagCategory);\n  result.push(createFlexBox(parsedTag[0], parsedTag[1], parsedTag[2],parsedTag[3]));\n});\n\nJSON.stringify(result);\n\n\n</js>",
    "header": "<js>\n\n//let date=\"Mobile \"+Date.now();\nresult = JSON.stringify({\n\t\"versiontype\":\"reading\"\n\t})\n\t\n</js>",
    "jsLib": "function encode(data){\n\tconst { java } = this;\n  return\tjava.createSymmetricCrypto(\"DES/CBC/PKCS5Padding\", String(\"KW8Dvm2N\"), String(\"1ae2c94b\")).encryptBase64(data)\n\t}\n\t\nfunction Map(e) { \n\t  const { source } = this;\n    let infomap = source.getLoginHeaderMap();\n    let map = (infomap !== null && infomap.get(e)) ? infomap.get(e) : '';\n    return String(map);\n}\n\n\t\nfunction setHead(k,v){\n\tconst { source } = this;\n  let  infomap = source.getLoginHeaderMap();\n  let map = (infomap !== null && infomap !== \"\")?infomap:{};\n  map[k] = v;\n  source.putLoginHeader(JSON.stringify(map))\n\t}\n\t\nfunction bDe(d){\n\tconst { java } = this;\n\tlet re,token,novelId,chapterId;\n\tif(/^http/.test(d)){\n\t\ttoken =/\\d+_[\\w\\d]{16,}/.test(d)?\"token=\"+ d.match(/\\d+_[\\w\\d]{16,}/)[0]:\"token=\";\n   novelId=d.match(/novelId=\\d+/)[0];\n   chapterId = /chapterId=\\d+/.test(d)?\"&\"+d.match(/chapterId=\\d+/)[0]:\"\";\n   re =  `${token}&${novelId}${chapterId}`;\n\t\t}else{\n\t\t\tre = String(java.base64Decode(String(d).match(/base64,([^,]+),/)[1]))\n\t\t\t}\n\treturn re\n\t}\n\nfunction getToken(d){\n\treturn d.match(/token=(.*?)&/)[1];\n\t}\n\nfunction getNid(d){\n\treturn d.match(/novelId=(\\d+)/)[1];\n\t}",
    "lastUpdateTime": "1748351015935",
    "loginCheckJs": "//8小时检查一遍签到\nif(!cache.getFile(\"jjtime\")) {\n    cache.putFile(\"jjtime\", true, 23200);\n    const enbody = `${String(Date.now())}:${Map(\"token\")}`;\n    const option = {\n        method: \"POST\",\n        body: `versionCode=313&sign=${encode(enbody)}`\n    };\n    const jjsign = java.ajax(\"https://app.jjwxc.org/androidapi/signin,\" + JSON.stringify(option));\n    java.toast(JSON.parse(jjsign).message);\n}result",
    "loginUi": "[\n{\n    \t  name:\"☕️支持源作者\",\n    \t  type: \"button\",\n       action: \"toThank()\",\n       \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n    \t},\n{\n    \t  name:\"获取书架数据\",\n    \t  type: \"button\",\n       action: \"getShelf()\"\n    \t},\n{\n    \t  name:\"选择📚书架序号\",\n    \t  type: \"button\",\n       action: \"showShelf()\",\n       \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n    \t},\n    \t{\n    \"name\": \"选择🌸分类序号\",\n    \"type\": \"button\",\n    \"action\": \"getFl()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n  \t{\n\t\tname: \"选择🏷标签序号\",\n\t\ttype: \"button\",\n\t\taction: \"getTag()\",\n\t\t\"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n\t},\n\t{\n    \t  name:\"抓包token登录\",\n    \t  type:\"password\"\n    \t},\n    {\n    \t  name:\"账号\",\n    \t  type:\"text\"\n    \t},\n    \t{\n    \t  name:\"密码\",\n    \t  type:\"password\"\n    \t},\n    \t{\n    \t  name:\"验证码\",\n    \t  type:\"text\"\n    \t},\n    \n   {\n        name: \"①获取邮箱验证码和登录\",\n        type: \"button\",\n        action: \"getCode('email')\"\n    },\n    {\n        name: \"①获取手机验证码和登录\",\n        type: \"button\",\n        action: \"getCode('phone')\"\n    },\n\t\t{\n    \t\tname:\"作者列表（作者::作者id 注意添加多个用空格分割）\",\n    \t\ttype:\"text\"\n    \t\t}\n    \t\t\n]",
    "loginUrl": "<js>\n\n//请不要改书源的任何地方，请点击“登录”后再填写\n\n//保存标签等序号\nfunction saveTag(svg,tagType){\n\tlet Code = String(java.getVerificationCode('data:image/svg+xml;base64,'+svg));\n    if(/(\\d,*)*/.test(Code)){\n\t    Map = source.getLoginHeaderMap();\n\t    Map == (Map == null||Map==\"\")?{}:Map\n\t    Map[tagType]=Code;\n\t    source.putLoginHeader(JSON.stringify(Map))\n\t    java.toast(\"已保存数据\")\n\t}\n}\n\nfunction rd() {\n    let n = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let s = \"\";\n    for (let i = 0; i < 20; i++) {\n        let r = Math.floor(Math.random() * 10);\n        s += n[r];\n    }\n    return s;\n}\n\n//获取书架数据\nfunction getShelf(){\n    let sourceGet = String(source.getVariable()).replace(/\\n*(?:请勿删除此书架数据)*❗️[\\s\\S]+?❗️/g,'');\n\tlet token = Map(\"token\");\n\tlet ShelfUrl = `https://android.jjwxc.net/androidapi/incrementFavorite,{'method':'POST','body':\\\"versionCode=313&token=${token}&order=1&classId=&backupTime=${Date.now()}\\\"}`\n\tlet ShelfJson = String(java.ajax(ShelfUrl));\n    ShelfJson = JSON.parse(ShelfJson);\n\t    function extractClassInfo(obj, result = [], uniqueSet = new Set()) {\n\t    // 如果当前对象是数组，递归遍历数组中的每个元素\n\t    if (Array.isArray(obj)) {\n\t        for (let item of obj) {\n\t            extractClassInfo(item, result, uniqueSet);\n\t        }\n\t    } else if (typeof obj === 'object' && obj !== null) {\n        // 检查是否存在 className 和 classId\n\t        if (obj.hasOwnProperty('className') && obj.hasOwnProperty('classId')) {\n\t            let className = obj.className;\n\t            // 如果 className 为空，设置为“尚未分类”\n\t            if (className.trim() === \"\") {\n\t                className = \"尚未分类\";\n\t            }\n\t            // 构造组合字符串\n\t            const combo = `${className}::${obj.classId}`;\n\t            // 如果组合字符串未出现过，添加到结果中\n\t            if (!uniqueSet.has(combo)) {\n\t                uniqueSet.add(combo);\n\t                result.push(combo);\n\t            }\n\t        }\n\t        // 递归遍历对象的每个属性\n\t        for (let key in obj) {\n\t            extractClassInfo(obj[key], result, uniqueSet);\n\t        }\n  \t\t  }\n    \t\treturn result;\n\t   }\n\n\tlet ShlefClass = \"请勿删除此书架数据❗️\"+JSON.stringify(extractClassInfo(ShelfJson))+\"❗️\"\n\tsource.setVariable(sourceGet+\"\\n\"+ShlefClass);\n\tjava.longToast(\"已获取书架数据，请点击选择显示的书架\")\n}\n\n//选择要显示的书架\nfunction showShelf(){\n\ttry{\n\t\tif(!/❗️([\\s\\S]+?)❗️/.test(String(source.getVariable()))){\n\t\t\tjava.longToast(\"请先点击获取书架数据，只需点一次\");\n\t\t\treturn \"\"\n\t\t}\n\t\tlet sourceGet = String(source.getVariable()).match(/❗️([\\s\\S]+?)❗️/)[1];\n\t\tlet classNameList = JSON.parse(sourceGet);\n\t\tlet className = classNameList.map((x,i)=>i+\"、\"+x.split(\"::\")[0]);\n\t\t \n\t\t// 初始 x 值\n\t\tlet x = 50;\n\t\t// x 的增量\n\t\tconst xIncrement = 230; // 250 - 20 = 230\n\t\t// x 的最大值\n\t\tconst xMax = 910;\n\t\t// 生成 <tspan> 元素的字符串\n\t\tlet tspanElements = className.map((item) => {\n\t\t    // 如果 x 为 20，dy 为 \"1.5em\"，否则为 \"0\"\n\t\t    const dy = x === 50 ? \"1.5em\" : \"0\";\n\t\t    // 构造 <tspan> 元素\n\t\t    const tspan = `<tspan x=\"${x}\" dy=\"${dy}\">${item}</tspan>`;\n\t\t    // 更新 x 的值\n\t\t    x += xIncrement;\n\t\t    // 如果 x 超过最大值，重置为 20\n\t\t    if (x > xMax) {\n\t\t        x = 50;\n\t\t    }\n\t\t    return tspan;\n\t\t}).join(\"\\n\"); // 用换行符拼接\n\n\t\t svg = `<svg width=\"1190\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t  <!-- 背景矩形 -->\n\t\t  <rect width=\"100%\" height=\"100%\" fill=\"#ffffff\"/>\n\t\t\n\t\t  <!-- 标题 -->\n\t\t  <text x=\"20\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#333\" font-weight=\"bold\">选项（输入你要显示的书架序号，再点“✓”如：0,1,2 是英文逗号）</text>\n\t\t\n\t\t  <!-- 选项列表 -->\n\t\t  <text x=\"50\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#555\">\n\t\t  ${tspanElements}\n\t\t    </text>\n\t\t</svg>`;\n\t\tsvg=java.base64Encode(svg);\n\t\tsaveTag(String(svg),\"classNum\")\n\t\t\n\t}catch(e){\n\t\tjava.log(e)\n\t}\n}\nfunction toThank(){\n\tjava.startBrowser(\"data:text/html;base64,PGltZyBzdHlsZT0id2lkdGg6MTAwJSIgc3JjPSJhYm91dDpibGFuayIgb25lcnJvcj0idGhpcy5zcmM9YXRvYignYUhSMGNEb3ZMMmQxWVc1bGNpNTNiM0pyTDJkMVlXNWxjaTV3Ym1jPScpIj4KCg==\",\"感谢你的支持\");\t\n\t}\nfunction getFl(){\n\tlet svg=`<svg width=\"1150\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t  <!-- 背景矩形 -->\n\t  <rect width=\"100%\" height=\"100%\" fill=\"#f0f0f0\" />\n\t\n\t  <!-- 标题 -->\n\t  <text x=\"20\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"35\" fill=\"#333\" font-weight=\"bold\">选项（填写需要的序号后，点“✓”确认，如：2,5【默认为9,10】）</text>\n\t\n\t  <!-- 选项列表 -->\n\t  <text x=\"50\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#555\">\n\t    <tspan x=\"150\" dy=\"1.5em\">0. 古代言情</tspan>\n\t    <tspan x=\"400\" dy=\"0\">1. 现代言情</tspan>\n\t    <tspan x=\"650\" dy=\"0\">2. 幻想现言</tspan>\n\t    <tspan x=\"900\" dy=\"0\">3. 古代穿越</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">4. 奇幻言情</tspan>\n\t    <tspan x=\"400\" dy=\"0\">5. 未来游戏悬疑</tspan>\n\t    <tspan x=\"650\" dy=\"0\">6. 都市纯爱</tspan>\n\t    <tspan x=\"900\" dy=\"0\">7. 现代幻纯</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">8. 古代纯爱</tspan>\n\t    <tspan x=\"400\" dy=\"0\">9. 百合</tspan>\n\t    <tspan x=\"650\" dy=\"0\">10. 无CP</tspan>\n\t    <tspan x=\"900\" dy=\"0\">11. 衍生无CP</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">12. 衍生纯爱</tspan>\n\t    <tspan x=\"400\" dy=\"0\">13. 衍生言情</tspan>\n\t    <tspan x=\"650\" dy=\"0\">14. 二次元言情</tspan>\n\t    <tspan x=\"900\" dy=\"0\">15. 多元</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">16. 男主无CP</tspan>\n\t    <tspan x=\"400\" dy=\"0\">17. 女主无CP</tspan>\n\t    <tspan x=\"650\" dy=\"0\">18. 未来幻纯</tspan>\n\t  </text>\n\t</svg>`;\n\tsvg=java.base64Encode(svg);\n\tsaveTag(svg,\"fl\")\n\n}\nfunction getTag(){\n\tlet svg=`<svg width=\"1150\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t  <!-- 背景矩形 -->\n\t  <rect width=\"100%\" height=\"100%\" fill=\"#f0f0f0\" />\n\t\n\t  <!-- 标题 -->\n\t  <text x=\"20\" y=\"40\" font-family=\"Arial, sans-serif\" font-size=\"35\" fill=\"#333\" font-weight=\"bold\">选项（填写需要的序号后，点“✓”确认，如：2【默认为5，只能单选】）</text>\n\t\n\t  <!-- 选项列表 -->\n\t  <text x=\"60\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"50\" fill=\"#555\">\n\t    <tspan x=\"150\" dy=\"2.5em\">1. 言情</tspan>\n\t    <tspan x=\"400\" dy=\"0\">2. 纯爱</tspan>\n\t    <tspan x=\"650\" dy=\"0\">3. 百合</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">4. 无CP</tspan>\n\t    <tspan x=\"400\" dy=\"0\">5. 多元</tspan>\n\t  </text>\n\t</svg>`;\n\tsvg=java.base64Encode(svg);\n\tsaveTag(svg,\"bq\")\n\n}\n\n\nfunction getloginUrl(){\n\tlet 账号 = result.get(\"账号\");\n\tlet 密码 = result.get(\"密码\");\n\tlet en = encode(密码);\n\tlet id = rd()+\":\"+java.androidId()+\"d4:\";\n\tlet sign = encode(Date.now()+\"_\"+id+\"_\");\n\tlet loginUrl = `https://app.jjwxc.org/androidapi/login?versionCode=401&loginName=${encodeURIComponent(账号)}&encode=1&loginPassword=${encodeURIComponent(en)}&sign=${encodeURIComponent(sign)}&identifiers=${encodeURIComponent(id)}&autologin=1`;\n\treturn loginUrl\n}\n\nfunction getCode(t){\n\ttry{\n\t\tlet 验证码 = result.get(\"验证码\");\n\t\tlet 账号 = result.get(\"账号\");\n\t\tlet 密码 = result.get(\"密码\");\n\t\t\n\t\tif(!/^\\d{4,}/.test(验证码)){\n\t\t\tlet res = \tJSON.parse(java.ajax(getloginUrl()));\n\t\n\t\t\tif(res.code==\"221003\"){\n\t\t\t\tlet url = \"https://app.jjwxc.org//appDevicesecurityAndroid/getDeviceSecurityCode\";\n\t\t\t\tbody = \"versionCode=401&username=\"+encodeURIComponent(账号)+\"&checktype=\"+t;\n\t\t\t\toption = {\n\t\t\t\t\t\"method\":\"POST\",\n\t\t\t\t\t\"body\":String(body)\n\t\t\t\t\t}\n\t\t\t\t\tmsg = JSON.parse(java.ajax(url+\",\"+JSON.stringify(option))).data.message;\n\t\t\t\t\t\n\t\t\t\t\tjava.toast(msg);\n\t\t\t}else{\n\t\t\t       if(/\\d+_[a-z\\d]+/.test(res.token)){\n\t\t\t             java.log(\"获取到的token值: \"+res.token);\n\t\t\t             java.longToast(\"登录成功\"+res.token);\n\t\t\t             LoginToken(res.token)\n\t\t\t       }\n\t\t\t       \n\t\t\t   msg = /校验验证码/.test(res.message)?\"请请尝试填入上次发给你的验证码（可能是很久之前的）\":res.message;\n\t\t\t   java.log(msg);\n\t\t\t\t\tjava.toast(msg??res.token)\n\t\t\t\t}\n\t\t}else{\n\t\t\tlet lurl = getloginUrl()+\"&checktype=\"+t+\"&checkdevicecode=\"+验证码;\n\t\t\thhh = java.ajax(lurl);\n\t\t\tlet token = JSON.parse(hhh).token??JSON.parse(hhh).message;\n\t\t\tjava.longToast(token);\n\t\t\tjava.log(\"获取到的token值: \"+token)\n\t\t\tLoginToken(token)\n\t\t}\n\t}catch(e){\n\t\tjava.log(e)\n\t}\n}\n\nfunction LoginToken(token){\n\tlet Map = source.getLoginInfoMap()??{};\n\tlet LoginMap = source.getLoginHeaderMap()??{};\n\tlet fl = LoginMap[\"fl\"]??\"\";\n\tfl = (fl==\"\"||fl==null)?\"9,10\":fl;\n\n\tlet bq = LoginMap[\"bq\"]??\"\";\n\tbq = (bq==\"\"||bq==null)?\"5\":bq;\n\t\n\tlet at = Map.get(\"作者列表（作者::作者id 注意添加多个用空格分割）\");\n\tat = (at==\"\"||at==null)?\"\":at;\n\tlet classCode = LoginMap[\"classNum\"]??\"\";\n\t\n\tlet option = {\n\t \t\"token\":String(token).replace(/token=|\\s|&.*/g,''),\n\t \t\"fl\":String(fl),\n\t \t\"bq\":String(bq),\n\t \t\"at\":java.base64Encode(String(at)),\n\t \t\"classNum\":classCode\n\t \t}\n\tsource.putLoginHeader(JSON.stringify(option))\n}\n\n\nfunction login(){\n\tlet LoginMap = source.getLoginHeaderMap()??{};\n\tLoginMap = JSON.stringify(LoginMap);\n\tlet token;\n\tlet t = source.getLoginInfoMap()[\"抓包token登录\"];\n\tif(/\\{\"token\":\"\\d+_\\w{16,}/.test(LoginMap))token = JSON.parse(LoginMap).token??\"\";\n\tif(t!=\"\"&&t!=null)token = t;\t\n\tLoginToken(token);\n}\n\n</js>",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.authorName",
      "canReName": "1",
      "coverUrl": "{{$.novelCover}}\n<js>\n\nif(/(?:postimg|bmp|alicdn)\\./.test(result)){\n\tjava.setContent(src);\n\tresult = \"https://i9-static.jjwxc.net/novelimage.php?novelid={{$.novelId}}\"\n\t}else{\n\t\tresult = result\n\t\t}\n\t\t\n\t\theader = {\n\t\t\"headers\":{\n\t\t\t\"referer\":result.match(/(^https?:\\/\\/.*?\\/)/)[1]\n\t\t\t}\n\t\t}\nresult = (result +\",\"+ JSON.stringify(header)).replace(/wx\\d+/,'wx2')\n</js>",
      "intro": "<js>\n//请假条\ntry{\na=JSON.parse(java.ajax('http://app.jjwxc.org/androidapi/getnovelOtherInfo?novelId='+baseUrl.match(/(\\d+)/)[1]+'&type=novelbasicinfo&versionCode=163'));\n\njava.put(\"pv\",a.novelreview)\n\n$=a.novelLeave;\nn='\\n';\nleave=$.leaveContent?'————————•————————'+n+'​'+n+$.leaveDateBack+n+'​'+'​'+'      '+$.leaveContent+n+$.leaveDate.replace(/请假时间：/,'⌚️')+n+$.leaveIntro:'';\njava.put('leave',leave);\njava.put('intro',JSON.parse(result).novelIntro.replace(/\\#/g,'＃'));\nresult}catch(err){\njava.log(err);\njava.put('leave',\"\");\njava.put('intro',\"\");\n}\n</js>\n{{/开启购买/.test(book.getVariable(\"custom\"))?\"&nbsp;&nbsp;💰已开启自动购买下五章，建议删除书籍变量的[开启/关闭购买]文字，避免刷新书籍时反复进行网络请求<br>\\nㅤ<br>\":\"\"}}\n&nbsp;\n📖{{$.novelIntroShort##。$}}📖\n{{'\\nㅤ'}}<br>\n\n🏆{{$.ranking}}    🍼{{$.nutrition_novel}}    📝{{$.comment_count}}    🔖{{$.novelStyle}}\n◉ 最新：{{java.get(\"lastChapter\")}}<br>\n◉ 标签：{{$.novelTags##,|\\s##🏷}}<br>\n◉ {{$.protagonist##,|，|；|;##、}}<br>\n◉ {{$.costar##,|，|；|;##、}}<br>\n◉ {{$.other##,|，|；|;##、}}<br>\n◉ 视角：{{$.mainview}}<br>\n◉ 评分：{{java.get(\"pv\")}}<br>\n◉ 收藏：{{$.novelbefavoritedcount}}<br>\n{{String(java.get('intro')).replace(/立意:/,'◎◎ 立意：')}}<br>{{java.get('leave')}}<br>\n{{'\\n'+'​'}}\n添加作者：{{$.authorName}}::{{$.authorId}}\n<js>\nresult=String(result);\nli=result.match(/◎ 立意.*/)?'ㅤ\\n'+result.match(/(◎ 立意.*?<br>)/)[1]:'';\nString(result).replace(/📖📖|📖''📖/,'').replace(/(◉ 收藏.*?<br>)/,'$1\\n'+li+'ㅤ\\n'+'————————•————————\\n').replace(/◎◎ 立意.*<br>/,'').replace(/(?:◉ 标签：|◉ 主角：|◉ 配角：|◉ 其它：|◉ 视角：|◉ 评分：|◉ 最新：|ㅤ\\n◎ 立意：)<br>/g,'')</js>",
      "kind": "{{step=java.getString('$.novelStep')=='2'?'已完结':'连载中';}},{{$.novelClass}}##-##,",
      "lastChapter": "<js>\ntry{\n\tnovelId = baseUrl.match(/(\\d+)/)[1];\nlastStr = java.ajax(\"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1\");\n\ncache.put(\"有卷名src\"+novelId, lastStr, 60)\n\nlast=JSON.parse(lastStr).chapterlist;\n$=last[last.length-1];\nvip= ($.isvip!=='0');\npoint=($.point=='0');\nchapterMessage =/福利番外/.test($.chapterMessage);\nvip = (point&&vip)?\"\":\"🔒\"\nvip = chapterMessage?\"🎁\":vip;\nchapterMessage =/限免/.test($.chapterMessage);\nvip = chapterMessage?\"🆓\":vip;\n\nchapterid=$.chapterid;\nchaptername=$.chaptername;\ndate=$.chapterdate;\nresult = vip+chapterid+'.'+chaptername+'•'+date;\n\njava.put(\"lastChapter\",result)\n}\ncatch(err){\nresult=\"请刷新或暂无目录\"\n}\n</js>",
      "name": "$.novelName",
      "tocUrl": "@js:\ntoken = Map(\"token\");\nnovelId=baseUrl.match(/novelId=(\\d+)/)[1];\nurl = `token=${token}&novelId=${novelId}`;\nresult = `data:token;base64,${java.base64Encode(url)},{\"type\":\"jjwx\"}`;",
      "wordCount": "$.novelSizeformat||novelsizeformat"
    },
    "ruleContent": {
      "content": "<js>\nfunction decode(){\n\tbaseUrl = `https://app.jjwxc.org/androidapi/chapterContent?versionCode=381&${bDe(baseUrl)}`;\n\t   \n    //let date = \"Mobile \" + Date.now();\n    let response = java.get(baseUrl, {});\n    let content = String(response.body());\n    isPay = !/\"content\"/.test(content);\n    \n    if(isPay){\n    let accesskey = String(response.header(\"accesskey\"));\n    let keyString = String(response.header(\"keystring\"));\n\n    let accesskeyLen = accesskey.length;\n    let v6 = accesskey.charCodeAt(accesskeyLen - 1);\n    let v9 = 0;\nfor (var i = 0; i < accesskey.length; i++) {\n    v9 += accesskey.charCodeAt(i);\n}\n\n    let v15 = v9 % keyString.length;\n    let v17 = Math.floor(v9 / 65);\n    let v18 = keyString.length;\n    let v43 = keyString.substring(v15, v17 + v15 > v18 ? v18 : v17 + v15);\n\n    let v32 = content.length;\n    let [v38, dest] = (v6 & 1) !== 0 ? [content.slice(-12), content.slice(0, -12)] : [content.slice(0, 12), content.slice(12)];\n\n    let key = java.md5Encode(v43 + v38).slice(0, 8);\n    let iv = java.md5Encode(v38).slice(0, 8);\n    content = java.createSymmetricCrypto(\"DES/CBC/PKCS5Padding\", key, iv).decryptStr(dest);\n    }\n    \n    return content\n}\n\nif (/jjwxc|vipContent/.test(baseUrl)) {\n\t  \n    let intro = String(java.get(\"intro1\")).replace(/\\s/g, '');\n    const hasContent = /\"content\"/.test(result);\n    \n    java.setContent(hasContent ? result : decode());\n    intro = intro ? `◎${intro}◎<br>` : '';\n\n    let content = String(java.getString(\"$..content\"));\n    let saybody = java.getString(\"$..sayBody\");\n    let say = /[\\u4e00-\\u9fa5]/.test(saybody) \n                      ? `\\n【📢作者有话说】\\n${saybody}` : '';\n  \n   \n    \n    if (/token|vipContent/.test(baseUrl)) {\t   \n        const vipc = content.length > 30\n        ? java.createSymmetricCrypto(\"DES/CBC/PKCS5Padding\", \"KW8Dvm2N\", \"1ae2c94b\").decryptStr(content) \n        : `${java.getString(\"$..message\")}\\n登录后请更新目录，刷新正文`;\n        result = intro + vipc + say;\n    } else {\n        result = intro + content + say;\n    }\n} else {\n    result = \"\";\n}\n\n// 评论处理\nconst bbb = book.getVariable(\"custom\");\nconst sss = source.getVariable();\nif (/评论/.test(bbb) || /评论/.test(sss)) {\n    const commentNum = (/评论(\\d+)/.exec(bbb) || /评论(\\d+)/.exec(sss))[1];\n    const commentUrl = baseUrl.replace(/androidapi/, 'comment').replace(/chapterContent/, 'getCommentList') + `&limit=${commentNum}&offset=0`;\n    const comment = JSON.parse(java.ajax(commentUrl));\n    const cflag = comment.code === \"200\" || comment.code === undefined;\n    let commentb = '';\n    if (cflag) {\n        const commentList = comment.commentList || comment.data?.commentList || [];\n        commentb = commentList.map(b => `@${b.commentAuthor} 🕘${b.commentDate}\\n${b.commentBody}\\n&lrm;\\n`).join('');\n    } else {\n        commentb = comment.message;\n    }\n\n    result += `\\nㅤ\\n最新评论：\\n${commentb.replace(/&lt;br&gt;/g, '\\n')}`;\n}\n\nresult;\n</js>\n##为营造更好的评论环境，近期网站要求发评须进行实名认证，未实名用户评论暂时仅在对应作者后台及发评用户后台可见.*|获取正文失败[\\s\\S]+|◎\\s+?◎|◎undefined◎",
      "imageStyle": "TEXT",
      "payAction": "baseUrl = bDe(baseUrl);\ncid = baseUrl.match(/chapterId=(\\d+)/)[1];\nnid = baseUrl.match(/novelId=(\\d+)/)[1];\ntoken = Map(\"token\");\n\nenbody = String(Date.now())+\":\"+token+\":\"+nid;\nsign = encode(enbody)\n\nbody = \"versionCode=287&novelId=\"+nid+\"&chapters=\"+cid+\"&orderType=15&isautoBuy=0&autosubscribeStatus=0&notUseBackpoint=&sign=\"+sign;\n\nurl = \"https://android.jjwxc.net/androidapi/buy,\"\npost = {\n\t\"method\":\"POST\",\n\t\"body\":String(body)\n\t}\n a = java.ajax(url+JSON.stringify(post));\n \n if(/购买成功/.test(JSON.parse(a).message)){\n \tjava.longToast(JSON.parse(a).message);\n \tresult  = true\n \t}else{\n \t\tmm = JSON.parse(a).message==\"\"?JSON.parse(a).popupdata.popupmessage+\"\\n❗️进晋江app进行一次验证后❗️才能在阅读app使用购买功能\":JSON.parse(a).message;\n    \n \t\tjava.longToast(mm);\n \t\t\n \t\t}",
      "replaceRegex": "<js>\n//去除章节简介与正文重复\nif(/^◎/.test(result) ){\nchapter = result.match(/◎([\\s\\S]+?)(…)*◎/)[1].replace(/\\s/g,'').replace(/,/g,'，');\n\nchapter2=result.match(/◎[\\s\\S]+?◎([\\s\\S]+)/)[1].replace(/\\s/g,'').replace(/,/g,'，');\n\n//前4个字相同就删除\nnum = 4\nif(chapter.substring(0,num)==chapter2.substring(0,num)){\n\tresult = result.replace(/◎[\\s\\S]+?◎/,'')\n\t}else{result}\n}else{result}\n\n\n/*\n——◎。！？，；：、.?!,;:》 】）”’…~\"')\n如果不是以这些标点符号结尾，里面有一个字符跟章节名相同了就会被删除\n*/\n\tfunction removeDuplicatedParagraphs(text, chapterTitle) {\n    var paragraphs = text.split('\\n');\n    \n    // 检查第一段是否包含特定字符 ◎\n    var firstParagraph = paragraphs[0].trim();\n    var containsSpecialChar = firstParagraph.includes('◎');\n    \n    // 根据是否包含特殊字符决定处理哪一段\n    var targetIndex = containsSpecialChar ? 1 : 0;\n    var targetParagraph = paragraphs[targetIndex].trim();\n    \n    // 检查目标段落结尾是否有标点符号\n    var lastChar = targetParagraph.charAt(targetParagraph.length - 1);\n    var isPunctuation = /[——◎。！？，；：、\\.\\?!,;:》 】）”’…~\"'\\)]/.test(lastChar);\n    \n    if (!isPunctuation) {\n        // 只要有一个字与章节名相同就删除\n        for (var char of chapterTitle) {\n            if (targetParagraph.includes(char)) {\n                if (char === ' ' || char === '☪') continue;\n                java.log(\"删除当前段落：\"+targetParagraph)\n                java.log(\"当前章节名：\"+chapterTitle)\n                java.log(\"相同文字：\"+char)\n                paragraphs.splice(targetIndex, 1);\n                break;\n            }\n        }\n    }\n\n    return paragraphs.join('\\n');\n}\nconst bbb = book.getVariable(\"custom\");\nconst sss = source.getVariable();\nif(/净化/.test(sss)||/净化/.test(bbb))result = removeDuplicatedParagraphs(result, title);\n\nresult.replace(/<br\\/>/g,'\\n')\n</js>"
    },
    "ruleExplore": {
      "author": "$.authorName||$.authorname",
      "bookList": "@JSon:$..[?(@.novelName)]&&$..[?(@.novelname)]&&$.massage\n<js>\nif (result) {\n    function remove(indices, array) {\n        indices.sort((a, b) => b - a); // 按降序排序\n        indices.forEach(index => {\n          //  java.log(\"❗️删除序号:\" + index);\n          //  java.log(array[index].channelName);\n            array.splice(index, 1); // 删除元素\n        });\n        \n        return array;\n    }\n\n    if (baseUrl === 'https://app-cdn.jjwxc.net/bookstore/getFullPage?channel=bhxs&version=3' || baseUrl.match(/novelfree/)) {\n        let list = JSON.parse(src);\n\n        // 将 data_random 中的数据合并到 data 中\n        list.forEach(item => {\n            if (item.data_random && item.data_random.data_groups && item.data_random.data_groups.length > 0) {\n                // 取 data_random 中的第一组数据\n                const randomData = item.data_random.data_groups[0];\n                if (item.data) {\n                    // 将 randomData 合并到 data 中\n                    item.data = item.data.concat(randomData);\n                } else {\n                    // 如果 data 不存在，直接赋值\n                    item.data = randomData;\n                }\n                // 删除 data_random，避免重复处理\n                delete item.data_random;\n            }\n        });\n\n        // 修改 channelName\n       list.forEach(item => {\n    let { channelName, data: blist } = item;\n    if (blist) {\n    \t        // 检查 data 数组里是否有 list 数组\r\n        const hasList = blist.some(b => b.list);\r\n        if (hasList) {\r\n            // 如果有 list 数组，只保留 data 数组的第一个元素\r\n            item.data = [blist[0]];\r\n            blist = item.data;\r\n        }​\n        blist.forEach(b => {\n            if (b.list) {\n            \t   lchannelName = b.channelName\n                b.list.forEach(c => c.channelName = b.channelName);\n            }\n            b.channelName = channelName;\n        });\n    } else {\n        item.channelName = channelName;\n    }\n});\n\n        // 根据 URL 删除指定项\n        if (!baseUrl.match(/novelfree/)) {\n            list = remove([0, 6, 11, 12], list);\n        } else {\n            list = remove([1], list);\n        }\n\n        result = JSON.stringify(list);\n    } else if (baseUrl.match(/signin|getSearchForKeyWords/)) {\n        result = `{signIn:[${src}]}`;\n    } else {\n        result = result;\n    }\n} else {\n    result = \"\";\n}\n</js>\n$..[?(@.novelName)]&&$..[?(@.novelname)]&&$.signIn[*]",
      "bookUrl": "http://app-cdn.jjwxc.net/androidapi/novelbasicinfo?novelId={{$.novelid||$.novelId}}@put:{id:$.novelid||$.novelId}",
      "coverUrl": "@JSon:$.cover||$.novelCover||$.ebookurl||$.novel_cover\n<js>\nif(/(?:postimg|bmp|alicdn)\\./.test(result)){\n\tjava.setContent(src);\n\tresult = \"https://i9-static.jjwxc.net/novelimage.php?novelid={{$.novelId}}\"\n\t}else{\n\t\tresult = result\n\t\t}\n\t\theader = {\n\t\t\"headers\":{\n\t\t\t\"referer\":result.match(/(^https?:\\/\\/.*?\\/)/)[1]\n\t\t\t}\n\t\t}\nresult = (result +\",\"+ JSON.stringify(header)).replace(/wx\\d+/,'wx2')\n</js>",
      "intro": "&lrm;---------\n📁{{$.className}}\n🏷{{$.novelClass||$.type##-##🏷}}\n📖{{$.novelIntroShort||$.novelintroshort}}\n<js>\nfree=\"{{$.freeDate}}\";\nif(free!=\"\"){\nresult=result+\"\\n🗓 限免日期：\"+free+\"\\n\"\n}else{\nresult=result\n}\n</js>\n##(?:🏷|📁)\\s+",
      "kind": "{{java.getString('$.novelStep||$.novelstep')=='2'?'已完结':'连载中';}},{{$.channelName&&$.tags##\\s+##,}}",
      "lastChapter": "第{{$.maxChapterId}}章##第章",
      "name": "$.novelName||$.novelname||$.message",
      "wordCount": "$.novelSizeformat||$.novelSize"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.items[:10]\n<js>\nlet page = java.get(\"page\");\nlet key = java.get(\"key\");\nlet authorUrl = `https://app.jjwxc.org/androidapi/search?versionCode=191&keyword=${key}&type=2&page=${page}&searchType=7&sortMode=DESC`;\nconst authorlist = JSON.parse(java.ajax(authorUrl))?.items;\n\nlet list = authorlist?result.toArray().concat(authorlist):result;\nlet json = [];\nfor(i in list){\n    try{\n    \t   let item = list[i];\n        let id = item?.novelid;\n        let url = `https://www.jjwxc.net/onebook.php?novelid=${id}`;     \n        let html = String(java.ajax(url));\n        java.setContent(html);\n        let J = org.jsoup.Jsoup.parse(html);\n        let authorid = J.select('h1+span>a, h2 a').attr(\"href\").match(/(\\d+)/)[1];\n        let des = String(J.select(\"span[style='color:#F98C4D']\").text())\n            .replace(/立意：/, '◎ ')\n            .replace(/一句话简介：/, '◎ ') + \"◎\" + java.getElement(\"id.novelintro\").text();\n        title = J.select('h1').text();\n        let author = J.select('span[itemprop=\"author\"]').text();\n        let cover = J.select(\".noveldefaultimage\").attr(\"src\");\n\n        if (/(?:postimg|bmp|alicdn)\\./.test(cover)) {\n            cover = `https://i9-static.jjwxc.net/novelimage.php?novelid=${id}`;\n        }\n\n        let header = {\n            headers: {\n                referer: cover.match(/(^https?:\\/\\/.*?\\/)/)[1]\n            }\n        };\n        cover = `${cover},${JSON.stringify(header)}`.replace(/wx\\d+/, 'wx2');\n\n        let cat = String(J.select('a[style=\"text-decoration:none;color: red;\"]').text()).replace(/\\s/g, ',');\n        let status = String(J.select('span[itemprop=\"updataStatus\"]').text());\n        \n        let size = String(J.select('span[itemprop=\"wordCount\"]').text()).replace(/字/, '');\n        let n = String(java.getElement('@@id.oneboolt@tag.tr.-2@span').text())\n            .replace(/\\n/, '•')\n            .replace(/\\*最新更新/, '')\n            .replace(/(.*?)\\[(?:VIP|福利番外)\\]/, '🔒$1');\n        let num = java.getElement('@@id.oneboolt@tag.tr.-2@tag.td.0').text();\n        let genre = J.select('[itemprop=\"genre\"]').text().split('-')[1];\n        let view = html.match(/<span>作品视角：<\\/span>([^<]+)<\\/li>/)[1].replace(/\\s/g, '');\n        \n        json.push({\n            title,\n            author,\n            cat: `${view},${status},${genre},${cat}`,\n            size,\n            url: `https://app-cdn.jjwxc.net/androidapi/novelbasicinfo?novelId=${id}`,\n            des,\n            new: `${num}、${n}`.replace(/(\\d+、)🔒/, '🔒$1').replace(/^章节、|、$/, ''),\n            cover\n        });\n    } catch (e) {\n        java.log(\"搜索列表的错误：\"+e);\n    }\n}\nJSON.stringify(json)\n</js>\n$.[*]",
      "bookUrl": "$.url",
      "checkKeyWord": "穿进刑侦文",
      "coverUrl": "$.cover",
      "intro": "$.des",
      "kind": "$.cat",
      "lastChapter": "$.new",
      "name": "$.title",
      "wordCount": "$.size"
    },
    "ruleToc": {
      "chapterList": "<js>\ntry{\nbaseUrl = bDe(baseUrl);\nvar novelId=getNid(baseUrl);\nvar token = Map(\"token\");\n\nvar 有卷名src =!cache.get(\"有卷名src\"+novelId)?java.ajax(\"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1\"):cache.get(\"有卷名src\"+novelId);\n\n有卷名src = JSON.parse(有卷名src);\n\nvar message = 有卷名src?.message;\nif(/\\d+_[\\w\\d]{16,}/.test(token)&&!/1058/.test(message)){\n\t\nlet \ttokenUrl =  \"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1&token=\"+token;\n\t\nlet tokenSrc = (!cache.get(\"tokenSrc\"+novelId)||/登入验证失败/.test(cache.get(\"tokenSrc\"+novelId)))?JSON.parse(java.ajax(tokenUrl)):JSON.parse(cache.get(\"tokenSrc\"+novelId));\n\n\ncache.delete(\"有卷名src\"+novelId);\n\n\nlet lessData = tokenSrc.chapterlist;\n\nlet moreData = 有卷名src.chapterlist;\nif(lessData!==undefined){\nfor(let item of lessData) {\n    let match = moreData.find(moreItem => moreItem.chapterid === item.chapterid && moreItem.chaptertype === item.chaptertype);\n    if(match) {\n        Object.assign(match, item);\n    }\n}\n}\nJSON.stringify(moreData)\n}else{\n\tresult = JSON.stringify(有卷名src)\n\t}\n}catch(e){\n\tjava.log(e)\n\t}\n</js>\n$.chapterlist[*]||$.[*]\n\n<js>\nfunction readEncrypt(novelid,flag) {\n\t     token = Map(\"token\");   \n     \tFORUMSIGNTAG = 1;\n       READSIGNTAG = 0;\n\t      strArr = [token,novelid,\"autosubscribe\",flag];       \n\t      sb = new Date().getTime().toString();\n         length = strArr.length;\n        for ( i2 = READSIGNTAG; i2 < length; i2 += FORUMSIGNTAG) {\n            str = strArr[i2];\n            sb+=\":\";\n            sb+=str;\n        }   \n     let option = {\n\t    \t\"method\":\"POST\", \t\"body\":\"versionCode=313&sign=\"+encode(sb)\n\t    \t}\n\t    \nurl = \"https://android.jjwxc.com/androidapi/autoSubscribe,\"+JSON.stringify(option)\n\n java.longToast(JSON.parse(java.ajax(url)).message)\n    }\n    \n if(/(开启|关闭)购买/.test(book.getVariable(\"custom\"))){\n \ta = /关闭购买/.test(book.getVariable(\"custom\"))?\"cancel\":(/开启购买/.test(book.getVariable(\"custom\"))?\"open\":\"cancel\");\n \t\n readEncrypt(result[0].novelid,a)\n \t}\n \t\nresult = result[0]==\"1058\"||result[0]==\"1068\"?JSON.stringify([{\"chaptername\":\"暂无目录\",\"chapterid\":\"\",\"islock\":\"0\"}]):result;\n</js>\n$.[*]",
      "chapterName": "<js>\n$=result;title=$.chaptername;title=String(title).replace(/^\\s+/,'');intro=$.chapterintro;vip=$.isvip!='0';lock=$.islock!='0';type=$.chaptertype=='1'?true:false;num=!type?$.chapterid+\"  ☪ \":'';\nbbb = book.getVariable(\"custom\");sss = source.getVariable();\nif(/去章节序号/.test(bbb) || /去章节序号/.test(sss)){\nnum=''\n}\nif(/章节名/.test(bbb) || /章节名/.test(sss)){\nnum=!type?\"第\"+$.chapterid+\"章 \":'';\n}\ntitle=type?'📖 '+title+' 📖':title;\nif( (/目录简介/.test(bbb) || /目录简介/.test(sss))&&!/📖/.test(title)){\n\tfu = /目录简介【(.*?)】/.test(bbb)?bbb.match(/目录简介【(.*?)】/)[1]:sss.match(/目录简介【(.*?)】/)[1]\n\ttitle = title +fu+intro\n\t}else{\n\t\tjava.put(\"intro1\",intro);\n\t\t}\nl=lock?'[此章节已锁]':'';\nresult=num+title+l;\n</js>",
      "chapterUrl": "@js:\nbaseUrl = bDe(baseUrl);\nnovelId=getNid(baseUrl);\ntoken = Map(\"token\");\n\n$=result;\nchapterid=$.chapterid;\nvip=$.isvip!='0';\ntype=$.chaptertype=='1';\nif( !type){\nif(!vip){\nresult='https://app.jjwxc.net/androidapi/chapterContent?novelId='+novelId+'&chapterId='+chapterid\n}else{\nurl = `token=${token}&novelId=${novelId}&chapterId=${chapterid}`;\nresult = `data:vipContent;base64,${java.base64Encode(url)},{\"type\":\"jjwx\"}`;\n\t\n\t}\n}else{ result=\"\"}",
      "isPay": "<js>\npoint=(\"{{$.point}}\"=='0');\nchapterMessage =!/VIP|番外/.test(\"{{$.chapterMessage}}\")\nif(chapterMessage||point){\n\tresult=true\n\t}else{\n\t\tresult=false\n\t\t}\n</js>",
      "isVip": "<js>\nvip = (\"{{$.isvip}}\"!=\"0\");\ntype = (\"{{$.chaptertype}}\"=='1');\nresult = !type?(vip?true:false):false\n</js>",
      "isVolume": "<js>\n\"{{$.chaptertype}}\"=='1'?true:false;\n</js>",
      "preUpdateJs": "try{\n\tvar tocUrl = bDe(book.tocUrl);\nvar token = getToken(tocUrl);\nvar novelId = getNid(tocUrl);\n\tvar newToken = Map(\"token\");\n\tif(!/^\\d+_[a-z\\d]{32}$/.test(newToken) && newToken!=\"\"){\n\t\tsetHead(\"token\",\"\");\n\t\tjava.longToast(\"token不正确，已清除token值，请重新登录\");\n\t}\n\t\t\n\tvar oldToken = token;\n\tif(newToken != oldToken){\n\t    token = newToken\n\t\t}\n\t\nif(/^\\d+_[\\w\\d]{16,}/.test(newToken)){\n\t tocUrl = \"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1&token=\"+token;\n\t \n   let src = java.ajax(tocUrl);\n   cache.put(\"tokenSrc\"+novelId, src, 60)\n   \n\t let message = JSON.parse(src).message;\n\t if(/登入验证失败/.test(message)){\n\t \t          setHead(\"token\",\"\");  \t  \t      \n\t            java.longToast(\"登录token已失效，已清除token值，请重新登录\");\n\t           java.refreshTocUrl();  \n\t    }else if(newToken != oldToken){\n\t       //java.longToast(\"目录链接更改为新token\");\n\t        \tjava.refreshTocUrl();\n\t    }else{\n\t\t\t    \tcache.put(\"tokenSrc\"+novelId, src, 60)\n\t\t}  \n\t}else if(/token=&/.test(tocUrl)){\n\t\t\t  java.refreshTocUrl();\n\t\t\t // java.longToast(\"更新目录链接的token\");\n\t\t\t}  \n\t}catch(e){\n\tjava.log(\"这是错误：\"+e);\n\t}",
      "updateTime": "{{$.chaptersize}}字•{{$.chapterdate}}•{{$.chapterintro##^\\s*}}##^•|0000-00-00.*|^0字•|•$"
    },
    "searchUrl": "https://android.jjwxc.net/androidapi/search?versionCode=191&keyword={{key;java.put(\"key\",key)}}&type=1&page={{page;java.put(\"page\",page)}}&searchType=8&sortMode=DESC",
    "variableComment": "1、书籍变量（当前书）\n填写 [去章节序号] —— 去除章节序号\n填写[章节名]  ——  变为第xx章 章节名\n\n填写 [目录简介【符号】] —— 章节简介放到目录列表，正文不出现 符号：跟章节名连接时中间的符号，如 目录简介【 】，中间将为空格\n\n填写 [评论+评论数量]——如 评论50  则可以显示50条评论，数量必填\n\n填写 [开启购买/关闭购买]  —— 如 开启购买 则会开启自动购买下五章【确认以后点右上角三点刷新才会生效，使用完毕后最好删除，避免重复请求】\n\n填写[净化] —— 这个是用来删除正文第一段是章节名的，可能会误伤。\n\n2、源变量（所有书）\n同书籍变量",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.5.20 ◎夜泽川◎",
    "bookSourceName": "猕猴桃漫画",
    "bookSourceType": 2,
    "bookSourceUrl": "https://www.mhtmh.com",
    "customOrder": 97,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nvar result = [];\nvar push = (title, tag, size) => result.push({\n    title: title,\n    url: \"/api/v1/json/cate\" + \",\" + JSON.stringify({\n  \"body\": `{\\\"page\\\":{\\\"page\\\":{{page}},\\\"pageSize\\\":10},\\\"category\\\":\\\"comic\\\",\\\"sort\\\":0,\\\"comic\\\":{\\\"status\\\":-1,\\\"day\\\":0,\\\"tag\\\":\\\"${tag}\\\"},\\\"video\\\":{\\\"year\\\":0,\\\"typeId\\\":0,\\\"typeId1\\\":0,\\\"area\\\":\\\"\\\",\\\"lang\\\":\\\"\\\",\\\"status\\\":-1,\\\"day\\\":0},\\\"novel\\\":{\\\"status\\\":-1,\\\"day\\\":0,\\\"sortId\\\":0}}`,\n  \"method\": \"POST\"\n}),\n    style: {\n        layout_flexGrow: 1,\n        layout_flexBasisPercent: size\n    }\n});\nvar tags = org.jsoup.Jsoup.parse(java.ajax(source.key + '/cate')).select('.tag-container a');\nfor (let i in tags) {\n\tlet size = i == 0 ? 1 : 0.25;\tpush(tags[i].text(),tags[i].attr('data-value'),size);\n}\nJSON.stringify(result);",
    "header": "{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": "1747972847015",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.cover",
      "init": "$.data",
      "intro": "$.intro",
      "kind": "$.tags",
      "name": "$.title",
      "tocUrl": "https://www.mhtmh.com/api/v1/json/comic/chapter?comicId={$.id}&page=1&pageSize=20"
    },
    "ruleContent": {
      "content": "@js:var imglist = JSON.parse(src).data.images\nresult = imglist.map(x => `<img src=\"${x.url}\">`).join('\\n');",
      "imageStyle": "FULL",
      "nextContentUrl": "@js:var pageList = [];\nvar page = Math.ceil(JSON.parse(src).data.pagination.total / 60);\nfor (let i = 2;i <= page;i++) {\npageList.push(baseUrl.replace(\"page=1\",`page=${i}`));\n}\npageList;"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "$.data",
      "bookUrl": "https://www.mhtmh.com/api/v1/json/comic/{{$.url##(\\d+)##$1###}}",
      "coverUrl": "$.pic",
      "intro": "$.intro",
      "kind": "$.tags",
      "name": "$.title"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.data.list[*]",
      "bookUrl": "https://www.mhtmh.com/api/v1/json/comic/{$.id}",
      "coverUrl": "$.cover",
      "intro": "$.description",
      "kind": "$.tags",
      "name": "$.title"
    },
    "ruleToc": {
      "chapterList": "$.data[*]",
      "chapterName": "$.title",
      "chapterUrl": "https://www.mhtmh.com/api/v1/comic/image/{$.id}?page=1&page_size=60",
      "nextTocUrl": "@js:var pageList = [];\nvar page = Math.ceil(JSON.parse(src).pagination.total / 20);\nfor (let i = 2;i <= page;i++) {\npageList.push(baseUrl.replace(\"page=1\",`page=${i}`));\n}\npageList;"
    },
    "searchUrl": "/api/v1/json/search?keyword={{key}}&type=mh&page={{page}}&pageSize=20",
    "weight": 0
  },
  {
    "bookSourceComment": "┍　　　说明　　　作者：洛娅橙　　┒\n├────────────────┤\n│①书源默认优化正文加载，可能会导│\n│致下载书籍异常，在该登录界面点击│\n│启用下载即可。　　　　　　　　　│\n│②登录界面开启同步书架功能，在详│\n│情页下拉刷新两次或书架刷新，会自│\n│动同步至网站书架。　　　　　　　│\n│③支持屏蔽书籍为黑名单，之后在搜│\n│索和发现不再显示屏蔽后的书籍。误│\n│点时，可再次点击进行恢复。　　　│\n│④输出名单到日志需要在软件其它设│\n│置里开启记录日志功能。　　　　　│\n│⑤更多讲解请点击书源介绍。　　　│\n├────────────────┤\n│　　　　　　　　　　　　　　　　│\n│请使用阅读最新测试版导入该书源　│\n└────────────────┘\n┍　　　　书源作者：洛娅橙　　　　┒\n├───┬────────────┤\n│！免责│本书源仅用于交流书源代码│\n│！声明│和ＪＳ技术分享　书源已废│\n├───┴────────────┤\n│可在书源登录界面进行账号登录　　│\n└────────────────┘\n___________________________________________\n八叉发布页：https://8xsk.org\nip地址查看：https://iplark.com",
    "bookSourceGroup": "🙈,八叉",
    "bookSourceName": "🌈八叉书库",
    "bookSourceType": 0,
    "bookSourceUrl": "https://八叉书库.luoyacheng.ip-ddns.com",
    "bookUrlPattern": "https://www.+/book/\\d+\\.html",
    "concurrentRate": "1000",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.7.9\";\nftsm();\neval(String(source.loginUrl));\nlet surl = `{{\t(\nsource.getVariable()+''||cache.get('8xbl1')+''\n).replace(/\\\\/$/,'')}}`;\nlet jmtxt=java.base64Decode('6YO95biC5r+A5oOFLOaJkueBsOS5seS8pizmg4XoibLmrabkvqAs57u/5bi95oOF5oCALOa3t+S5seS/ruS7mSzosIPmlZnlhbvmiJA=').split(',');\nvar obj = {\n\t最近更: {\n\t\t\"url\": \"/sort/0/{{page}}.html\",\n\t\t\"fg\": 9},\n\t\t'新(肉)':{\n\t\t\"url\": \"/sort/7/{{page}}.html\",\n\t\t\"fg\": 1},\n\t最近入库: {\n\t\t\"url\": \"/top/postdate/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t最近完: {\n\t\t\"url\": \"/modules/article/articlelist.php?fullflag=1&page={{page}}\",\n\t\t\"fg\": 9,\n\t\t\"wrap\": true},\n\t\t'结(肉)':{\n\t\t\"url\": \"/modules/article/articlelist.php?sortid=7&fullflag=1&page={{page}}\",\n\t\t\"fg\": 1},\n\t签约新书: {\n\t\t\"url\": \"/top/signtime/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t字数榜: {\n\t\t\"url\": \"/top/words/{{page}}.html\",\n\t\t\"wb\": true},\n\t收藏榜: {\n\t\t\"url\": \"/top/goodnum/{{page}}.html\"},\n\t新书榜: {\n\t\t\"url\": \"/top/newhot/{{page}}.html\"},\n\t\t\n\t总点击: {\n\t\t\"url\": \"/top/allvisit/{{page}}.html\",\n\t\t\"wb\": true},\n\t月点击: {\n\t\t\"url\": \"/top/monthvisit/{{page}}.html\"},\n\t周点击: {\n\t\t\"url\": \"/top/weekvisit/{{page}}.html\"},\n\t\t\n\t总推荐: {\n\t\t\"url\": \"/top/allvote/{{page}}.html\",\n\t\t\"wb\": true},\n\t月推荐: {\n\t\t\"url\": \"/top/monthvote/{{page}}.html\"},\n\t周推荐: {\n\t\t\"url\": \"/top/weekvote/{{page}}.html\"},\n\t[jmtxt[0]]: {\n\t\t\"url\": \"/modules/article/articlefilter.php?order=lastupdate&page={{page}}&sortid=7&typeid=701\",\n\t\t\"wb\": true},\n\t[jmtxt[1]]: {\n\t\t\"url\": \"/modules/article/articlefilter.php?order=lastupdate&page={{page}}&sortid=7&typeid=702\"},\n\t[jmtxt[2]]: {\n\t\t\"url\": \"/modules/article/articlefilter.php?order=lastupdate&page={{page}}&sortid=7&typeid=703\"},\n\t[jmtxt[3]]: {\n\t\t\"url\": \"/modules/article/articlefilter.php?order=lastupdate&page={{page}}&sortid=7&typeid=704\",\n\t\t\"wb\": true},\n\t[jmtxt[4]]: {\n\t\t\"url\": \"/modules/article/articlefilter.php?order=lastupdate&page={{page}}&sortid=7&typeid=705\"},\n\t[jmtxt[5]]: {\n\t\t\"url\": \"/modules/article/articlefilter.php?order=lastupdate&page={{page}}&sortid=7&typeid=706\"},\n\t\t搜索: {\n\t\t\turl: \t`{{\n\t\t\t\tlet surl = (\nsource.getVariable()+''||cache.get('8xbl1')+''\n).replace(/\\\\/$/,'');\n\t\t\t\tif (page == 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\tlet [cb,cf] = colorz();\n\t\t\t\t\tsvg=\\`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"100%\" height=\"150%\" fill=\"#\\${cb}\"/><text fill=\"#\\${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\"><tspan x=\"50%\" dy=\"30%\" font-size=\"100\">请输入搜索关键词</tspan><tspan x=\"50%\" dy=\"50%\" font-size=\"50\">此处搜索不支持完整书名</tspan></text></svg>\\`;\n\tsvg=java.base64Encode(svg);\n\tkeyy=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\n\t\t\t\t\t} catch(err) {keyy='系统';\n\t\t\t\t\tPackages.java.lang.Thread.sleep(500);\n\t\t\t\t\tjava.toast('使用默认关键词“系统”');}\n\t\t\t\t\tsource.put('keyy',keyy);\n\t\t\t\t\t\t}\n\t\t\t\telse keyy = source.get('keyy');\n\t\t\t\turl =\tsurl+'/modules/article/search.php?searchkey='+keyy+'&searchtype=all&page='+page;\n\t\t\t\turl\n\t\t\t}}`,\n\t\t\t\"fb\": 0.3,\n\t\t\t\"wb\": true},\n\t我的书架: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\tlet surl = (\nsource.getVariable()+''||cache.get('8xbl1')+''\n).replace(/\\\\/$/,'');\n\t\tlet ck = source.getLoginHeader()||'';\n\t\tcookie.replaceCookie(surl,ck);\n\t\tck ? surl+'/modules/article/bookcase.php' : java.longToast('请登录账号');\n\t\t} else \"data:;base64,aHR0,{'type':'fx'}\";\n\t\t}}`,\n\t\t\"fb\": 0.3}\n\t}\n\nvar sort = [];\npush = (title, url, size, wrap, cc) => sort.push({\n    \"title\": title,\n    \"url\": url.startsWith(\"{{\") ? url : url ? surl + url : \"\",\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: cc || -1,\n      layout_wrapBefore: wrap ? true : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\n\n//版本号\npush(\"版本号:\"+banben+\"　点我刷新地址\", `{{if(page==1) {\n\tlet uu=source.getVariable()+'';\n\tuu&&cache.put('8xbl1', uu);\n\tsource.setVariable(''); gengxin();\n\teval(String(source.loginUrl));\tuu==source.getVariable()&&java.longToast('源地址没有更新');}\n\t\"data:;base64,aHR0,{'type':'fx'}\"}}`, 1, true);\npush(\"测速/更新\",`{{eval(String(source.loginUrl));gengxin(); Packages.java.lang.Thread.sleep(100); ceshi(); \"data:;base64,aHR0,{'type':'fx'}\"}}`, 1);\n\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n    let nn = String(source.getVariable());\n    let ck=source.getLoginHeader()||'';\n    ck=cookie.getCookie(nn);\n    let headers = {\n    \t'User-Agent': ua,\n    \t'x-requested-with': x_r_w,\n    \t'sec-ch-ua': s_c_u,\n    \t'sec-ch-ua-platform': s_c_u_p,\n    \t'Accept-language': \"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\",\n    \t'Referer': nn,\n    \t'Cookie': ck\n    \t };\n    \treturn JSON.stringify(headers);\n})();",
    "jsLib": "ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0';\n\nx_r_w = ''; //com.microsoft.emmx\ns_c_u_p = `\"Windows\"`;\ns_c_u = `\"Microsoft Edge\";v=\"135\", \"Not-A.Brand\";v=\"8\", \"Chromium\";v=\"135\"`;\nfunction colorz() {\n\tconst {java, source} = this;\n\tlet cb,cf;\n\ttry {\n\t\tcb = source.getLoginInfoMap().get('封面背景颜色');\n\t\tif (cb=='') throw '空';\n\t\t} catch(err) {cb='151E27';}\n\ttry {\n\t\tcf = source.getLoginInfoMap().get('封面字体颜色');\n\t\tif (cf=='') throw '空';\n\t\t} catch(err) {cf='dddddd';}\nreturn [cb,cf];\n}\n\nfunction hexToInt(e, t) {\n        var r = e.substr(t, 2);\n        return parseInt(r, 16);\n    }\nfunction decodeEmail(n, c) {\n    var o = \"\", a = hexToInt(n, c), i = c + 2;\n    for (i; i < n.length; i += 2) {\n        var l = hexToInt(n, i) ^ a;\n        o += String.fromCharCode(l);\n    }\n        o = decodeURIComponent(escape(o));\n        return o\n}\n\n\nfunction ftsm(){\n\tconst {java, source} = this;\n\tlet nm = source.get('8xftn');\n\tif(nm==''||nm<0) {nm=2;}\nif(nm>0) {\n\tnm--;\n\tsource.put('8xftn',nm);\n\tlet ss = String(source.bookSourceComment).match(/┘\\s+┍[^┘]+┘/)[0];\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);\n\tPackages.java.lang.Thread.sleep(1000);\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);}\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8.json?browser_history=0&page=1&per=4';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:4].title');\n\tlet [gxlr, gxlr2, gxlr3, gxlr4] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `<html>\n<head>\n<title>更新</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 2em auto 0 auto;\n\t}\nth span{font-size: 1.2em;}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：<span>${gxlr[2]}</span></th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}<br>　　　　　${gxlr4}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://gitee.com/lyc486/yuedu2/raw/main/书源/八叉/8x.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/书源/八叉/8x.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(`data:text/html;base64,${java.base64Encode(htm)}`,'更新');\r\n}\n\nfunction tbshujia(iuu,iid){\nconst {java, source} = this;\nlet iuux=iuu+'/modules/article/addbookcase.php';\nlet iuuy=String(iuu+'/book/'+iid+'.html'); //需要转化否则报错\nlet tm = new Date().getTime();\nlet body = `bid=${iid}&ajax_request=${tm}`;\nlet ck = source.getLoginHeader()||'';\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'Referer': iuuy,\n        'Cookie': ck\r\n    };\nif (String(ck).includes(\"jieqiUserInfo\") ) {\n// let by = java.post(iuux,body,headers).body();\nlet by = java.connect(iuux+','+JSON.stringify(\n    \t{method: \"POST\",\n    \theader: headers,\n    \tbody: body})\n    \t);\njava.longToast('\\n'+this.book.name+'：\\n'+by.body());\nreturn true;}\nreturn false;\n}\n\nfunction hmdjib(id,name){\nconst {java, source, cache} = this;\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet i=false;\n\ttry {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名黑名单');\n\t\tlet rg = eval(String(rgstr));\n\t\ti=rg.test(name);\n\t\t} catch(err) {}\n\ttry {\n\t\tif (i) {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名白名单');\n\t\tlet rg = eval(String(rgstr));\n\t\t i=!rg.test(name);\n\t\t }\n\t\t} catch(err) {}\n\t\ti = i||(id in hmd);\n\t\treturn i;\n\t}\n\nOranges = `<path d=\"M646.4 763.6c150.1-15.8 267.1-142.7 267.1-297 0-164.9-133.7-298.7-298.7-298.7-154.8 0-282.1 117.8-297.2 268.7\" fill=\"#FA9F23\" p-id=\"5624\"></path><path d=\"M648.6 784.8l-4.5-42.4c67.7-7.1 130.3-39 176.3-89.7 46.3-51.1 71.7-117.2 71.7-186.1 0-74.1-28.8-143.7-81.2-196.1-52.4-52.4-122-81.2-196.1-81.2-69.2 0-135.5 25.6-186.6 72.2-50.8 46.3-82.5 109.2-89.3 177.3l-42.5-4.2c7.8-78.6 44.4-151.2 103-204.6 59-53.7 135.5-83.3 215.4-83.3 85.5 0 165.8 33.3 226.3 93.7 60.4 60.4 93.7 140.8 93.7 226.3 0 79.6-29.4 155.9-82.8 214.8-53 58.3-125.2 95.1-203.4 103.3z\" fill=\"#333333\" p-id=\"5625\"></path><path d=\"M161.5 832.4c116.6 116.6 305.7 116.6 422.4 0s116.6-305.7 0-422.4\" fill=\"#FA9F23\" p-id=\"5626\"></path><path d=\"M372.7 941.2c-85.5 0-165.8-33.3-226.3-93.7l30.2-30.2c52.4 52.4 122 81.2 196.1 81.2s143.7-28.8 196.1-81.2c52.4-52.4 81.2-122 81.2-196.1s-28.8-143.7-81.2-196.1l30.2-30.2c60.4 60.4 93.7 140.8 93.7 226.3S659.4 787 599 847.5c-60.5 60.4-140.8 93.7-226.3 93.7z\" fill=\"#333333\" p-id=\"5627\"></path><path d=\"M161.480941 832.416461a170.7 298.7 44.999 1 0 422.418218-422.432964 170.7 298.7 44.999 1 0-422.418218 422.432964Z\" fill=\"#FBE0C3\" p-id=\"5628\"></path><path d=\"M249.1 885.8c-9.3 0-18.4-0.7-27.2-2-30.5-4.6-55.9-16.8-75.5-36.4-19.6-19.6-31.8-45-36.4-75.5-4.2-28-1.7-59 7.4-92.4 18.1-66.2 60.5-135.2 119.5-194.2S364.9 384 431.1 366c33.3-9.1 64.4-11.6 92.4-7.4 30.5 4.6 55.9 16.8 75.5 36.4s31.8 45 36.4 75.5c4.2 28 1.7 59-7.4 92.4C609.9 629 567.5 698 508.5 757s-128 101.4-194.2 119.5c-22.9 6.2-44.7 9.3-65.2 9.3z m18-370.2c-53.8 53.8-92.4 116.1-108.5 175.2-15 55-8.6 99.9 18 126.5s71.5 33 126.5 18c59.2-16.1 121.4-54.7 175.2-108.5 53.8-53.8 92.4-116.1 108.5-175.2 15-55 8.6-99.9-18-126.5s-71.5-33-126.5-18c-59.1 16.2-121.4 54.7-175.2 108.5z\" fill=\"#333333\" p-id=\"5629\"></path><path d=\"M373.3 641.5h148.4c-16.2 23.8-35.8 47.6-58.5 70.2-28.9 28.9-59.7 52.9-90 71.1l0.1-141.3z m187.1-193.4c27 37.3 15.7 103.4-25.2 172.1H388.3l172.1-172.1zM351.9 656.6v138.2c-61.4 31.7-118.7 38.6-152.4 14.2l152.4-152.4z m-152.5-15.1h137.4L184.6 793.8c-24-33.9-16.9-91.1 14.8-152.3z m173.9-182.6c68.5-40.9 134.5-52.4 172-25.9l-172 172V458.9z m-91.1 71.8c22.5-22.5 46.1-42 69.7-58.1v147.6H211.4c17.6-29.1 40.4-58.6 67.8-86.5l3-3z\" fill=\"#F5A74A\" p-id=\"5630\"></path><path d=\"M625.8 266.5l-13.5 9.9c-1.9 1.4-4.6 1-6-0.9-0.6-0.9-0.9-1.9-0.8-3l1.8-16.7L592 249c-2.2-1-3.1-3.5-2.2-5.6 0.4-1 1.2-1.8 2.2-2.2l15.3-6.8-1.8-16.7c-0.3-2.3 1.4-4.4 3.8-4.7 1.1-0.1 2.1 0.2 3 0.8l13.5 9.9 13.5-9.9c1.9-1.4 4.6-1 6 0.9 0.6 0.9 0.9 1.9 0.8 3l-1.8 16.7 15.3 6.8c2.2 1 3.1 3.5 2.2 5.6-0.4 1-1.2 1.8-2.2 2.2l-15.3 6.8 1.8 16.7c0.3 2.3-1.4 4.4-3.8 4.7-1.1 0.1-2.1-0.2-3-0.8l-13.5-9.9z\" fill=\"#333333\" p-id=\"5631\"></path><path d=\"M799.4 313.5m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5632\"></path><path d=\"M828.4 348.3m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5633\"></path>`;\n\nfunction jinghuafm() {\nconst {java, source} = this;\t\nfunction splitString(str) {\n    const length = str.length;\n    if (length < 15) {\n        return length<9 ? [str] : [\n            str.slice(0, 7),\n            str.slice(7)\n        ].filter(s => s);\n    } else if (length < 20) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13)\n        ].filter(s => s);\n    }  else if (length < 24) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13,18),\n            str.slice(18)\n        ].filter(s => s);\n    } else {\n        return [\n            str.slice(0, 7),\n            str.slice(7, 13),\n            str.slice(13, 18),\n            str.slice(18, 22),\n            str.slice(22)\n        ].filter(s => s);\n    }\n}\nfunction pingString(ss) {\nlet rr='';\nlet l1=ss.length;\nfor (let i1=0; i1<l1; i1++) {\n\tlet c1=ss[i1], l2=c1.length;\n\tfor (let i2=0; i2<l2; i2++) {\n\t\tlet c2=c1.charAt(i2);\n\t\trr += `<tspan x=\"${100+180*ii}\" y=\"${180+170*(i2+i1)}\">${c2}</tspan>`;\n\t\t}\n\t\tii++;\n\t}\n\treturn rr;\n}\n\nlet [cb,cf] = colorz();\n\nlet bknm=String(this.book.name).replace(/\\.{2,}/,'…');\nbknm=bknm.match(/[a-z][a-z\\+一-ꀀ\\d…]+|[一-ꀀ\\da-z]{2,}(?:\\.\\d+[一-ꀀ]*|[…？])?|[一-ꀀ]/gi);\nlet hz='';\nlet ii=0;\n\nfor (let char of bknm) {\n\thz += pingString(splitString(char) );\n\t}\n\nlet svg = `<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5623\" width=\"100%\" height=\"100%\">\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<g transform=\"scale(0.4) translate(1600,2500)\">${Oranges}</g>\n<text fill=\"#${cf}\" stroke=\"#000000\" stroke-width=\"2\" font-weight=\"bold\" font-size=\"150\" text-anchor=\"middle\" dominant-baseline=\"middle\">\n${hz}\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\nreturn 'data:image/svg+xml;base64,'+svg;\n}\n",
    "lastUpdateTime": "1748268353874",
    "loginCheckJs": "var pres = result.raw().priorResponse();\nvar isRedirect = pres!=null&&pres.isRedirect();\nif (isRedirect) {\n\tlet url=String(result.url()).match(/^https?:\\/\\/[^\\/]+\\//)[0];\n\t/luoyacheng/.test(url)||source.setVariable(url);}\nlet code = result.code();\nif (code == 403) {\n\tjava.toast('\\n访问被拒绝');\n\t}\nelse if (code == 520) {\n\tjava.toast('\\nIP被拉黑');\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"账号\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    },\n    {\n        name: \"💍注册\",\n        type: \"button\",\n        action: \"web()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"🔺登　录🔺\",\n        type: \"button\",\n        action: \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"♤登出\",\n        type: \"button\",\n        action: \"re()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n    \tname: \"💬说明\",\n    \ttype: \"button\",\n    \taction: \"sm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    \t},\n    \t{\n        name: \"🧾延迟测试\",\n        type: \"button\",\n        action: \"ceshi()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"⏭️启用下载\",\n        type: \"button\",\n        action: \"downl()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐打开本书↓\",\n        type: \"button\",\n        action: \"webb()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"❌屏蔽\",\n        type: \"button\",\n        action: \"hmd()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🧹清理\",\n        type: \"button\",\n        action: \"hmdre()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🆕版本更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"♻️同步书架\",\n        type: \"button\",\n        action: \"shujia()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书架\",\n        type: \"button\",\n        action: \"webbs(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"正则书名黑名单\",\n        type: \"text\"\n    },\n    {\n        name: \"正则书名白名单\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐查看日志\",\n        type: \"button\",\n        action: \"gitee()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"🌐网站选书\",\n        type: \"button\",\n        action: \"webbs(2)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🔁书名\",\n        type: \"button\",\n        action: \"shuming()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🗻净化封面\",\n        type: \"button\",\n        action: \"jhfm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书源介绍\",\n        type: \"button\",\n        action: \"java.startBrowser('https://luoyacheng.cloudns.ch/#八叉','介绍');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🤔反馈\",\n        type: \"button\",\n        action: \"java.startBrowser('https://github.com/Luoyacheng/yuedu/discussions/categories/a-八叉?discussions_q=','8x反馈');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"封面背景颜色\",\n        type: \"text\"\n    },\n    {\n        name: \"封面字体颜色\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐网页登录\",\n        type: \"button\",\n        action: \"weblogin()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    }\n]",
    "loginUrl": "nn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\nlet rr=cache.getFromMemory('baxsur')||java.connect('https://www.8xsk.org/');\ncache.putMemory('baxsur',rr);\nlet ur=(rr.body().match(/电脑主站[^\"]+\\\"([^\"]+)\\\"/)||['',''])[1];\nlet x = cache.get('8xbl1');\nif (ur == '') {\n\tjava.longToast(\"书源地址获取失败💔\");\n\tsource.setVariable(x);\n\tPackages.java.lang.Thread.sleep(300);\n\t}\nelse {\n\tif (ur != x) {\n\t\t\tjava.log(\"八叉源地址更新：\"+ur);\n\t\t\tjava.longToast(\"🎉书源地址已更新\");\n\t\t\tcache.put('8xbl1',ur);\n\t\t\tPackages.java.lang.Thread.sleep(300);}\n\tsource.setVariable(ur);\n\tnn = ur.replace(/\\/$/,'');;\n\t}\n}\n\nfunction login(){}\r\nfunction Login(){\n\tif (String(source.getLoginHeader()).includes(\"jieqiUserInfo\")) {\n\t\t//验证登出\n\t\tjava.longToast('请先在该界面登出账号');}\n\telse {\n\tsource.removeLoginHeader();\n\tcookie.removeCookie(nn);\n\tjava.toast('正在获取验证码');\n\tlet webr=java.ajax(nn);\n\twebr = org.jsoup.Jsoup.parse(webr);\n\tlet url0 = webr.select('#t_imgccode').attr('onclick');\n\tif (url0=='') url0 = webr.select('img[name~=img.*code]').attr('onclick');\nlet imageObj = {\n\tsrc: null,\n\tupdateSrc() {\n\t\teval(url0+[]);\n\t\treturn this.src;}\n};\nurl0 = imageObj.updateSrc();\n/^http/.test(url0)||java.toast('\\n💔获取验证码失败');\n    let code=java.getVerificationCode(url0);\n    let ck = cookie.getCookie(nn);\r\n    let url = nn+'/login.php';\r\n    let un = result['账号'];\r\n    let pw = result['密码'];\r\n    let time = new Date().getTime();\n    let body = `username=${un}&password=${pw}&checkcode=${code}&usecookie=1&act=login&jumpreferer=1&t_btnlogin=&ajax_request=${time}`;\nlet headers = JSON.parse(eval(source.header.replace('@js:','')+''));\nheaders['Referer']=nn;\n    if (un!=''&&pw!=''&&url0!='') {\n    \tjava.toast('登录中...');\n    \t//移动网用post函数会Connection reset\n    //let cookie1 = java.post(url,body,headers).cookies();ck = cookie.mapToCookie(cookie1);\n    let cookie1 = java.connect(url+','+JSON.stringify(\n    \t{\"method\": \"POST\",\n    \theader:headers,\n    \tbody:body})\n    \t);\nlet ck=cookie1.headers().values(\"Set-Cookie\");\nlet cookieParts = [];\nfor (let char of ck) {\n\tchar=(char+'').replace(/;.+/,'');\n\tcookieParts.push(char);}\n\tck=cookieParts.join('; ');\n    source.putLoginHeader(ck);\n    let i = String(ck).includes(\"jieqiUserInfo\");\n    //会存入登录信息，无需点✓\r\n    if (i) {source.putLoginInfo(JSON.stringify(result));java.toast(\"\\n登录成功，VIP模式💎\");}\r\n    else {\n    let reb=\tcookie1.body()+'';\n    \tjava.toast(\"\\n登录失败：\"+(reb.length<30?'\\n'+reb:cookie1.code()+'，访客模式🔒'));\n    \tjava.log('登录失败原因：'+reb);}\n    } else {java.toast(\"💔账号和密码不能为空\");}\n   //已登出的情况\n  }\n\r\n}\n\nfunction weblogin(){\n\tif (String(source.getLoginHeader()).includes(\"jieqiUserInfo\")) {\n\t\t//网页登录，验证登出\n\t\tjava.longToast('请先在该界面登出账号');}\n\t\telse {\n\tsource.removeLoginHeader();\n\tlet url = nn.replace('www.','') + '/login.php';\n\tjava.startBrowserAwait(url, '八叉登录');\n\tPackages.java.lang.Thread.sleep(300);\n\tlet ck = cookie.getCookie(nn);\n\tlet i = String(ck).includes(\"jieqiUserInfo\");\n\tif (i) {source.putLoginHeader(ck);\n\tjava.toast(\"网页登录成功，VIP模式💎\");}\n\telse java.toast(\"网页登录失败，未获取到账号cookie\");}\n\t}\r\n\r\nfunction web(){\r\n    let url = nn.replace('www.','') + '/register.php';\n    \tif (String(source.getLoginHeader()).includes(\"jieqiUserInfo\")) {\n\t\t//验证登出\n\t\tjava.longToast('请先在该界面登出账号，再注册');}\n\t\telse {\n    cookie.removeCookie(url);\r\n    java.startBrowser(url, '八叉注册');}\r\n}\n\nfunction ceshi(){\n\t['　　　','·　　','··　','···'].forEach((_,i) => {java.longToast('\\n\\n测试中'+_+'\\n');Packages.java.lang.Thread.sleep((3-i)*70);}); //然并卵的动画(但是好看)\n\ttry {\n  const startTime=new Date().getTime();\n\t//java.head(nn,{\t'user-agent': ua});\n\tlet webr=java.connect(nn).body();\n\tconst endTime=new Date().getTime();\nif (webr.startsWith('java.net.SocketException'))\nthrow \"无法连接\";\n\tlet speed = (endTime - startTime) / 1000;\n\tspeed = speed.toFixed(2);\n\tjava.toast('\\n\\n延迟：'+speed+'秒\\n');\n\t} catch(err) {java.longToast(err);}\n\r\n}\n\n\r\nfunction re(){\n\tjava.toast('稍等');\n\tjava.ajax(nn+'/logout.php');\n\t//输出一份数据到日志，以备需\n\tjava.log('\\n账号：'+result['账号']+'\\n密码：'+result['密码']);\n\t//消除相应数据\r\n    cookie.removeCookie(nn);\n    source.removeLoginHeader();\n    result['账号']=result['密码']='';\n    source.putLoginInfo(JSON.stringify(result));\n    cache.deleteMemory('8xid');\n    java.toast(\"回到访客模式🔒\");\r\n}\n\r\nfunction sm(){\nlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\nlet ss = String(source.bookSourceComment).match(/^[^┘]+┘/);\nlet cki = String(source.getLoginHeader()).includes(\"jieqiUserInfo\");\n    let ms= \"访客模式🔒\";\n    if (cki != '') {\r\n        ms = \"VIP模式💎\";\r\n    }\r\nlet tt = `\n网址：${nn}　　 \n模式：${ms}　　　　　　   \n版本：${banben}　　　　　　　　　　\n\n${ss}`;\n    java.longToast(tt);\r\n}\nfunction webck(){\n\tlet nnm=nn.replace('www.','');\n\tlet ck=source.getLoginHeader()||'';\n\tif (ck) {\n\tcache.put('8xbff',source.getLoginInfo());\n\tcache.put('8xbff2',ck);\n\tcookie.setCookie(nnm,ck);}\n\treturn nnm;\n\t}\nfunction webb(){\n\tlet id = cache.getFromMemory('8xid');\n  if (id) {\n  \tid=Object.keys(id)[0];\n  \tlet nnm=webck();\n   java.startBrowser(`${nnm}/book/${id}.html`,'八叉');\n   } else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n}\n\nfunction webbs(x){\n\tlet nnm=webck();\n\tif (x==1) {nnm+='/modules/article/bookcase.php';}\n\tlet wr=java.startBrowserAwait(nnm,'web',false).body();\n\tlet bkid=(wr.match(/https.+\\/book\\/(\\d+).*\\.html/)||['',''])[1];\n\tlet url = \"legado://import/addToBookshelf?src=\"+nn+\"/book/\"+bkid+'.html,{origin:\"https://八叉书库.luoyacheng.ip-ddns.com\"}';\n\tif (bkid!='') java.openUrl(url);\n}\n\nfunction hmd(){\n\tlet id = cache.getFromMemory('8xid');\n\tif (id) {\n\tlet hmd = cache.get('8xhmd')||'{}';\n\thmd = JSON.parse(hmd);\n\tlet idd = Object.keys(id)[0];\n\tif (idd in hmd) {\n\t\tdelete hmd[idd];\n\t\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n移除黑名单😅');\n\t\t}\telse {\n\thmd = Object.assign({},hmd,id);\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n加入黑名单😤');}\n\t\n\t} else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n\t\n}\n\nfunction hmdre(){\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet ss=Object.entries(hmd);\nlet [cb,cf] = colorz();\nlet svg=`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n<style>\ntext {\n\twhite-space: pre;\n\tword-wrap: break-word;}\n</style>\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<text fill=\"#${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\">\n<tspan x=\"50%\" dy=\"30%\" font-size=\"100\">\n是否清空黑名单<tspan font-size=\"30\">（${ss.length}）</tspan>\n</tspan>\n<tspan x=\"42%\" dy=\"25%\" font-size=\"60\">输入“确认”进行清空</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入“名单”打印一份名单到日志</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入书籍ID单独移出黑名单<tspan font-size=\"30\">(名单查看)</tspan></tspan>\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\n\ntry {\n//拦截验证码报错\nlet ysr=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\nPackages.java.lang.Thread.sleep(100);\nif (ysr=='确认') {\n\tcache.delete('8xhmd');\n\tjava.toast('\\n已清空');\n}\nelse if (ysr=='名单') {\n\tjava.log('\\n💔8x黑名单：\\n'+ss.join('\\n'));\n\tcache.put('8xbff',source.getLoginInfo());\n\tcache.put('8xbff2',source.getLoginHeader());\n}\nelse if (/\\d{3,}/.test(ysr)) {\n\tif (ysr in hmd) {\n\tjava.toast('\\n已将书籍：'+hmd[ysr]+'\\n移除黑名单');\n\tdelete hmd[ysr];\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t} else {java.toast('移出失败');}\n}\nelse if (ysr=='恢复') {\n\tlet ryr=cache.get('8xbff');\n\tlet ryr2=cache.get('8xbff2');\n\tsource.putLoginInfo(ryr);\n\tsource.putLoginHeader(ryr2);\n\tjava.toast('\\n已恢复账号信息');\n}\n\n} catch(err) {}\n}\n\nfunction downl() {\nlet dn = source.get('8xdn');\nif(dn!=1) {source.put('8xdn',1);java.toast('已支持下载');}\nelse {source.put('8xdn',0);java.toast('已优化加载');}\n\t}\nfunction shujia() {\nlet dn = source.get('8xsj');\nif(dn!=1) {source.put('8xsj',1);java.toast('🟢已启用同步网站书架');}\nelse {source.put('8xsj',0);java.toast('⚫已关闭同步网站书架');}\n\t}\nfunction shuming() {\nlet sm = source.get('8xsm');\nif(sm!=1) {source.put('8xsm',1);java.toast('🟢书名跟随更新');}\nelse {source.put('8xsm',0);java.toast('⚫书名保持初始');}\n\t}\nfunction jhfm() {\nlet jhf = source.get('8xjhf');\nif(jhf!=1) {source.put('8xjhf',1);java.toast('😈净化封面');}\nelse {source.put('8xjhf',0);java.toast('😍显示封面');}\n\t}\n\nfunction gitee() {\njava.startBrowser(`https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json,{\n\t\t'headers': {\n\t\t\t'User-Agent': 'Mozilla/5.0 (Linux; Android 14)'}\n\t\t\t}`,'日志');\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "coverUrl": "class.divbox cf@img.0@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "init": "<js>\n//重定向和导入书架处理\nlet i = String(book.bookUrl).includes('https:/');\nif (i) {\n\tbook.bookUrl = `data:;base64,${java.base64Encode(baseUrl.replace(/,{o.+/,''))},{'type':''}`;\n\t}\n\n//告诉目录是由详情来的\njava.put('sx1',1);\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\n//发书评功能\nlet bkbl = book.getVariable(\"custom\");\n//解书籍地址\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet [, bkid=''] = mlj.match(/book\\/(\\d+)/)||[];\n//↑获取书id\njava.put('bkid',bkid);\n\nif (bkbl=='🔒'||bkbl=='') {\n//带🔒或书籍变量为空会经过这里\n//处理加书架功能\nlet sj=java.get('sj');\nlet sj2=source.get('8xsj'); //启用同步的标识\nif (sj=='2'&&sj2=='1') {java.put('sj',3);tbshujia(nn,bkid);}\nelse if (sj=='1') {java.put('sj',2);}\n\n\t}\nelse if (bkbl=='目录') {\n\t//清空最新章储存强制刷新目录\n\tjava.put('8xzx','');\n\t//清空输入的书籍变量\n\tbook.putCustomVariable('');}\nelse {\nlet pfurl = nn+'/modules/article/rating.php';\nlet plurl = nn+'/modules/article/reviews.php';\nlet ck = source.getLoginHeader()||'';\nlet cki = ck.match(/UserToken%3D([^%]+)/)||['',''];\ntk = cki[1];\n//↑获取链接和tk\n\nif (bkid != '' && tk != '') {\nlet tm = new Date().getTime();\nlet bkfs = (bkbl.match(/^(\\d|10)分$/) || ['','0'])[1];\nlet pfbody = `score=${bkfs}&id=${bkid}&ajax_request=${tm}`;\nlet plbody = `ptitle=&act=newpost&jieqi_token=${tk}&Submit=&pcontent=${bkbl}&aid=${bkid}&ajax_request=${tm}`;\n\nlet headers = JSON.parse(eval(source.header.replace('@js:','')+''));\nheaders['Referer']=mlj;\n\nif (bkfs != 0) {url=pfurl;body=pfbody;}\nelse {url=plurl;body=plbody;}\n//清空输入的书籍变量\nbook.putCustomVariable('');\n//let by = java.post(url,body,headers).body();\nlet by = java.connect(url+','+JSON.stringify(\n    \t{\"method\": \"POST\",\n    \theader:headers,\n    \tbody:body})\n    \t).body();\njava.longToast(\"\\n\"+java.htmlFormat(by));\n//随机延时0-1秒\nlet tim = Math.floor(Math.random()*1001);\nPackages.java.lang.Thread.sleep(tim);\ncache.deleteMemory('bax'+bkid);\n\t} else if (tk == '') {java.toast('未登录');}\n}\n\nif (!i) {\n\t //尝试用缓存\nresult=cache.getFromMemory('bax'+bkid);}\n\n//先发评论再访问刷新\nif (!result) {\n\t//http是result也纯在，src为源码\n\tlet tt = java.hexDecodeToString(src);\n\t//不要直接访问tt\n\ttt=String(tt).replace(/http.{4}[A-z\\d\\.]+/,'');\n\tconst startTime=new Date().getTime();\n\tresult = java.ajax(nn+tt)+'';\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) {java.toast('\\n详情页访问延迟过长：'+speed.toFixed()+'秒');}\n\tresult&&cache.putMemory('bax'+bkid,result);\n\t}\n\tjava.setContent(result+[]);\n\n//内容判断\n\nlet name=java.getString('class.divbox cf@span.0@text')+[];\nname=name.replace(/^《|》$/g,'');\nlet author=java.getString('class.divbox cf@span.1@a@text')+[];\n\nif (name) {\n\tbook.name=String(book.name)||name;\n\tbook.author=String(book.author)||author;\n//放入书名\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n//放入ID和书名。正式版该语法会报错\ncache.putMemory('8xid',{[bkid]: book.name});\n\n\tif (book.name!=name) {\n\t\t\tlet sm=source.get('8xsm'),sm1=java.get('sm1');\n\t\t\t//sm功能标记，sm1判断标记\n\t\t\tif (sm1=='') {\n\t\t\t//可能源地址换新了，进行更新\n\t\t\tcache.put('8xbl1', source.getVariable() );\n\t\t\tsource.setVariable('');\n\t\t\tjava.put('sm1',1);\n\t\t\t} else if (sm=='1') {\n\t\t\t\tbook.name=name;\n\t\t\t\tjava.toast(\"已自动更新书名\");\n\t\t\t} else if (sm1=='1') {\n\t\t\t\tjava.longToast(\"详情页获取的书名：\\n《\"+name+\"》\");\n\t\t\t\tjava.log(\"书名：\"+name);\n\t\t\t\tjava.put('sm1',2);\n\t\t\t}\n\t\t\t\n}\telse if (book.author!=author) {\n\t// book.author=author;\njava.log(\"获取的作者不同，作者：\"+author);} //仅输出日志\n\t\n\t//书名和作者正常由此过\n\t}\nelse {\n\t//书名加载失败\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\tgengxin();\n\tjava.toast(\"详情页加载失败，请刷新重试\");\n}\n\tresult\n</js>",
      "intro": "{{\n//书名过长时在简介显示\nlet length = 0;\nlet fuhao = ',.?!:;()[]\"';\nlet tt='&#10;';\nfor (char of String(book.name)) {\n\tif (fuhao.includes(char) ) length += 0.5;\n\telse length += 1;\n\t}\n//大于18个全角字符\nif (length > 18) tt+='📙书名：'+book.name;\n\nlet zx = java.getString('class.divbox@h3@a@text');\nlet temp=java.getStringList('class.tabcontent@class.tabvalue.1@td[0:3,9,10]@text');\nlet rr=Object.values(temp);\n//处理rr\n[rr[0], rr[2]] = [rr[2], rr[0]];\nrr[0] = '🕰️最新：' + String(zx).replace(/^正文|^\\s+/,'') + String(rr[0]).replace('最后更新：',' ').replaceAll('-','/') + String(rr[1]).replace(/连载状态：(.+)/,' ($1)');\ndelete rr[1];\nrr[2] = String(rr[2]).replace(/作品分类：\\s*/,'🗂️分类：') + String(rr[3]).replace(/作品性质：(.+)/,' ($1)');\ndelete rr[3];\nrr[4] = String(rr[4]).replace(/总点击数：\\s*/,'🎯点击：') + String(rr[5]).replace(/本月点击：(.+)/,'　$1 (月)');\ndelete rr[5];\n//评分\nlet pf=java.getString('.ratediv@text');\nlet r0 ='\\n' + rr.join('\\n') + '\\n' + String(pf).replace(/评分：\\s*/,'💡评分：');\n//简介\nlet r1=java.getString('.tabcontent .tabvalue:eq(0) div@html');\nif (r1==\"\") {r1='';}\nelse {\n r1 = '\\n🗨️简介：\\n' + String(r1).replace(/[\\u3000\\u2003]{2}/g,'\\n').replace('「','“').replace('」','”').replace(/\\>\\s*内容简介/,'')\n\t}\n//评论\nlet r2=String(java.getString('#content>.c_row@html'));\n\nlet xi = book.getVariable(\"custom\")==\"🔒\";\nif (r2==''||xi) {r2='';}\nelse {\n\tr2 = \"\\u200b\\n📝评论：\"+r2\n\t.replace(/<div class=\"c_subject\"[\\S\\s]+?div>|<span class=\"fr\"[\\S\\s]+?span>|点击：.+(?=回复)/g,' ')\n\t.replace(/回复：.+c_value\">0/g,'')\n\t.replace(/<p[>\\ ].+<\\/p>/g,'\\u200b');\n\t}\n\ttt+r0 + r1 + r2\n}}",
      "kind": "b:contains(标签：)~a@text\n<js>\nString(result).slice(1, -1).replace(/[\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "class.divbox@h3@a@text\n<js>\nlet zx = java.get('8xzx');\nif (zx==result) java.put('ww',1);\nelse {java.put('8xzx',result);java.put('ww',0);}\nresult\n</js>",
      "tocUrl": "<js>\n//解书籍url为http\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nif (mlj.includes('search.php') ) {java.toast('书籍地址异常');}\n//转化目录url\nlet mll = mlj.replace('/book/', '/read/');\n`data:;base64,${java.base64Encode(mll)},{\"type\":\"\"}`;\n</js>",
      "wordCount": ".tabcontent .tabvalue.1@html##全文字数：(\\d+)##$1###"
    },
    "ruleContent": {
      "content": "<js>\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nlet dn = source.get('8xdn');\nlet sleep = Packages.java.lang.Thread.sleep;\n//java.log(chapter.title+'inn：'+inn);\nif ((inn==-4||inn==4)&&dn!=1) {java.longToast('\\n使用下载需要在书源登录界面开启功能\\n建议预下载设定不要大于3');}\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\nlet tim = Math.floor(Math.random()*201);\nlet ii = 1;\n//手动限制并发,下载时(0-20秒随机)\n\nfunction delayl(ll){\n\tsleep(tim);\n\tlet innx;\n\twhile (dn!=1) {\nPackages.java.util.concurrent.locks.LockSupport.parkNanos(this,50*1e6); //过大时js在此中断会异常\n\t\tinnx = cin - book.durChapterIndex;\n//java.log(innx);//log时能较稳定重载\n\t\tif (innx==0) return;\n\t\telse if (innx==-1) {continue;}\n\t\telse {ii=0;return;}\n\t\t}\n\tsleep(-ll*2000);\n}\n\nswitch(inn) {\n\tcase 0: break;\n\tcase 1: sleep(1000+tim); break;\n\tcase 2: sleep(4500+tim); break;\n\tcase 3: sleep(7500+tim); break;\n\tcase -1: delayl(-1); break;\n\tcase -2: delayl(-2); break;\n\tcase -3: delayl(-3); break;\n\tdefault: dn==1 ? sleep(tim*100) : ii=0; break;\n}\n\n//延时结束\nlet bkid = java.get('bkid'); //两个putm用\n\nif (inn==0||inn==1) {\n//放入书名和id\ncache.putMemory('8xid',{[bkid]: book.name});\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n// 本地阅读进度\nlet sjj=source.get('sj'+bkid)+'';\nif (java.get('sj')==3||sjj) {\tsource.put('sj'+bkid,book.author+','+book.durChapterTitle+','+book.durChapterIndex);}\n}\n\n\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,nn);\n//java.log('正文地址：'+tt);\nlet ml = String(book.tocUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\n\nif (ii) {\n//↓第一次访问正文\ntry {\n\t\tlet baxtime = cache.getFromMemory('baxtime');\n\t if (baxtime<Date.now()) baxtime=Date.now();\n\t baxtime+=2000;\n\tcache.putMemory('baxtime',baxtime);\n\twhile(Date.now()<baxtime||cache.getFromMemory('bxvip'+bkid)) {\n\tPackages.java.lang.Thread.sleep(1000);}\n\nconst startTime=new Date().getTime();\nresult=java.ajax(tt);\nconst endTime=new Date().getTime();\nlet speed = (endTime - startTime)/1000;\nif (speed>39) java.toast('\\n正文页访问延迟过长：'+speed.toFixed()+'秒');\n//复原手机版链接，干掉字数统计。重新刷新时不为这个链接，不会导致二次加载\nchapter.url = tt.replace('www.','');\n\n//拦截超时报错\n} catch (e) {if (/timeout/.test(e)) java.toast('正文超时'); else {inn==0&&java.toast('正文异常：'+e);}\njava.log('八叉正文出错：'+e);}\n// if ii 结束\n\t} else {result='';}\n//inn>1时为空，软件会自动重新获取\n\nlet rr = java.getString('class.mt mb@a@text||class.tc mb@a@text',result);\n\n//内容识别\nif (rr.includes(\"登录\") ) {\n\tjava.toast(\"💎请重新登录书源账号\");\n\tresult='';}\nelse if (rr.includes(\"充值\") ) {\nlet url = nn+'/modules/obook/buychapter.php';\nlet ck = source.getLoginHeader()+'';\nlet tk = (ck.match(/UserToken%3D([^%]+)/)||['',''])[1];\nlet cid = tt.match(/cid\\=(\\d+)/)[1];\nlet body = `buytype=1&act=buy&jieqi_token=${tk}&cid=${cid}&submit=`;\nlet headers = JSON.parse(eval(source.header.replace('@js:','')+''));\nheaders['Referer']=tt;\n\nif (tk && nn && cid) {\n\tcache.putMemory('bxvip'+bkid,true);\n\ttry {\n\tsleep(600-tim);\n\tlet pt = java.connect(url+','+JSON.stringify(\n    \t{\"method\": \"POST\",\n    \t\"header\":headers,\n    \t\"body\":body})\n    \t);\n  let lc = pt.url()+'';\n  if (lc.includes('/read/')||lc.includes('/obook/')) {\n  \tjava.toast(\"已为你自动购买\");\n  \tresult = pt.body();}\n  \telse if (lc.includes('buychapter')) {\n  \t\tjava.toast('购买失败\\n检测到未重定向');\n  \t\tresult = pt.body();}\n  \telse java.toast('购买异常');\n \t} catch (err) {java.longToast(\"💔VIP内容获取失败\"); result='';}\n \t\tcache.putMemory('bxvip'+bkid,false);\n} else if (!tk) {java.toast(\"💎书源未获取到登录信息\"); result='';} else java.longToast('nn或cid为空');\n\n\n} else {\n//无VIP登录，正常直接加载\n}\n\nresult = java.getString('[id*=\"content\"]@html',result);\n//检查\nresult\n</js>",
      "replaceRegex": "##八叉书库|八叉~书库|八叉书[,~]库|^(?:.{0,19}页：)(?:833330|8xsk)\\.(?:xyz|org)[^一-ꀀ]{0,9}|(?:833330|8xsk|八叉)([^\\.])(?:xyz|yxz|org|书库)|八~叉|书~库##$1",
      "sourceRegex": "\\*/#\\记住本站发布页：8xsk.org#*#"
    },
    "ruleExplore": {
      "author": "td.2@text||span:contains(作者：)+span@text\n<js>\nif (result == '[email protected]') {\n\tlet hex = java.getString('.__cf_email__.0@data-cfemail');\n\tresult = decodeEmail(String(hex),0);\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.put('sj',3); //标识已经同步了书架，作者名称读取缓存\n\tlet sj=source.get('sj'+java.get('bkid'));\n\tresult=sj.split(',')[0]||'';\n\t}\n\tresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://localhost') ) {\n\t\tresult = [];\n}\nelse if (baseUrl.includes('search.php?') ) {\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result = [];}\nelse {result = java.getElement('#jieqi_page_contents>div');}\n\t}\nelse if (baseUrl.includes('/book/') ){\njava.toast('暂不支持重定向结果');\nresult=[];\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t//我的书架\n\tlet ts= java.getString('table@caption@ownText');\n\tts=String(ts).replace(/.*(可收藏 .+已收藏[^，。]+).*$/,'\\n$1');\n\tsource.get('sjts')!=ts&&java.toast('\\n'+ts);\n\tsource.put('sjts',ts);\n\tPackages.java.lang.Thread.sleep(100);\n\tresult = java.getElement('table tr:has(a)');\n\t}\nelse {\nresult = java.getElements('@@#jieqi_page_contents>tr||#content div[class=\"c_row cf\"]');\n}\nresult\n</js>",
      "bookUrl": "@js:book.bookUrl",
      "coverUrl": "<js>\nlet jhf=source.get('8xjhf'), img;\nif (jhf=='1') img=jinghuafm();\nelse {\n//正常封面\nif (/articlelist|sort\\//.test(baseUrl)) {\n\t//含有封面，注意“sort”\n\timg = java.getString('img@src');\n\t}\nelse if (baseUrl.includes('search.php?') ) {\n\t//搜索\n\timg = java.getString(String(source.ruleSearch.coverUrl));\n\t}\nelse{\n\t//拼接封面\n\tlet id = java.get('bkid')+'', n;\n  if (id < 1000) n = 0;\n  else n = id.slice(0,-3);\nimg = `https://www.8xbook.org/files/article/image/${n}/${id}/${id}s.jpg`;\n}\n\n}\nimg\n</js>",
      "intro": "<js>\nresult = java.getString('td.3@text||class.c_description@text')+'';\nif (baseUrl.includes(\"top/words\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/goodnum\")) {'⠀\\n收藏数：'+result}\n//新书榜\nelse if (baseUrl.includes(\"top/newhot\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n点击数：'+result}\nelse if (baseUrl.includes(\"top/signtime\")) {\n  let t = parseInt(result)*1000;\n  let time = java.timeFormatUTC(t,\"⠀\\n签约时间：yy/MM/dd HH:mm:ss\",8*60*60*1000);\n  time}\nelse if (baseUrl.includes(\"top/lastupdate\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/postdate\")) {'⠀\\n入库时间：'+result}\nelse if (baseUrl.includes(\"top/allvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n总点击：'+result}\nelse if (baseUrl.includes(\"top/monthvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n月点击：'+result}\nelse if (baseUrl.includes(\"top/weekvisit\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n周点击：'+result}\nelse if (baseUrl.includes(\"top/allvote\")) {'⠀\\n总推荐：'+result}\nelse if (baseUrl.includes(\"top/monthvote\")) {'⠀\\n月推荐：'+result}\nelse if (baseUrl.includes(\"top/weekvote\")) {'⠀\\n周推荐：'+result}\nelse if (/articlelist|sort\\/|search\\.php/.test(baseUrl)) {\n//含简介(搜索会经此)\nresult.replace('「','“').replace('」','”').replace(/\\s+/g,' ')}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tlet sj=source.get('sj'+java.get('bkid'));\n\tsj=sj.split(',')[1]||'';\n\t(sj==''||sj=='null')?'':'\\u200b\\n当前阅读进度：'+sj;\n\t}\nelse {''}\n</js>",
      "kind": "<js>\nif (baseUrl.includes('search.php?') ) {java.getStringList(String(source.ruleSearch.kind));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getStringList('td.4@text');}\nelse {java.getStringList('td[4,5]@text||span:contains(更新：)+span@text');}\n</js>",
      "lastChapter": "<js>\nif (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.lastChapter));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getString('td.2@a.-1@text');}\n\telse {java.getString('td.1@a.-1@text||class.c_subject@a.-1@text');}\n</js>",
      "name": "<js>\nif (baseUrl.includes('search.php?') ) {\nresult=String(java.getString('.c_subject@text')).replace(/\\\"/g,'');\n//获取id目的\nrs = java.getString('class.c_subject@a.0@href');\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t\t\tresult =  java.getString('td.1@a.-1@text');\n\t//我的书架需要转化链接\n\t\trs = java.getString('td.1@a.-1@href');\trs='https://www.8xbook.org/book/'+rs.match(/aid=(\\d+)/)[1]+'.html';\n\t\n\t}\nelse {\n\t\tresult =  java.getString('td.0@a.-1@text||class.c_subject@a.1@text');\n\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');\n}\n\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');\n\t}\nrr = String(rs).replace(/https\\:\\/{2}[A-z\\d\\.]+/, nn);\nbook.bookUrl=`data:;base64,${java.base64Encode(rr)},{\"type\":\"\"}`;\n\n//获取id，黑名单时书名为空\nlet id = rs.match(/book\\/(\\d+)/)[1];\njava.put('bkid',id);\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "<js>\nif (/articlelist|sort\\//.test(baseUrl)) {\n  java.getString('span:contains(字数：)+span@text');\n}\nelse if (/articlefilter/.test(baseUrl)) {\n  java.getString('td.3@text');\n}\nelse if (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.wordCount));\n\t}\n</js>"
    },
    "ruleSearch": {
      "author": "span:contains(作者：)+span@text",
      "bookList": "<js>\njava.setContent(cache.get('8xss1')||result);\ncache.delete('8xss1');\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result=[];}\nelse {\n\tresult = java.getElement('#jieqi_page_contents>div');\n}\nresult\n</js>",
      "bookUrl": "class.c_subject@a.0@href\n<js>\n`data:;base64,${java.base64Encode(result)},{\"type\":\"\"}`\n</js>",
      "checkKeyWord": "作者：棺材",
      "coverUrl": ".fl img@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "intro": ".c_description@text\n<js>\nresult.replace('「','“').replace('」','”').replace(/\\s/g,' ')\n</js>",
      "kind": "span:contains(更新：)+span@text&&span:contains(关键字：)+span@text\n<js>\nString(result).replace(/[\\[\\]\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "span:contains(最新章节：)+span@text",
      "name": ".c_subject@text\n<js>\n//获取id，黑名单时书名为空\nlet id = java.getString('class.c_subject@a.0@href');\nid = id.match(/book\\/(\\d+)/)[1];\n//java.log(result); //输出书名\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "span:contains(字数：)+span@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nlet tim = Math.floor(Math.random()*91);\nPackages.java.lang.Thread.sleep(tim);\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\teval(String(source.loginUrl));\n\tnn = String(source.getVariable()).replace(/\\/$/,'');\n\t}\nlet sj=java.get('sj');\nif (sj=='') java.put('sj',1); //书架标识\nlet ww = java.get('ww'),\nlyc = java.get('lyc'),\nsx1 = java.get('sx1'); //ww是否有新章，sx刷新标识从目录来(已在书架才会触发)\njava.put('sx1',0); //还原详情到目录标识\nlet sj2=source.get('8xsj'); //启用同步的标识\nlet bkid=java.get('bkid');\n\nif (sx1!='1') {\n\t let baxtime = cache.getFromMemory('baxtime');\n\t if (baxtime<Date.now()) baxtime=Date.now();\n\t baxtime+=4000;\n\tcache.putMemory('baxtime',baxtime);\n\twhile(Date.now()<baxtime) {\n\tPackages.java.lang.Thread.sleep(4000);}\n\t}\nif (sj!='3'&&sx1!='1'&&sj2=='1'&&bkid!='') {tbshujia(nn,bkid)&&java.put('sj',3);}\n//不为3未加书架，不为1不过详情，为1开启功能，且参数不为空\nlet sjj=source.get('sj'+bkid)+'';\nif (sjj&&book.durChapterIndex==0) {\n\t//反向同步进度\nbook.durChapterIndex=sjj.split(',')[2]||0;}\nelse if (java.get('sj')==3&&!sjj) {\n\t//标记进源储存\nsource.put('sj'+bkid,book.author+','+book.durChapterTitle+','+book.durChapterIndex);}\n//禁止目录刷新❌\nif (0&&(ww!='1' || lyc.length()<39 || sx1!='1')) {\nlet tim = Math.random()*1501|0;\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\nPackages.java.lang.Thread.sleep(tim);\nconst startTime=new Date().getTime();\nresult = java.ajax(nn+tt);\nconst endTime=new Date().getTime();\nlet speed = (endTime - startTime)/1000;\nif (speed>39) {java.toast('\\n目录页访问延迟过长：'+speed.toFixed()+'秒');}\n//缩减储存\nresult=java.getString('.index@all',result)+'';\nresult.length>39 && java.put('lyc',result);\n} else {result=lyc;}\njava.setContent(result);\nresult=java.getElement('.index dd, .index dt');\n</js>",
      "chapterName": "dd a,dt@text##八叉书库|八叉书[。·]库|8xsk?[。·]org|八叉~书库|八~叉书~库",
      "chapterUrl": "a@href\n<js>\n`data:;base64,${java.base64Encode(result)},{\"type\":\"\"}`;\n</js>",
      "isVolume": "dt@text",
      "updateTime": "{{@@dd@a@title##\\d{1,2}\\:\\d{1,2}更新，共(\\d+字).*## $1}}\n{{@@dd@em@text##.+##💎}}"
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\nnn = String(source.getVariable()).replace(/\\/$/,'');\nlet url = `${nn}/modules/article/search.php`;\nlet url2='data:;base64,QQ,{\"type\":\"bx\"}';\ntry {\n\tif (key.startsWith('书名：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=articlename&page=${page}`;\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('作者：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=author&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('标签：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=keywords&page=${page}`;\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (page == 1) {\n\t\tftsm();\n\t\tlet body = `searchtype=all&searchkey=${key}&act=search&submit=`;\n\tss = java.post(url,body,{\t'User-Agent': ua});\n    \t\n\t}\n\t\n\telse {\n\t\turl +=\t`?searchkey=${key}&searchtype=all&page=${page}`;\n\tss = java.get(url,{\t'user-agent': ua});\n\t}\n\nlet code = ss.statusCode();\nif (code==302||code==301) {\n\t//重定向\n\turl2=ss.header(\"location\");\n\tlet i=url2.includes(encodeURI(url).replace(/^http.{4}[^\\/]+\\//,''));\n\tif (i) {\n\tlet durl=url2.match(/^http.{4}[^\\/]+\\//,'')[0];\n\tsource.setVariable(durl);\n\tjava.longToast('\\n源地址已更新为新地址：\\n'+durl);\n\tjava.log('\\n源地址已更新为新地址：\\n'+durl);}\n\t}\nelse if (code == 200) {\n\tcache.put('8xss1', ss.body());\n\t}\nelse if (code == 520) {\n\tjava.toast(\"💔IP被拉黑\");\n\t}\nelse {\n\tjava.toast(\"💔搜索响应码异常\");\n\t}\n\n\n} catch(err) {\n\turl2 =\turl+`?searchkey=${key}&searchtype=all&page=${page}`;\n\tjava.log('搜索异常：'+err+'\\n备用方案：'+url2);\n\tcache.put('8xbl1', source.getVariable());\n\tsource.setVariable('');\n\t}\nurl2\n</js>",
    "variableComment": "♦源变量：\n　 当前书源使用的网址\n　 可点击发现页版本号手动刷新\n\n♦书籍变量：\n　 ①填写  🔒 并刷新，关闭本书评论显示\n　 ②填写“目录”并刷新，强制刷新目录\n　 ③填写分数并刷新，使用分数进行评分\n　 ④填写其它并刷新，内容作为评论发送\n分数格式示意“1分”“2分”…“10分”\n\n㊟默认详情页检测到有更新内容时才会刷新目录\n\n！注意区分源变量和书籍变量\n",
    "weight": 0
  },
  {
    "bookSourceComment": "需登录\n如果文章有更新，要先更新目录，在刷新正文\n\n\n标签::https://api.unifans.io/common/getPostsByHashTag?skip={{(page-1)*10}}&limit=10&hashTag=标签名&_t=={{Date.now()}}",
    "bookSourceName": "引力圈【只能搜索作者】",
    "bookSourceType": 0,
    "bookSourceUrl": "https://app.unifans.io/feed",
    "bookUrlPattern": ".*/getCollectionDetail.*collectionId=.*",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "标签::https://api.unifans.io/common/getPostsByHashTag?skip={{(page-1)*10}}&limit=10&hashTag=高H&_t=={{Date.now()}}\n\n21点牌::data:getPersonalInfo;base64,{{java.base64Encode(\"domainName=21dianpai&_t=\"+Date.now())}},{\"type\":\"\"}\n\nAlphamie::data:getPersonalInfo;base64,{{java.base64Encode(\"domainName=y1250082324&_t=\"+Date.now())}},{\"type\":\"\"}",
    "lastUpdateTime": "1748086714529",
    "loginUi": "[\n    {\n        name: \"邮箱\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    }\n]",
    "loginUrl": "<js>\nfunction login(){\n\temail = source.getLoginInfoMap().get(\"邮箱\");\n\tpwd = source.getLoginInfoMap().get(\"密码\");\n\turl = \"https://api.unifans.io/account/login\";\n\tbody = {\n          \"boundMailbox\": String(email),\n          \"password\": String(pwd)\n         }\n\tpost = {\n\t\t\"method\":\"POST\",\n\t\t\"body\":JSON.stringify(body)\n\t\t   }\n\turl = url+\",\"+JSON.stringify(post);\n\ttoken = JSON.parse(java.ajax(url)).data.token;\n\tauthorization = \"hgq \"+token;\n authorization = {\n \t\"authorization\":String(authorization)\n \t}\t; \n \tsource.putLoginHeader(JSON.stringify(authorization));\n\t}\n</js>",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.data.collection.nickName",
      "coverUrl": "$.data.collection.picture",
      "init": "<js>\nif(!/&_t=/.test(baseUrl) && !/data:getOne/.test(baseUrl)){\nresult = \tjava.ajax(baseUrl+\"&_t={{Date.now()}}\")\n\t}\nresult\n</js>",
      "intro": "<js>\nif(/getPersonalInfo/.test(baseUrl)){\n\tresult =java.getString(\"$.data.description\")+`\\n-----复制下面文字粘贴至发现地址-----\\n{{$.data.homeName}}::data:getPersonalInfo;base64,{\\{java.base64Encode(\"domainName={{$.data.domainName}}&_t=\"+Date.now())}\\},{\"type\":\"\"}`\n\t}else{\n\t\tresult = java.getString(\"$.data.collection.comment\")\n\t\t}\n</js>",
      "name": "$.data.collection.name",
      "tocUrl": "<js>\nif(/getPersonalInfo/.test(baseUrl)){\n\tresult = `data:getPersonalInfo;base64,${java.base64Encode(\"domainName={{$.data.domainName}}\")},{\"type\":\"\"}`;\n\t}else if(/getCollectionDetail/.test(baseUrl)){\n\t\tresult = \"https://api.unifans.io/creator/getPostsByCollection?collectionId={{$.data.collection._id}}&skip=0&limit=500&order=0&_t={{Date.now()}}\"\n\t\t}\n</js>"
    },
    "ruleContent": {
      "content": "<js>\nif(/data:postId/.test(baseUrl)){\npostid = \tjava.hexDecodeToString(result)\n\tresult = JSON.parse(book.customVariable)[postid];\n\t}else if(/getCollectionDetail/.test(baseUrl)){\n\t\tif(book.durChapterIndex === chapter.index){\n\t\t\turl = \"https://api.unifans.io/creator/getCollectionDetail?collectionId={{$.data.collection._id}}&_t=\"+Date.now();\n\t\ttitle = \"{{$.data.collection.name}}\";\n\t\turl = \"legado://import/addToBookshelf?src=\"+encodeURIComponent(url);\n\t\thtml = `<!DOCTYPE html>\n<html>\n<head>\n    <title>《${title}》加入书架</title>\n    <style>\n        body {\n            font-family: 'Microsoft YaHei', sans-serif;\n            background-color: #f5f5f5;\n            margin: 0;\n            padding: 20px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            min-height: 100vh;\n        }\n        .book-container {\n            background-color: white;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n            padding: 40px;\n            max-width: 900px;\n            width: 90%;\n            text-align: center;\n            margin-bottom: 30px;\n        }\n        .book-cover {\n            min-width: 60%;  /* 图片更大 */\n            min-height: 40%; /* 图片更高 */\n            border-radius: 8px;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n            margin-bottom: 30px;\n            object-fit: contain;\n        }\n        .book-title {\n            font-size: 56px;  /* 标题更大 */\n            color: #333;\n            margin-bottom: 25px;\n            font-weight: bold;\n        }\n        .book-description {\n            font-size: 50px;  /* 简介文字更大 */\n            color: #555;\n            line-height: 1.6;\n            text-align: left;\n            padding: 0 20px;\n            margin-bottom: 30px;\n        }\n        .action-button {\n            display: inline-block;\n            background-color: #4285f4;\n            color: white;\n            text-decoration: none;\n            font-size: 40px;  /* 按钮文字更大 */\n            padding: 16px 40px; /* 按钮更大 */\n            border-radius: 30px;\n            margin-top: 30px;\n            transition: all 0.3s ease;\n            box-shadow: 0 2px 5px rgba(66,133,244,0.3);\n        }\n        .action-button:hover {\n            background-color: #3367d6;\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(66,133,244,0.3);\n        }\n    </style>\n</head>\n<body>\n    <div class=\"book-container\">\n        <div class=\"book-title\">《${title}》</div>\n        <img src=\"{{$.data.collection.picture}}\" class=\"book-cover\">\n        <div class=\"book-description\">\n            简介：${java.getString(\"$.data.collection.comment\")}\n        </div>\n        <a href=\"${url}\" class=\"action-button\">加入书架</a>\n    </div>\n\n    <script>\n        window.onload = function () {\n            window.location.href = '${url}';\n        };\n    </script>\n</body>\n</html>\n`;\n\t\t\n\t\t\n\t\t\n\t\tscript = `data:text/html;charset=utf-8,${encodeURIComponent(html)}`;\n\t\tjava.startBrowser(script,\"《\"+title+\"》\")\n\t\t\n\t\t}\n\t\nresult=\"❗️刷新本章节，跳转本书详情页\\n\"+'简介：'+java.getString(\"$.data.collection.comment\")+\"\\n\"+'<img src=\"{{$.data.collection.picture}}\">'\n\t\t}else if(/getOne/.test(baseUrl)){\n\t\t\tresult = String(book.intro).replace(/img src/g,'<img src')\n\t\t\t}\n\tresult\n</js>\n\n##\\<img src\\=\"\"\\>",
      "imageStyle": "FULL",
      "replaceRegex": "##Powered by Froala Editor"
    },
    "ruleExplore": {
      "author": "$.creatorName",
      "bookList": "<js>\nif(/localhost/.test(baseUrl)){\n\t\nlet list = [];\n\ndomid = java.hexDecodeToString(result);\n\n\t\t合集链接 = \"https://api.unifans.io/common/getCollections?\"+domid;\n\t\t\n\t合集 = \tString(java.ajax(合集链接));\n\tjava.setContent(合集);\n\tlist = java.getElements(\"$.data.collections[*]\").toArray();\n\n\t\t主页链接 = \"https://api.unifans.io/creator/posts?\"+domid+\"&skip=0&limit=1000&order=1\";\n\t主页 = \tString(java.ajax(主页链接));\n\t\tjava.setContent(主页);\n\t\t主页list = java.getElements(\"$.data.posts[*]\").toArray().sort((a, b) => {\n    const hasAName = a.collectionDetails[0]?.name != null;\n    const hasBName = b.collectionDetails[0]?.name != null;\n    return hasAName - hasBName ;\n});\n\t\tlist = list.concat(主页list)\n\tresult = list.length?JSON.stringify(list):`[{name:\"无内容\"}]`;\n\t}\n\tresult\n</js>\n$.data.posts[*]||$.[*]",
      "bookUrl": "<js>\n\tif(\"{{$.name}}\"!==\"\"){\n\t\tresult = \"https://api.unifans.io/creator/getCollectionDetail?collectionId={{$._id}}&_t={{Date.now()}}\";\n\t\t}else if(\"{{$.title}}\"!==\"\"){\n\t\t\tresult = `data:getOne;base64,${java.base64Encode(\"{{$.postId}}\")},{\"type\":\"\"}`;\n\t\t\t}\n</js>",
      "coverUrl": "$.picture",
      "intro": "@js:\nintro = java.getString(\"$.previewText&&$.comment\");\ntext = String(java.getString(\"$.text\")).replace(/<\\/*span.*?>| style=\".*?\"/g,'');\nimg ='img src=\"'+ java.getString(\"$..address\")+'\">';\nhtml = text+\"\\n\"+img.replace(/img src=\"\">/g,'');\nintro+\"\\n\"+html;",
      "kind": "@js:\n\"{{$.locked}}\"==\"true\"?\"🔒\":\"\"",
      "name": "{{$.name||$.title}}",
      "wordCount": "{{$.collectionDetails[*].name}}"
    },
    "ruleSearch": {
      "bookList": "$.data.result[*]",
      "bookUrl": "https://api.unifans.io/common/getPersonalInfo?domainName={{$.domainName}}&_t={{Date.now()}}",
      "checkKeyWord": "++data:getPersonalInfo;base64,ZG9tYWluTmFtZT1ndWExMjM0NTY=,{\"type\":\"\"}",
      "coverUrl": "$.avatar",
      "intro": "$.creatingDes",
      "name": "$.nickName"
    },
    "ruleToc": {
      "chapterList": "<js>\nlet list;\nfunction putContent(list){\n\tlet json = {}\nfor(i in list){\n\ttext = String(java.getString(\"$.text\",list[i])).replace(/<\\/*span.*?>| style=\".*?\"/g,'').replace(/{{HOST}\\}/g,'https://bucket-prod.unifans.io');\n\t\n\timg =String(java.getString(\"$..address\",list[i])).split('\\n').map(x=>'<img src=\"'+x+'\">').join(\"\\n\");\n\n\t\thtml = text+\"\\n\"+img.replace(/<img src=\"\"/g,'');\n\n\t  postid = java.getString(\"$.postId\",list[i]);\n\t  json[postid] = html;\n\t}\n\tbook.putCustomVariable(JSON.stringify(json));\n\t}\n\nif(/getPostsByCollection/.test(baseUrl)){\nlist = java.getElements(\"$.data.posts[*]\").toArray().sort((a, b) => a.createTime - b.createTime);\nputContent(list)\n\tresult = list.length?JSON.stringify(list):`[{name:\"无目录\"}]`\n\t}else if(/getPersonalInfo/.test(baseUrl)){\n\t\tdomid = java.hexDecodeToString(result);\n\t\t合集链接 = \"https://api.unifans.io/common/getCollections?\"+domid+\"&_t={{Date.now()}}\";\n\t合集 = \tString(java.ajax(合集链接));\n\tjava.setContent(合集);\n\tlist = java.getElements(\"$.data.collections[*]\").toArray();\n\t\t\n\t\t主页链接 = \"https://api.unifans.io/creator/posts?\"+domid+\"&skip=0&limit=1000&order=1&_t={{Date.now()}}\"\n\t主页 = \tString(java.ajax(主页链接));\n\t\tjava.setContent(主页);\n\t\t主页list = java.getElements(\"$.data.posts[*]\").toArray().sort((a, b) => {\n    const getName = (item) => item.collectionDetails?.[0]?.name ?? null;\n\n    const nameA = getName(a);\n    const nameB = getName(b);\n\n    if (nameA === null && nameB !== null) return -1;\n    if (nameA !== null && nameB === null) return 1;\n\n    // 按 createTime 升序排列（旧的在前）\n    return a.createTime - b.createTime;\n});\n\n\t\tputContent(主页list)\n\t\tlist = list.concat(主页list)\n\tresult = list.length?JSON.stringify(list):`[{name:\"无内容\"}]`\n\t\t}else if(/getOne/.test(baseUrl)){\n\t\t\tresult = `[{name:\"${book.name}\"}]`\n\t\t\t}\n</js>\n$.[*]",
      "chapterName": "$.name||$.title",
      "chapterUrl": "<js>\nif(/getPersonalInfo/.test(baseUrl)){\nif(String(java.getString(\"$.name\"))!==\"\"){\n\t\t\t\tresult = \"https://api.unifans.io/creator/getCollectionDetail?collectionId={{$._id}}&_t=\"+Date.now();\n\t\t}else if(String(java.getString(\"$.title\"))!==\"\"){\n\t\t\t\tresult = `data:postId;base64,${java.base64Encode(\"{{$.postId}}\")},{\"type\":\"\"}`;\n\t\t\t}\n}\telse if(/getPostsByCollection/.test(baseUrl)){\n\tresult = `data:postId;base64,${java.base64Encode(\"{{$.postId}}\")},{\"type\":\"unifansContent\"}`;\n\t}\n</js>",
      "isVip": "$.locked",
      "updateTime": "💰{{$.sponsorScheme[0].fee}} 目录总数：{{$.postCount}} 所属合集：{{$.collectionDetails[*].name}}\n<js>\ntime=\"{{$.updateTime}}\"?java.timeFormat(\"{{$.updateTime}}000\"):\"\"\nresult=time+\" \"+result;\nresult = result\n.replace(/所属合集：$/g,'')\n.replace(/(?:💰|目录总数：)(?!\\d)/g,'')\n.replace(/💰0(?![.\\d])/g,'');\n</js>"
    },
    "searchUrl": "https://api.unifans.io/common/searchNickDomainName,{\n\t'method':'POST',\n\t'body':'{\"search\":\"{{key}}\",\"searchType\":\"creator\",\"skip\":0,\"limit\":500}'\n\t}",
    "weight": 0
  },
  {
    "ruleSearch": {
      "checkKeyWord": "吾",
      "bookList": "@css:.d-grid.books>.book.d-flex.shadow-sm",
      "name": "@css:.fw-bold span@text",
      "author": "@css:.small a@text",
      "intro": "@css:.description@text",
      "coverUrl": "@css:.cover img@src",
      "bookUrl": "@css:a:eq(0)@href",
      "wordCount": "@css:.small ul>li:eq(0)>strong@text"
    },
    "ruleBookInfo": {
      "name": "@css:h3@text",
      "author": "@css:.list-inline-item.tags>a>strong@text",
      "wordCount": "@css:#book-status>li:eq(0)>strong@text",
      "intro": "@css:.description@text",
      "coverUrl": "@css:.mb-xl-0.text-center>img@src"
    },
    "ruleToc": {
      "chapterList": "@css:.chapters>div",
      "chapterName": "@css:span@text",
      "chapterUrl": "@css:a@href"
    },
    "ruleContent": {
      "title": "@css:h1@text",
      "content": "@css:.px-sm-1>p@text"
    },
    "ruleReview": [],
    "ruleExplore": {
      "bookList": "@css:.d-grid.books>.book.d-flex.shadow-sm",
      "name": "@css:.fw-bold span@text",
      "author": "@css:.small a@text",
      "intro": "@css:.description@text",
      "coverUrl": "@css:.cover img@src",
      "bookUrl": "@css:a:eq(0)@href"
    },
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.noveltri.com",
    "bookSourceName": "🔞三叠书阁-繁",
    "searchUrl": "/zh-tw/search?q={{key}}",
    "loginUrl": "/zh-tw/login",
    "exploreUrl": "[\n    {\n        \"title\": \"科幻未來\",\n        \"url\": \"/zh-tw/books/1b7f39f5f32f6b96/{{page}}.html\"\n    },\n    {\n        \"title\": \"網路同人\",\n        \"url\": \"/zh-tw/books/1e42ed73a95ce215/{{page}}.html\"\n    },\n    {\n        \"title\": \"軍事歷史\",\n        \"url\": \"/zh-tw/books/208433aa7d3a9847/{{page}}.html\"\n    },\n    {\n        \"title\": \"武俠仙俠\",\n        \"url\": \"/zh-tw/books/580ffbceba88bd86/{{page}}.html\"\n    },\n    {\n        \"title\": \"靈異玄幻\",\n        \"url\": \"/zh-tw/books/1b7f39f5f32f6b96/{{page}}.html\"\n    },\n    {\n        \"title\": \"奇幻冒險\",\n        \"url\": \"/zh-tw/books/67a3a204728ae79a/{{page}}.html\"\n    },\n    {\n        \"title\": \"情色工口\",\n        \"url\": \"/zh-tw/books/f4c67287fa5cf290/{{page}}.html\"\n    }\n]",
    "lastUpdateTime": "1748421985824"
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🍿 日常,🎊 常用,🎨 漫画",
    "bookSourceName": "🎨拷贝漫画💞",
    "bookSourceType": 2,
    "bookSourceUrl": "https://www.copymanga.site",
    "bookUrlPattern": "https://.*/api/v3/comic2/.*in_mainland.*",
    "customOrder": 117,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/exploreUrl.js')));\n</js>",
    "header": "<js>\nvar Proxy = Map('代理：').split(\",\");\nheaders={\n    \"User-Agent\": \"COPY/999.9.9\",\n    \"proxy\": Proxy.some(value => parseInt(value, 10) == parseInt(Get('ci0'), 10)) ? '' : Proxy[0],\n}\ncache.put(java.md5Encode16(Get('url') + \"headers\"),JSON.stringify(headers));\nJSON.stringify(headers);\n</js>",
    "jsLib": "{\"拷贝漫画\":\"https://qyyuapi.com/sy/js/拷贝漫画/jsLib.js\"}",
    "lastUpdateTime": "1747921004412",
    "loginUi": "[\n  { name: \"代理：\", type: \"text\" },\n  { name: \"账号：\", type: \"text\" },\n  { name: \"密码：\", type: \"password\" },\n  {\n    name: \"💡　　 账　　 号　　 登　　 录　　 💡\",\n    type: \"button\",\n    action: \"Login()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  },\n  { name: \"查看当前\", type: \"button\", action: \"look(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"查看历史\", type: \"button\", action: \"look(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"恢复默认\", type: \"button\", action: \"test(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁体搜索\", type: \"button\", action: \"search_TC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁简转换\", type: \"button\", action: \"TC_to_SC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"目录整理\", type: \"button\", action: \"settle()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换源站  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"①拷贝漫画❶\", type: \"button\", action: \"$(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"②拷贝漫画❷\", type: \"button\", action: \"$(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"③拷贝漫画❸\", type: \"button\", action: \"$(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"④拷贝漫画❹\", type: \"button\", action: \"$(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"༺ˇ»`ʚ  点击切换分类  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"o(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"日本\", type: \"button\", action: \"o(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"韩国\", type: \"button\", action: \"o(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"欧美\", type: \"button\", action: \"o(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"完结\", type: \"button\", action: \"o(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换排序  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"热门人气\", type: \"button\", action: \"p(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"更新时间\", type: \"button\", action: \"p(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"页数：\", type: \"text\" },\n\n  {\n    name: \"清除网站Cookie缓存\",\n    type: \"button\",\n    action: \"deleteCookie()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  },\n\n  { name: \"清除远程代码标识\", type: \"button\", action: \"DeleteYckey()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n\n  {\n    name: \"💡　　 源　　 站　　 打　　 印　　 💡\",\n    type: \"button\",\n    action: \"test()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  }\n]",
    "loginUrl": "eval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/loginUrl.js')));",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "canReName": "reName",
      "coverUrl": "cover",
      "downloadUrls": "durl",
      "init": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/ruleBookInfo.js')));\n</js>",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "tocUrl": "url",
      "wordCount": "word"
    },
    "ruleContent": {
      "content": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/ruleContent.js')));\n</js>",
      "imageStyle": "FULL"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/ruleExplore.js')));\n</js>",
      "bookUrl": "url",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/ruleSearch.js')));\n</js>",
      "bookUrl": "url",
      "checkKeyWord": "秘密",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleToc": {
      "chapterList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/ruleToc.js')));\n</js>",
      "chapterName": "title",
      "chapterUrl": "link",
      "isVolume": "",
      "nextTocUrl": "@js:\nvar num = Math.floor(java.get(\"total\") / 500); \nvar res = String(baseUrl).match(/(.*offset=)\\d+(.*)/) || ['',''];\nvar data = [];\nfor(i = 1;i <= num; i++){\n    data.push(res[1] + (i*500) + res[2]);\n}\ndata;",
      "preUpdateJs": "if (!String(book.bookUrl).includes(Get('url'))) {\n    book.bookUrl = String(book.bookUrl).replace(/.*\\/\\/[^\\/]+/, Get('url'));\n    book.tocUrl = String(book.tocUrl).replace(/.*\\/\\/[^\\/]+/, Get('url'));\n    java.refreshTocUrl();\n}",
      "updateTime": "time"
    },
    "searchUrl": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/拷贝漫画/searchUrl.js')));\n</js>",
    "variableComment": "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",
    "weight": 0
  },
  {
    "ruleSearch": {
      "checkKeyWord": "我的",
      "bookList": "@css:.section1.inner ul li",
      "name": "@css:h3 a@text",
      "bookUrl": "@css:.book-img a@href||https://spudnovel.com",
      "author": "@css:.book-info p.author:contains(作者：)@text##作者：##\u0001",
      "kind": "@css:.book-info p.author span.type a@text[0]",
      "wordCount": "@css:.book-info p.author span.author:first-child@text##\\\\d+",
      "intro": "@css:.book-info p[style='float: left;']@text",
      "coverUrl": "@css:.book-img img@src||https://spudnovel.com"
    },
    "ruleBookInfo": {
      "author": "@css:.book-detail-info p:contains(作者：)@text##作者：##\u0001",
      "name": "@css:.book-detail-info h2@text",
      "wordCount": "@css:.book-detail-info p:contains(字数：)@text##字数：##\u0001",
      "intro": "@css:.intro@text",
      "tocUrl": "",
      "coverUrl": "@css:.book-img img@src"
    },
    "ruleToc": {
      "chapterList": "@css:.book-catalog.inner.mt20:has(h3) ul li",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href||https://spudnovel.com",
      "isVip": "false",
      "isPay": "false"
    },
    "ruleContent": {
      "title": "@css:.single-header .title@text",
      "content": "@css:.entry-content p@textNodes##\\\\s*",
      "nextContentUrl": "@css:nav.nav-single a[rel=next]@href"
    },
    "ruleReview": [],
    "ruleExplore": {
      "name": "@css:h3 a@text",
      "author": "@css:.book-info p.author:contains(作者：)@text##作者：##\u0001",
      "bookList": "@css:.section1.inner ul li",
      "wordCount": "@css:.book-info p.author span.author:first-child@text##\\\\d+",
      "intro": "@css:.book-info p[style='float: left;']@text",
      "coverUrl": "@css:.book-img img@src||https://spudnovel.com",
      "bookUrl": "@css:.book-img a@href||https://spudnovel.com"
    },
    "bookSourceType": 0,
    "bookSourceUrl": "https://spudnovel.com",
    "bookSourceName": "🌈土豆小说网",
    "header": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0",
    "searchUrl": "/site/list?q={{key}}",
    "bookSourceComment": "luckparool/2025.5.27",
    "exploreUrl": "[\n    {\n        \"title\": \"男生频道\",\n        \"url\": \" /site/list?sex=2&page={{page}}\"\n    },\n    {\n        \"title\": \"女生频道\",\n        \"url\": \" /site/list?sex=0&page={{page}}\"\n    },\n    {\n        \"title\": \"全本小说\",\n        \"url\": \" /site/list?finish=1&page={{page}}\"\n    },\n    {\n        \"title\": \"连载小说\",\n        \"url\": \" /site/list?finish=0&page={{page}}\"\n    },\n    {\n        \"title\": \"双男主\",\n        \"url\": \" /site/list?cid=475&page={{page}}\"\n    },\n    {\n        \"title\": \"双女主\",\n        \"url\": \" /site/list?cid=580&page={{page}}\"\n    },\n    {\n        \"title\": \"宫斗宅斗\",\n        \"url\": \" /site/list?cid=376&page={{page}}\"\n    },\n    {\n        \"title\": \"都市日常\",\n        \"url\": \" /site/list?cid=385&page={{page}}\"\n    },\n    {\n        \"title\": \"悬疑脑洞\",\n        \"url\": \" /site/list?cid=332&page={{page}}\"\n    },\n    {\n        \"title\": \"都市高武\",\n        \"url\": \" /site/list?cid=338&page={{page}}\"\n    },\n    {\n        \"title\": \"豪门总裁\",\n        \"url\": \" /site/list?cid=371&page={{page}}\"\n    },\n    {\n        \"title\": \"星光璀璨\",\n        \"url\": \" /site/list?cid=343&page={{page}}\"\n    },\n    {\n        \"title\": \"玄幻脑洞\",\n        \"url\": \" /site/list?cid=355&page={{page}}\"\n    },\n    {\n        \"title\": \"传统玄幻\",\n        \"url\": \" /site/list?cid=363&page={{page}}\"\n    },\n    {\n        \"title\": \"悬疑恋爱\",\n        \"url\": \" /site/list?cid=366&page={{page}}\"\n    },\n    {\n        \"title\": \"奇幻仙侠\",\n        \"url\": \" /site/list?cid=381&page={{page}}\"\n    },\n    {\n        \"title\": \"都市种田\",\n        \"url\": \" /site/list?cid=387&page={{page}}\"\n    },\n    {\n        \"title\": \"青春甜宠\",\n        \"url\": \" /site/list?cid=391&page={{page}}\"\n    },\n    {\n        \"title\": \"都市脑洞\",\n        \"url\": \" /site/list?cid=395&page={{page}}\"\n    },\n    {\n        \"title\": \"女频衍生\",\n        \"url\": \" /site/list?cid=397&page={{page}}\"\n    },\n    {\n        \"title\": \"科幻末世\",\n        \"url\": \" /site/list?cid=405&page={{page}}\"\n    },\n    {\n        \"title\": \"悬疑灵异\",\n        \"url\": \" /site/list?cid=410&page={{page}}\"\n    },\n    {\n        \"title\": \"古言脑洞\",\n        \"url\": \" /site/list?cid=413&page={{page}}\"\n    },\n    {\n        \"title\": \"年代\",\n        \"url\": \" /site/list?cid=414&page={{page}}\"\n    },\n    {\n        \"title\": \"玄幻言情\",\n        \"url\": \" /site/list?cid=418&page={{page}}\"\n    },\n    {\n        \"title\": \"现言脑洞\",\n        \"url\": \" /site/list?cid=421&page={{page}}\"\n    },\n    {\n        \"title\": \"都市修真\",\n        \"url\": \" /site/list?cid=428&page={{page}}\"\n    },\n    {\n        \"title\": \"医术\",\n        \"url\": \" /site/list?cid=430&page={{page}}\"\n    },\n    {\n        \"title\": \"游戏体育\",\n        \"url\": \" /site/list?cid=433&page={{page}}\"\n    },\n    {\n        \"title\": \"都市生活\",\n        \"url\": \" /site/list?cid=437&page={{page}}\"\n    },\n    {\n        \"title\": \"动漫衍生\",\n        \"url\": \" /site/list?cid=449&page={{page}}\"\n    },\n    {\n        \"title\": \"男频衍生\",\n        \"url\": \" /site/list?cid=454&page={{page}}\"\n    },\n    {\n        \"title\": \"快穿\",\n        \"url\": \" /site/list?cid=457&page={{page}}\"\n    },\n    {\n        \"title\": \"种田\",\n        \"url\": \" /site/list?cid=460&page={{page}}\"\n    },\n    {\n        \"title\": \"历史脑洞\",\n        \"url\": \" /site/list?cid=461&page={{page}}\"\n    },\n    {\n        \"title\": \"历史古代\",\n        \"url\": \" /site/list?cid=465&page={{page}}\"\n    },\n    {\n        \"title\": \"纯爱\",\n        \"url\": \" /site/list?cid=477&page={{page}}\"\n    },\n    {\n        \"title\": \"职场婚恋\",\n        \"url\": \" /site/list?cid=498&page={{page}}\"\n    },\n    {\n        \"title\": \"战神赘婿\",\n        \"url\": \" /site/list?cid=545&page={{page}}\"\n    },\n    {\n        \"title\": \"民国言情\",\n        \"url\": \" /site/list?cid=561&page={{page}}\"\n    },\n    {\n        \"title\": \"先婚后爱\",\n        \"url\": \" /site/list?cid=567&page={{page}}\"\n    }\n]",
    "loginUi": "",
    "loginUrl": "https://spudnovel.com/site/login",
    "bookSourceGroup": "页面简洁、干净、爽朗，所有小说免费",
    "enabled": true,
    "enabledExplore": true,
    "lastUpdateTime": "1748345070993"
  }
]