[
  {
    "bookSourceComment": "筛选 =\"GL，完结\";\n\n//❗️本源需要登录\n//❗️在网站新增【收藏夹】请点击【刷新收藏列表】后【刷新】发现\n//❗️注意除了更改值以外不要做其他更改\n//❗️请在 \" \" 里写你要筛选的内容，为空时就是不做筛选，每个用中文逗号分隔\n//❗️每次更改完都要【刷新】发现\n//例如：完结，GL，最后回复，悬疑\n\n/**\n * 可选的筛选：\n 1.篇幅：\n 短篇、中篇、长篇、大长篇、大纲\n \n 2. 进度：\n 连载、完结、暂停\n \n 3. 性向：\n BG、GB、BL、GL、混合性向、无CP、其他性向、性向未知\n \n 4. 推荐：\n 风格故事、人气剧情、长篇故事、创意故事、编推金麦穗\n \n 5. 排序：\n 最后回复、最新更新、总字数、均衡积分、均字数积分、最新创建、最多收藏、随机乱序\n \n 6、标签\n */",
    "bookSourceGroup": "③📖  论坛",
    "bookSourceName": "📖废文网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://xn--pxtr7m.com",
    "customOrder": 74,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\neval(String(source.bookSourceComment))\nvar fenlei = 筛选; // 可能为空或顺序不同\n\nvar length = { \"短篇\": \"867\", \"中篇\": \"868\", \"长篇\": \"869\", \"大长篇\": \"1665\", \"大纲\": \"870\" };\nvar progress = { \"连载\": \"871\", \"完结\": \"872\", \"暂停\": \"873\" };\nvar orientation = { \"BG\": \"876\", \"GB\": \"877\", \"BL\": \"874\", \"GL\": \"875\", \"混合性向\": \"878\", \"无CP\": \"879\", \"其他性向\": \"880\", \"性向未知\": \"976\" };\nvar recommendation = { \"风格故事\": \"1831\", \"人气剧情\": \"1832\", \"长篇故事\": \"1833\", \"创意故事\": \"1834\", \"编推金麦穗\": \"1835\" };\nvar sorting = { \"最后回复\": \"default\", \"最新更新\": \"last_ranked_at\", \"总字数\": \"total_char\", \"均衡积分\": \"jifen\", \"均字数积分\": \"weighted_jifen\", \"最新创建\": \"latest_created\", \"最多收藏\": \"collection_count\", \"随机乱序\": \"random\" };\nvar originality = { \"原创小说\": \"1\", \"同人小说\": \"2\" };\n\nvar other_tags={\"正剧\":\"27\",\"悲剧\":\"908\",\"喜剧\":\"909\",\"古代\":\"562\",\"民国\":\"639\",\"现代\":\"563\",\"未来\":\"71\",\"HE\":\"29\",\"BE\":\"315\",\"OE\":\"560\",\"小甜饼\":\"24\",\"轻松\":\"28\",\"治愈\":\"565\",\"H/C\":\"536\",\"爽文\":\"47\",\"狗血\":\"4\",\"致郁\":\"564\",\"虐文\":\"576\",\"惊悚\":\"566\",\"悬疑\":\"85\",\"雷文\":\"76\",\"谐趣\":\"1151\",\"文艺\":\"936\",\"意识流\":\"981\",\"浪漫主义\":\"983\",\"现实主义\":\"982\",\"魔幻现实\":\"1630\",\"黑色幽默\":\"925\",\"暗黑\":\"37\",\"第一人称\":\"932\",\"第二人称\":\"933\",\"第三人称\":\"934\",\"多重视角\":\"931\",\"女主视角\":\"928\",\"男主视角\":\"927\",\"主受视角\":\"469\",\"主攻视角\":\"468\",\"仙侠\":\"77\",\"反乌托邦\":\"1076\",\"女尊\":\"1075\",\"末世\":\"1074\",\"原始社会\":\"1062\",\"玄幻\":\"644\",\"灵异\":\"643\",\"科幻\":\"642\",\"奇幻\":\"641\",\"神话\":\"569\",\"赛博朋克\":\"21\",\"魔法世界\":\"63\",\"武侠\":\"58\",\"神怪志异\":\"42\",\"童话\":\"36\",\"星际\":\"35\",\"架空世界\":\"33\",\"幻想空间\":\"26\",\"蒸汽朋克\":\"22\",\"哨兵向导\":\"5\",\"动物世界\":\"66\",\"人鱼\":\"79\",\"兽人\":\"80\",\"拟人\":\"478\",\"血族\":\"984\",\"日系\":\"56\",\"欧美\":\"230\",\"韩流\":\"231\",\"东南亚\":\"232\",\"西亚\":\"233\",\"澳洲\":\"234\",\"非洲\":\"235\",\"拉美\":\"236\",\"西方\":\"640\",\"极地\":\"722\",\"网游\":\"62\",\"直播\":\"1184\",\"室友\":\"1063\",\"战争\":\"1060\",\"宫斗\":\"721\",\"刑侦\":\"597\",\"竞技体育\":\"161\",\"电竞\":\"160\",\"宅斗\":\"84\",\"娱乐圈\":\"6\",\"宫廷侯爵\":\"60\",\"田园乡村\":\"59\",\"商战\":\"55\",\"校园\":\"54\",\"职业文\":\"49\",\"网配\":\"34\",\"灵魂伴侣\":\"2250\",\"传奇\":\"67\",\"励志\":\"31\",\"日常\":\"53\",\"暧昧\":\"926\",\"暗恋\":\"935\",\"养成\":\"1186\",\"青梅竹马\":\"44\",\"宠物奇缘\":\"46\",\"乔装改扮\":\"977\",\"扮猪吃虎\":\"577\",\"前世今生\":\"48\",\"天作之合\":\"30\",\"相爱相杀\":\"978\",\"因缘邂逅\":\"43\",\"阴差阳错\":\"32\",\"破镜重圆\":\"2\",\"PTSD\":\"1059\",\"先婚后爱\":\"769\",\"宗教\":\"1150\",\"异能\":\"2255\",\"克系\":\"2249\",\"升级流\":\"2248\",\"机甲\":\"2247\",\"规则怪谈\":\"2236\",\"推理\":\"1760\",\"民俗\":\"1585\",\"无限流\":\"1310\",\"快穿\":\"1309\",\"论坛体\":\"1185\",\"性转\":\"20\",\"公路文\":\"1064\",\"灵魂转换\":\"1061\",\"权谋\":\"980\",\"单元剧\":\"770\",\"基建\":\"61\",\"美食\":\"45\",\"重生\":\"41\",\"穿越\":\"40\",\"人工智能\":\"39\",\"系统\":\"38\",\"忠犬\":\"81\",\"女王\":\"82\",\"病娇\":\"906\",\"自恋\":\"979\",\"强强\":\"1\",\"美强\":\"23\",\"强弱\":\"25\",\"弱强\":\"73\",\"弱弱\":\"567\",\"年上\":\"570\",\"年下\":\"571\",\"师生\":\"572\",\"上下级\":\"573\",\"下克上\":\"772\",\"水仙\":\"1666\",\"1v1\":\"3\",\"互攻\":\"70\",\"受受\":\"72\",\"直掰弯\":\"78\",\"受转攻\":\"574\",\"攻转受\":\"575\",\"无差\":\"719\",\"受宠攻\":\"1072\",\"攻宠受\":\"1073\",\"全年龄\":\"720\",\"清水\":\"86\",\"布袋戏\":\"88\",\"歌剧\":\"90\",\"综漫\":\"479\",\"Fate系列\":\"549\",\"原作向\":\"715\",\"paro\":\"716\",\"AU\":\"717\",\"全员向\":\"718\",\"高达\":\"1325\",\"授权翻译\":\"467\",\"授权转载\":\"561\",\"法语\":\"1077\",\"德语\":\"1078\",\"日语\":\"1079\",\"西语\":\"1080\",\"英语\":\"1081\",\"粤语\":\"1631\",\"第五期征集\":\"1668\",\"第六期征集\":\"1836\",\"第七期征集\":\"1988\",\"第八期征集\":\"2109\",\"第九期征集\":\"2286\"}\n\n// 解析 fenlei 变量\nvar fenleiItems = fenlei ? fenlei.split(\"，\").map(function (item) { return item.trim(); }) : [];\n\n// 获取 progress, length, orientation, recommendation, sorting, other_tags 的值\nvar values = {};\nvar otherTagValues = [];\nfor (var i = 0; i < fenleiItems.length; i++) {\n    var item = fenleiItems[i];\n    if (progress[item]) values.progress = progress[item];\n    else if (length[item]) values.length = length[item];\n    else if (orientation[item]) values.orientation = orientation[item];\n    else if (recommendation[item]) values.recommendation = recommendation[item];\n    else if (sorting[item]) values.sorting = sorting[item];\n    else if (other_tags[item]) otherTagValues.push(other_tags[item]); // 支持 other_tags\n}\n\n// 生成 withTag 部分\nvar withTag = [values.progress, values.length, values.orientation, values.recommendation].concat(otherTagValues).filter(Boolean).join(\"-\");\n\n// 一行的个数\nvar defaultNumPerRow = 0;\nvar flexBasisMap = { 1: 1, 2: 0.4, 3: 0.25, 4: 0.2, 5: 0.15, 7: 0.1, 10: 0.05 };\nvar flexBasis = defaultNumPerRow === 0 ? undefined : flexBasisMap[defaultNumPerRow] || 1;\n\n// 生成 style 对象\nvar style = { layout_flexGrow: 1 };\nif (flexBasis !== undefined) {\n    style.layout_flexBasisPercent = flexBasis;\n}\n\n// 生成结果数组\nvar result = [{\"title\":\"我要签到\",\"url\":\"/qiandao\",\"style\":{\"layout_flexGrow\":1}}];\nif (fenlei) {\n    result.push({\n        title: \"当前筛选为【\" + fenlei + \"】\",\n        url: \"\",\n        style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    });\n}\n\nfor (var key in originality) {\n    if (originality.hasOwnProperty(key)) {\n        var inChannel = originality[key];\n        var url = \"/books?ordered=\" + (values.sorting || \"default\") + \"&withBianyuan=include_bianyuan&inChannel=\" + inChannel + \"&page={{page}}&withBianyuan=include_bianyuan\";\n        if (withTag) {\n            url += \"&withTag=\" + withTag; // 添加 withTag 部分\n        }\n        result.push({\n            title: key,\n            url: url,\n            style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n        });\n        for (var tagKey in other_tags) {\n            if (other_tags.hasOwnProperty(tagKey)) {\n                var tagValue = other_tags[tagKey];\n                var finalWithTag = tagValue + (withTag ? \"-\" + withTag : \"\");\n                result.push({\n                    title: tagKey,\n                    url: \"/books?withTag=\" + finalWithTag + \"&page={{page}}&ordered=\" + (values.sorting || \"default\") + \"&withBianyuan=include_bianyuan&inChannel=\" + inChannel,\n                    style: style // 使用动态生成的 style 对象\n                });\n            }\n        }\n    }\n}\n\n// 收藏功能\n收藏 = String(java.ajax(\"https://xn--pxtr7m.com\")).match(/<a href=\"([^\"]+)\">收藏/);\nif(收藏){\n\t收藏url = 收藏[1];\nlet sss=source.getVariable()||\"\";\n收藏页 = sss==\"\"? String(java.ajax(收藏url)):sss;\nJ = org.jsoup.Jsoup.parse(收藏页).select(\".nav.nav-tabs\");\nsource.setVariable(J)\nJ.select(\"li a\").forEach(x=>{\n\tif(x.text()!=\"\"&&x.text()!=\"全部标记已读\"){\n\t      result.unshift({\"title\":x.text(),\"url\":x.attr(\"href\")+\"&page={{page}}\",\"style\":{\"layout_flexGrow\":1}})\n\t }\n\t});\n\tresult.unshift({\"title\":\"刷新收藏列表\",\"url\":`{{if(page==1) {source.setVariable('');java.longToast(\"请❗️【刷新】❗️发现\")};'http://127.0.0.1/'+page}}`,\"style\":{\"layout_flexGrow\":1,layout_flexBasisPercent: 1}})\n}\n\nJSON.stringify(result);\n",
    "lastUpdateTime": "1744033707680",
    "loginCheckJs": "if(!cache.getFile(\"feiwentime\")){\n\tJ = String(java.getStrResponse().body());\n\tJ = org.jsoup.Jsoup.parse(J);\n\tif(String(J.select(\":contains(text)\").text())==\"我要签到\"){\n\t    cache.putFile(\"feiwentime\", true , 23200);\n\t    url = \"https://xn--pxtr7m.com/qiandao\";\n\t    /连续签到/.test(java.ajax(url))?java.toast(\"废文签到成功\"):java.toast(\"废文未登录，签到失败\");\n\t}else{\n\t\t/login/i.test(result)?java.toast(\"废文未登录，签到失败\"):\"\"\n\t\t}\n\t}\nresult;",
    "loginUi": "",
    "loginUrl": "https://xn--pxtr7m.com",
    "respondTime": 182188,
    "ruleBookInfo": {
      "coverUrl": "",
      "init": "",
      "intro": "class.alert-warning@html&&class.h5.0@html&&class.grayout smaller-20.0@html&&class.main-text.0@html&&class.main-text text-left no-selection@html##发表于##⌚️发表于",
      "kind": "class.article-body@class.h5@tag.a@text&&class.bianyuan-tag@text##^限##🍖限",
      "lastChapter": "class.article-body@tag.a.-1@text##最新章节|《|》",
      "name": "",
      "wordCount": "class.smaller-20.2@text##(.*?)\\/(.*)##$1"
    },
    "ruleContent": {
      "content": "<js>\nif(/posts/.test(baseUrl)){\nresult = java.getString(\"@class.main-text.0@span@p@html\");\na=java.getString('@@class.warning-tag.0@html');\nb=java.getString('@css:[class=\"text-left grayout\"]@html');\nc=java.getString('//strong[@class=\"h5\"]/text()');\nif((!a.match(/<h6/))&&(a!='')&&(!a.match(/>我要签到<\\/a/))){\na='作者有话说：\\n'+a+'\\n————————————\\n'\n}else{a=''}\nif(b!=''){\nb='作者有话说：\\n'+b\n}\nresult='【'+c+'】\\n'+a+result+b\n}else{\n\tresult = java.getString(\"@css:.col-xs-12 p,.article-title>.h5,.vertical-middle,.majia,.grayout.smaller-30,.grayout.smaller-20,.main-text span[id^=full],.post-reply,*[id^=postcomment]@html\");\n\tresult=String(result)\n\t         .replace(/<div class=\"h5\">\\n*([^\\n]+)\\n*<\\/div>/,'📖 $1 📖')\n\t         .replace(/<span class=\"(?:majia|vertical-middle)\">([^<]+)<\\/span>/g,'👤$1')\n\t         .replace(/<(?:div|span) class=\"grayout smaller-[32]0\">\\n*([^\\n]+)\\n*<\\/(?:div|span)>/g,'🕘$1')\n\t         .replace(/<div class=\"(?:post-reply grayout|smaller-20)\"(?: id=\"postcomment\\d+\")*>\\n*([^\\n*]+)\\n*<\\/div>/g,'【$1】')\n\t         \n\t}\n</js>\n##👤##<br>&lrm;<br>👤",
      "imageStyle": "",
      "nextContentUrl": "",
      "replaceRegex": "##\\.*（本帖非边限.*?引入“边限”讨论。）|🕘只看该用户|>>本层全部回帖|>>所有相关讨论|\\n(?=🕘)|注：点击是延时统计.*",
      "title": ""
    },
    "ruleExplore": {
      "author": "class.col-xs-12.0@tag.a.-1@text||class.pull-right.0@text",
      "bookList": "class.flash-message||class.panel-body@article",
      "bookUrl": "tag.a.0@href",
      "intro": "class.smaller-5.1@text",
      "kind": "class.badge@text&&class.pull-right!0@a@text##^限##🍖限",
      "lastChapter": "class.smaller-20.0@text",
      "name": "tag.a.0@text||text",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": "class.pull-right@text",
      "bookList": "class.panel-body@article",
      "bookUrl": "tag.a.0@href",
      "checkKeyWord": "",
      "kind": "class.badge@text",
      "name": "tag.a.0@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nlist=[];\nif(/profile/.test(baseUrl)){\n\tresult = java.getElements(\"@class.table@tbody@tr\").toArray();\n\tfor(i in result){\n\t\tjava.setContent(result[i]);\n\t\tindex=Number(i)+1;\txian=java.getString(\"@@tag.span@text||tag.span@class##.*限.*|.*sign.*##•🍗\")\n\t\ttext=java.getString(\"@@tag.a.0@text\");\n\t\thref=java.getString(\"@@tag.a.0@href\");\n\t\tword=java.getString(\"@@tag.th.2@text\");\n\t\ttime=java.getString(\"@@tag.th.6@text\");\n\t\tother=java.getString(\"@@tag.a.1@text\")\n\t\t\n\tlist.push({\n\t\t  text:index+\"  | \"+text+xian,\n\t\t  href:href,\n\t\t  intro:word+\"字 \"+time+\"  \"+other\n\t\t})\n\t}\n}else{\nallpage =\tString(java.getString(\"@class.pagination@li.-2@a@href\")).match(/page=(\\d+)/)[1];\n\tfor(i=1;i<=allpage;i++){\n\t\tlist.push({\n\t\t\ttext: \"第\"+i+\"页\",\n\t\t\thref: baseUrl+\"?page=\"+i\n\t\t\t})\t\n\t\t}\n\t}\nlist\n</js>",
      "chapterName": "text",
      "chapterUrl": "href",
      "isVip": "",
      "updateTime": "intro"
    },
    "searchUrl": "https://xn--pxtr7m.com/search_thread?search={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁25.04.06修复\n//首发论坛：taoba.cf",
    "bookSourceGroup": "",
    "bookSourceName": "源社区出品-新笔趣(vvss.net)",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.vvss.net/",
    "bookUrlPattern": "http?://www.vvss.net/\\d+_\\d+/",
    "customOrder": 445,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\nsort = [];\npush = (title, url) => sort.push({ title, url, style: { layout_flexGrow: 1, layout_flexBasisPercent: 0.25 } });\n\n[\n  [\"穿越小说\", \"xclass/chuanyue/{{page}}/\"],\n  [\"言情小说\", \"xclass/yanqing/{{page}}/\"],\n  [\"现代都市\", \"xclass/dushi/{{page}}/\"],\n  [\"耽美百合\", \"xclass/baihe/{{page}}/\"],\n  [\"历史架空\", \"xclass/lishi/{{page}}/\"],\n  [\"美文同人\", \"xclass/tongren/{{page}}/\"],\n  [\"武侠仙侠\", \"xclass/wuxia/{{page}}/\"],\n  [\"玄幻小说\", \"xclass/xuanhuan/{{page}}/\"],\n  [\"惊悚悬疑\", \"xclass/jingsong/{{page}}/\"],\n  [\"科幻小说\", \"xclass/kehuan/{{page}}/\"],\n  [\"网游竞技\", \"xclass/wangyou/{{page}}/\"],\n  [\"管理哲学\", \"xclass/zhexue/{{page}}/\"],\n  [\"学习资料\", \"xclass/ziliao/{{page}}/\"],\n  [\"完本小说\", \"quanben/xclass/{{page}}/\"]\n].map(([title, url]) => push(title, url));\n\nJSON.stringify(sort);\n\n</js>",
    "header": "@js:\nJSON.stringify({\n\t\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\",\n\"accept\":\"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n\"Accept-Language\": \"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\"\n})",
    "lastUpdateTime": "1743967202391",
    "respondTime": 180232,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "downloadUrls": ".bookmore a.-1@href",
      "intro": "☁️ 更新：{{@@[property$=update_time]@content##\\s.*}}\n👻 简介：{{@@.bookintro@textNodes##.*专业无弹窗.*|.*无弹窗阅读.*}}##(^|[。！？……]+[”」）】]?)##$1<br>",
      "kind": "[property~=category|status|update_time]@content&&.blue.1@text##\\s.*",
      "lastChapter": "{{@@[property$=chapter_name]@content}}･{{@@[property$=update_time]@content##\\s.*}}\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(正文|VIP章节|最新章节)?(\\s+|_)|[\\(\\{（｛【].*[求更谢乐发推票盟补加字Kk\\/].*[\\)\\}）｝】]/g,'')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "name": "[property$=book_name]@content",
      "wordCount": ".blue.0@text"
    },
    "ruleContent": {
      "content": "#rtext p@html",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {
      "author": ".author.0@text",
      "bookList": ".p10",
      "bookUrl": "a.0@href",
      "coverUrl": "a.0@href\n@js:\nvar id=result.match(/(\\d+)\\/?$/)[1];\nvar iid=parseInt(id/1000);\n`http://img.vvss.net/${iid}/${id}/${id}s.jpg`",
      "intro": ".update@textNodes",
      "kind": ".author.2@text",
      "lastChapter": ".cat a@text\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(正文|VIP章节|最新章节)?(\\s+|_)|[\\(\\{（｛【].*[求更谢乐发推票盟补加字Kk\\/].*[\\)\\}）｝】]/g,'')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "name": "h4@text",
      "wordCount": ".author.1@text##字数："
    },
    "ruleSearch": {
      "author": ".author.0@text",
      "bookList": ".bookbox",
      "bookUrl": "a.0@href",
      "checkKeyWord": "",
      "coverUrl": "a.0@href\n@js:\nvar id=result.match(/(\\d+)\\/?$/)[1];\nvar iid=parseInt(id/1000);\n`http://img.vvss.net/${iid}/${id}/${id}s.jpg`",
      "intro": ".update@textNodes",
      "kind": ".author.1@text",
      "lastChapter": ".cat a@text\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(正文|VIP章节|最新章节)?(\\s+|_)|[\\(\\{（｛【].*[求更谢乐发推票盟补加字Kk\\/].*[\\)\\}）｝】]/g,'')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "name": "h4@text"
    },
    "ruleToc": {
      "chapterList": "#list-chapterAll dd a",
      "chapterName": "text\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(正文|VIP章节|最新章节)?(\\s+|_)|[\\(\\{（｛【].*[求更谢乐发推票盟补加字Kk\\/].*[\\)\\}）｝】]/g,'')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "chapterUrl": "href"
    },
    "searchUrl": "<js>\ncookie.removeCookie(source.key)\nurl=source.key;\na=java.webView(null,url,null);\n//java.log(a)\nb=a.match(/action=\\\"([^\"]*)\\\"/)[1];\nc=`,{\"method\": \"post\",\"body\":\"searchkey=${key}\"}`;\nb+=c\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "https://www.wenxfbonline.cfd/\nhttps://m.drshunse.cfd/\nhttps://fangzzhongxs.buzz/\nhttps://18jins.com/\nhttps://sxztt.com/\nhttps://a.cdhycp.xyz/\n    发布页\ntheajhwd.top\nhttps://m.18jinbos.top\nms.fangzzhongxs.top\n\nhttps://m3n4o5p6.luluw011.cc/label/index.html\n藏精阁 https://m3n4o5p6.cjg223.cc/label/index.html\n污污虾 https://m3n4o5p6.wuwuxia45.cc/label/index.html\n小黄书 https://m3n4o5p6.xhs015.cc/label/index.html\n    发布页\nhttps://yh4dj8.ahlxs-shu.buzz/\n\n,push(\"〖标题〗\",null,1,1),arList=[[\"首页\"],[\"\",\"\"]],arList.map(([s,t],p)=>{url=`网址/arttype/${t}-{{page}}.html`,push(s,url,1,.15)})",
    "bookSourceGroup": "🎖禁",
    "bookSourceName": "风月文[单篇,断行拼接]〖𝕄𝕦〗",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.drshunse.cfd/",
    "customOrder": 39,
    "enabled": false,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nsort=[],push=((s,t,p,u)=>sort.push({title:s,url:t,style:{layout_flexGrow:p,layout_flexBasisPercent:u}}))\n\npush(\"〖wenxfbonline.cfd〗\",null,1,1),arList=[[\"首页\"],[\"武侠\",\"20\"],[\"伦理\",\"21\"],[\"偷拍\",\"22\"],[\"仙侠\",\"23\"],[\"熟女\",\"24\"],[\"体验\",\"26\"],[\"乱伦\",\"1\"],[\"妻女\",\"3\"],[\"都市\",\"4\"],[\"校园\",\"5\"],[\"\"],[\"\"],[\"\"],[\"\"]],arList.map(([s,t],p)=>{url=`https://www.wenxfbonline.cfd/arttype/${t}-{{page}}.html`,push(s,url,1,.15)})\n,\npush(\"〖fangzzhongxs.buzz〗\",null,1,1),arList=[[\"首页\"],[\"现代\",\"1\"],[\"情色\",\"2\"],[\"校园\",\"3\"],[\"乱伦\",\"4\"],[\"武侠\",\"5\"],[\"淫妻\",\"20\"],[\"\"],[\"\"],[\"\"]],arList.map(([s,t],p)=>{url=`https://fangzzhongxs.buzz/index.php/art/type/id/${t}-{{page}}.html`,push(s,url,1,.15)}),\npush(\"〖drshunse.cfd〗\",null,1,1),arList=[[\"首页\"],[\"武侠\",\"20\"],[\"伦理\",\"21\"],[\"偷拍\",\"22\"],[\"仙侠\",\"23\"],[\"熟女\",\"24\"],[\"乱伦\",\"1\"],[\"妻女\",\"3\"],[\"都市\",\"4\"],[\"校园\",\"5\"]],arList.map(([s,t],p)=>{url=`https://m.drshunse.cfd/arttype/${t}-{{page}}.html`,push(s,url,1,.15)}),push(\"〖a.cdhycp.xyz〗\",null,1,1),arList.map(([s,t],p)=>{url=`https://a.cdhycp.xyz/arttype/${t}-{{page}}.html`,push(s,url,1,.15)}),\npush(\"〖18jins.com〗\",null,1,1),arList=[[\"首页\"],[\"人妻\",\"30\"],[\"都市\",\"20\"],[\"校园\",\"21\"],[\"真实\",\"22\"],[\"武侠\",\"23\"],[\"乱伦\",\"24\"],[\"职场\",\"25\"],[\"经验\",\"26\"],[\"暴力\",\"27\"],[\"幻想\",\"28\"],[\"明星\",\"29\"],[\"\"],[\"\"],[\"\"]],arList.map(([s,t],p)=>{url=`https://18jins.com/type/${t}-{{page}}.html`,push(s,url,1,.15)}),push(\"〖m3n4o5p6.luluw011.cc〗\",null,1,1),arList.map(([s,t],p)=>{url=`https://m3n4o5p6.luluw011.cc/arttype/${t}-{{page}}.html`,push(s,url,1,.15)}),\n\npush(\"『m3n4o5p6.cjg223.cc』\",null,1,1),arList.map(([s,t],p)=>{url=`https://m3n4o5p6.cjg223.cc/arttype/${t}-{{page}}.html`,push(s,url,1,.15)}),push(\"『m3n4o5p6.wuwuxia45.cc』\",null,1,1),arList.map(([s,t],p)=>{url=`https://m3n4o5p6.wuwuxia45.cc/arttype/${t}-{{page}}.html`,push(s,url,1,.15)}),push(\"『m3n4o5p6.xhs015.cc』\",null,1,1),arList.map(([s,t],p)=>{url=`https://m3n4o5p6.xhs015.cc/arttype/${t}-{{page}}.html`,push(s,url,1,.15)})\n\nJSON.stringify(sort);",
    "lastUpdateTime": "1744020853426",
    "loginUi": "",
    "respondTime": 3883,
    "ruleBookInfo": [],
    "ruleContent": {
      "content": ".entry@html||.panel-body@p@html",
      "replaceRegex": "@js:\nm=[];n=[];\nfunction x(a,b){m.push(a);n.push(b)}\nx(/{{chapter.title}}/g,\"\");\nx(/除非注明，文章均由本站整理发布，欢迎转载。/g,\"\");\nx(/(\\s+)/g,\"♾️♾️\");\nx(/([，\\u4e00-\\u9fa5])♾️♾️([，\\u4e00-\\u9fa5])/g,\"$1$2\");\nx(/♾️♾️/g,\"\\n\");\nx(/([^！？。]{10}[。？！～][」”’]?)/g,\"$1\\n\");\nfor(i in n){result=result.replace(m[i],n[i])}",
      "title": ""
    },
    "ruleExplore": {
      "bookList": ""
    },
    "ruleSearch": {
      "author": "## ##大魔王###",
      "bookList": ".title a||.list-group a",
      "bookUrl": "href",
      "checkKeyWord": "",
      "name": "text"
    },
    "ruleToc": {
      "chapterList": "html",
      "chapterName": "{{book.name}}"
    },
    "searchUrl": "/artsearch/-------.html,{\"charset\":\"UTF-8\",\"method\":\"post\",\"body\":\"wd={{key}}\"}",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁25.04.05\n//首发论坛：taoba.cf",
    "bookSourceGroup": "",
    "bookSourceName": "源社区出品-百家文学",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.baijiawenxue.com/",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nvar result = [];\njava.toast(\"🔥正在刷新列表,请稍等！\");\nvar push = (title, url, size) => result.push({\n    \"title\": title,\n    \"url\": url,\n    \"style\": {\n        \"layout_flexGrow\": 1,\n        \"layout_flexBasisPercent\": size\n    }\n});\n\nvar baseUrl = \"http://www.baijiawenxue.com/\";\nvar tag = java.ajax(baseUrl);\nif (tag) {\n    var doc = org.jsoup.Jsoup.parse(tag);\n    var a = doc.select(\".nav ul li a\");\n    push(\"🔥分类小说🔥\", null, 1);\n    var count = 0; \n    for (var i in a) {\n        if (count === 0) {\n            count++;\n            continue; \n        }\n        var title = a[i].text();\n        var url = a[i].attr(\"href\");\n        var size = 0.25;\n        title = String(title).replace(/\\s/g, \"\");\n        url = String(url) + `{{page}}.html`;\n        push(title, url, size);\n        count++;\n    }\n} else {\n    java.toast(\"🤔列表刷新失败！！！\");\n}\nJSON.stringify(result);",
    "lastUpdateTime": "1743967047243",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "[property=\"og:description\"]@content",
      "kind": "[property=\"og:novel:category\"]@content",
      "name": "[property=\"og:title\"]@content"
    },
    "ruleContent": {
      "content": "#content@html##。\\<a.*\\>.*##。",
      "nextContentUrl": "text.下一页@href",
      "replaceRegex": "##(?<=[\\u4e00-\\u9fa5]|[，、])[\\n]|.*第\\d\\/\\d+页\\)"
    },
    "ruleExplore": {
      "author": ".s4@text",
      "bookList": ".novelslist2@ul li!0",
      "bookUrl": "a@href",
      "kind": ".s1@text&&.s5@text&&.s6@text##\\[|\\]",
      "lastChapter": ".s3@text",
      "name": ".s2@a@text"
    },
    "ruleSearch": {
      "author": ".even.1@text",
      "bookList": "tr!0",
      "bookUrl": "a@href",
      "checkKeyWord": "http://www.baijiawenxue.com/chapter/207231459/",
      "kind": ".odd.1@text",
      "lastChapter": ".odd.0@text",
      "name": ".even.0@text"
    },
    "ruleToc": {
      "chapterList": "<js>\na=result.replace(/[\\s\\S]*\\<dt[\\s\\S]*\\<\\/dt\\>/,'');\na\n</js>dd a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "http://www.baijiawenxue.com/search/,{\n  \"method\": \"POST\",\n  \"body\": \"keyword={{key}}&code={{java.getVerificationCode('http://www.baijiawenxue.com/searchcode.php?t='+Math.floor(Date.now()))}}\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "// Error: 搜索失效\n\nhttps://github.com/doll-houhuayuan/latest_address/blob/master/index.md\n\nhttps://houhuayuan.vip/\nhttps://zhaoze.pro/",
    "bookSourceGroup": "🎖禁",
    "bookSourceName": "蔷薇&黑沼泽〖𝕄𝕦〗",
    "bookSourceType": 0,
    "bookSourceUrl": "https://zhaoze.pro/",
    "bookUrlPattern": "https://zhaoze.+",
    "customOrder": 0,
    "enabled": false,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:var result=[],push=(a,t,e)=>result.push({title:a,url:t,style:{layout_flexGrow:1,layout_flexBasisPercent:e}});java.toast(\"🔥动态获取发现中……\");var top=java.ajax(\"https://houhuayuan.vip/\"),tag=java.ajax(\"https://zhaoze.pro/\");if(top&&tag){var a=org.jsoup.Jsoup.parse(top).select(\".wp-tag-cloud a\"),b=org.jsoup.Jsoup.parse(tag).select(\".wp-tag-cloud a\");for(var i in push(\"々 蔷薇后花园-变身小说原创,翻译,转载 々\",null,1),a){var title=a[i].text(),url=a[i].attr(\"href\"),size=null;push(title,url=String(url).replace(/$/,\"page/{{page}}/\"),size)}for(var i in push(\"々 黑沼泽俱乐部-调教小说原创,翻译,转载 々\",null,1),b){title=b[i].text(),url=b[i].attr(\"href\"),size=null;push(title,url=String(url).replace(/$/,\"page/{{page}}/\"),size)}}else java.toast(\"🚫发现获取失败……\");JSON.stringify(result);",
    "header": "{\n  \"User-Agent\": \"Mozilla/5.0 (Linux; Android 10; M2007J22C Build/QP1A.190711.020; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/83.0.4103.101 Mobile Safari/537.36\",\"Accept-Language\":\"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\"\n}",
    "lastUpdateTime": "1744020373558",
    "loginCheckJs": "",
    "loginUrl": "",
    "respondTime": 65074,
    "ruleBookInfo": [],
    "ruleContent": {
      "content": ".entry-content.0@p@textNodes",
      "replaceRegex": "##目录|.+ – 黑沼泽俱乐部|站长：审核发文真的很累很无聊的啊|求你们多点几下广告|给我每天继续肝下去的动力好不好？"
    },
    "ruleExplore": {
      "bookList": ""
    },
    "ruleSearch": {
      "author": ".author@a@text",
      "bookList": "#main article",
      "bookUrl": "a@href",
      "checkKeyWord": "萝莉",
      "kind": ".cat-links a@text&&.tags-links a@text##\\n",
      "name": "h2@text",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": ".serieslist-li||h1",
      "chapterName": "a@text||text",
      "chapterUrl": "a@href"
    },
    "searchUrl": "?s={{key}}",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "//2024.11.12◎GEd520◎",
    "bookSourceGroup": "写源",
    "bookSourceName": "源社区出品-【🧾夜伴书屋】",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.ybsws.com/",
    "customOrder": 450,
    "enabled": false,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部🏷分类\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n{\"title\":\"奇幻·玄幻\",\"url\":\"/list/qihuan{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"科幻·游戏\",\"url\":\"/list/kehuan{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"武侠·仙侠\",\"url\":\"/list/wuxia{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"女生·言情\",\"url\":\"/list/yanqing{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"都市·娱乐\",\"url\":\"/list/dushi{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"历史·军事\",\"url\":\"/list/lishi{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"悬疑·灵异\",\"url\":\"/list/xuanyi{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"耽美·纯爱\",\"url\":\"/list/chunai{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"轻小说\",\"url\":\"/list/lightnovel{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},]",
    "header": "{'User-Agent':'Mozilla/5.0 (Linux; Android 14; V2304A; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/123.0.6312.118 Mobile Safari/537.36',\n\"cookie\":\"1\"}",
    "lastUpdateTime": "1744003226800",
    "respondTime": 6660,
    "ruleBookInfo": {
      "author": ".row.1@a.0@text",
      "coverUrl": "img.0@src",
      "downloadUrls": "",
      "intro": "&nbsp;\n📖 书名：{{@@h1@a.0@text}}\n👤 作者：{{@@.row.1@a.0@text}}\n🕰 最新：{{@@.row.1@a.1@text}}\n🏷 简介：{{@@.book-detail@text}}",
      "lastChapter": ".row.1@a.1@text",
      "tocUrl": "",
      "wordCount": ".row.1@div.2@text##状态："
    },
    "ruleContent": {
      "content": "#cont-body@html||.cont-body@html",
      "nextContentUrl": "ul@li@a@href"
    },
    "ruleExplore": {
      "bookList": ".row@.media",
      "bookUrl": "h4@a@href",
      "coverUrl": "img@src",
      "intro": ".media-info@text",
      "name": "h4@a@text"
    },
    "ruleSearch": {
      "author": "td.1@text",
      "bookList": ".table@tbody@tr",
      "bookUrl": "a@href",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "name": ".orange@text##\\《|\\》"
    },
    "ruleToc": {
      "chapterList": ".row@.col-md-6",
      "chapterName": "a@text",
      "chapterUrl": "a@href"
    },
    "searchUrl": "/plus/search.php?q={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://v1.shushan.xyz:39002\nhttp://v2.shusan.xyz:50001\n*/\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增书山书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和书山书架栏目\n2.预计新增阅读记录，阅读过的书籍可在书山书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增书山书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceName": "📚书山融合2.1(完全版)",
    "bookSourceType": 0,
    "bookSourceUrl": "http://v1.shushan.xyz:39002",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"书山书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1743872458578",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录书山账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚书山书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','书山书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录书山小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('http://fb.shushan.vip:9999/', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\njava.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录书山账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄书山账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('书山融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t\nif ('{{$.source}}'=='番茄'){\n\t'番茄:'+fq_last();\n\t} else if ('{{$.source}}'=='七猫'){\n\t'七猫:'+qm_last();\n\t} else {\n\t\t'{{$.source}}'\n\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\ntry {\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet url = `${base_url}/get_user_bookshelf?book_id=${book_detail.book_id}&source=${book_detail.source}`;\n//java.toast(url);\nlet getbook =JSON.parse(java.ajax(url)).books;\nlet is_bookshelf;\nlet data = [];\nif (book.order < 0 && !getbook.length) {\n\t// 在阅读书架，不在书山书架，同步到书山书架\n    book_detail.is_bookshelf = true;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n} else if ( book.order < 0 && getbook.length) {\n\t// 在阅读书架，在书山书架\n\t  var books=getbook[0];\n    books.is_bookshelf = true;\n    data.push(books);\n} else if (book.order >= 0 && !getbook.length) {\n\t// 不在阅读书架，不在书山书架，留下浏览记录\n\t   book_detail.is_bookshelf = false;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n\t} else if (book.order >= 0 && getbook.length) {\n\t// 不在阅读书架，在书山书架，书山书架下架\n\t   var books=getbook[0];\n    books.is_bookshelf = false;\n    //data.push(books);\n\t}\nif (data.length) {\n\tvar option = {\n\"method\": \"POST\",\n\"body\": JSON.stringify(data),\n};\n    java.ajax(`${base_url}/push_user_bookshelf,`+JSON.stringify(option));\n    }\n\t} catch (e) {};\n\tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet device;\nlet device_type;\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n\nlet content_url = `${item_id}书山融合2.1${tab}书山融合2.1${title}书山融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "//By情无羁(yesui.me)25.04.02,如果用不了就去设置清理webview数据\n//首发论坛：ysqbbs.com,发布页：taoba.cf",
    "bookSourceGroup": "",
    "bookSourceName": "盗版uaa(全程免梯)",
    "bookSourceType": 0,
    "bookSourceUrl": "🤔这重要吗🤔",
    "customOrder": 106,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nvar sort = [];\nvar push = function(title, url, type1, type2) {\n    sort.push({\n        title: title,\n        url: url,\n        style: {\n            layout_flexGrow: type1,\n            layout_flexBasisPercent: type2\n        }\n    });\n};\n\npush(\"🔖分类🔖\", null, 1, 1);\n[\"都市激情\", \"都市\", \"家庭乱伦\", \"奇幻\", \"同人\", \"校园春色\", \"东方玄幻\", \"乱伦\", \"穿越重生\", \"校园\", \"同人改编\", \"系统异能\"].forEach(function(item, index) {\n    var url =getUrl()+\"/category/\" + [3, 18, 2, 19, 23, 1, 7, 20, 6, 21, 4, 5][index] + \"/{{page-1}}\";\n    push(item, url, 1, 0.25);\n});\n\npush(\"🏷标签🏷\", null, 1, 1);\n[\"调教\", \"剧情\", \"熟女\", \"人妻\", \"制服\", \"后宫\", \"丝袜\", \"NTR\", \"榨精\", \"爽文\", \"性奴\", \"凌辱\"].forEach(function(item, index) {\n    var url = getUrl()+\"/tag/\" + [7, 2, 6, 9, 53, 14, 39, 56, 67, 15, 29, 58][index] + \"/{{page-1}}\";\n    push(item, url, 1, 0.25);\n});\n\npush(\"🔖排行榜🔖\", null, 1, 1);\n[\"人气排行\", \"收藏排行\", \"热门全本\", \"肉量排行\", \"评分排行\", \"最新小说\"].forEach(function(item, index) {\n    var url =getUrl()+ \"/top/\" + [\"hot\", \"collect\", \"wanben\", \"pornrate\", \"score\", \"new\"][index] + \"/{{page==1?'':'index_'+page+'.html'}}\";\n    push(item, url, 1, 0.25);\n});\nJSON.stringify(sort);",
    "jsLib": "function getUrl() {\n    return \"https://www.aahhqq.com\";\n}",
    "lastUpdateTime": "1743665060852",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": ".authors@text",
      "coverUrl": "",
      "init": "<js>\njava.ajax(java.hexDecodeToString(result))\n</js>",
      "intro": "<br>\n简介：{{@@.book-desc@textNodes}}\n标签🏷️：{{@@.book-desc@a@text##\\s##&}}",
      "kind": ".categories@dd@text",
      "lastChapter": ".new@dd@a@text",
      "name": ".txt@h1@text",
      "tocUrl": "",
      "wordCount": ".wordcount@dd@text"
    },
    "ruleContent": {
      "content": "<js>\n(()=>{var ᢜˈ̛͚̱̞̏͆̌̔͘͘='ㆶہ̶̢̪̻͖͆̓̽ͦ͜͟'&'ᠧˈ̨͍̳̹̂̃ͣ͟͢͡',ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠=-~'ꓼʹ̡͓̱̭͒̀ͨͨ͢͝',ᠣꓹ̶̡͉̩̣̂ͥ͑́͝=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠-~'ەꓽͧ̈́̃',ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᠣʹ̨̡̹͖͕̅͌́́͞=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕*ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ˌꜗ̶̱̹̒ͯ͆͠͞ͅ=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝*ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕*ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖=ᠣʹ̨̡̹͖͕̅͌́́͞*ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᑉʼ̧̛̊͒̃͏̞͙͙̘=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕*ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ᖮۂ̢̢̡̣͓͉ͦ̾̈͝=ᠣʹ̨̡̹͖͕̅͌́́͞*ᠣꓹ̶̡͉̩̣̂ͥ͑́͝*ᠣʹ̨̡̹͖͕̅͌́́͞,ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡=ᑉʼ̧̛̊͒̃͏̞͙͙̘*ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾=ᠣʹ̨̡̹͖͕̅͌́́͞*ᑉʼ̧̛̊͒̃͏̞͙͙̘,ᔇ_ࣰࣰࣰࣰ=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕*ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡,ᠦי̧͖͕͚̓̓͐͘͟ͅ=ᑉʼ̧̛̊͒̃͏̞͙͙̘*ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ˌˌ̵͚̭̮̈́ͨ̒͜͝=ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡*ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ⵈˈͧ͂̒̂͏̷̫̠̙́=ᠣʹ̨̡̹͖͕̅͌́́͞*ᔇ_ࣰࣰࣰࣰ,ᠩꙿ̐̓͒͏̝͉̳̕͡=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖*ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾,ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕*ⵈˈͧ͂̒̂͏̷̫̠̙́,ᠩꜗ̸͎͉̳͎ͯ̍̋͟͟=!ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+[],ⵆ_ࣺࣺٴ̸̡͕̝͕ͣ͐͆̕͟=ᠩꜗ̸͎͉̳͎ͯ̍̋͟͟[ᢜˈ̛͚̱̞̏͆̌̔͘͘],ˌۃ̸̨͚̫̺̬̑ͣ͂͢=ⵆ_ࣺࣺٴ̸̡͕̝͕ͣ͐͆̕͟[ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠]+[],ᖦۀ̡̲̩̙̈̊͛͆͟͠=ᠩꜗ̸͎͉̳͎ͯ̍̋͟͟[ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ⵗꓸ̸̵̟͙̥ͩͤ͂ͯ̀=ᠩꜗ̸͎͉̳͎ͯ̍̋͟͟[ᠣꓹ̶̡͉̩̣̂ͥ͑́͝],ᖦʼ̵̡̠̤͛̌ͩͣ͘ͅ=ᠩꜗ̸͎͉̳͎ͯ̍̋͟͟[ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],މء̶̡͙͙̺͂̑́̚͢=ᠩꜗ̸͎͉̳͎ͯ̍̋͟͟[ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕],ܙꓹ̡̨̛͚̜̟̲͒̎͋͠=ˌۃ̸̨͚̫̺̬̑ͣ͂͢[ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ㆴʺ̷͍̙̖ͭͬ̃͢͜͠=[]+{},ˇʽ̴̨̞̩̱͓͛ͧ̑ͥ͡=ㆴʺ̷͍̙̖ͭͬ̃͢͜͠[ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ᑉᶥ͉̙̹̍̈́̂͘͘͟=ㆴʺ̷͍̙̖ͭͬ̃͢͜͠[ᠣꓹ̶̡͉̩̣̂ͥ͑́͝],ᒡʻ̢̧̛̖̱͇͙̐͛ͤ̀=ˌۃ̸̨͚̫̺̬̑ͣ͂͢[ᢜˈ̛͚̱̞̏͆̌̔͘͘],ᔇꓹ̵̨̱̼̲̂̌̊͜=ˌۃ̸̨͚̫̺̬̑ͣ͂͢[ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ᵔᵕͪ́̍̕͏̨̥̣̗̝=(!ᢜˈ̛͚̱̞̏͆̌̔͘͘+[])[ᢜˈ̛͚̱̞̏͆̌̔͘͘],ՙʿ̨͓̜̞̗͛͋͂͊̀͡=ㆴʺ̷͍̙̖ͭͬ̃͢͜͠[ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ꜙˆ̴̠̼̦̍̾ͤ̀̀͞=ㆴʺ̷͍̙̖ͭͬ̃͢͜͠[ᠣʹ̨̡̹͖͕̅͌́́͞-ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ⵆا̋̊̆͏̷̣͎̫̰͝=ˌۃ̸̨͚̫̺̬̑ͣ͂͢[ᠣꓹ̶̡͉̩̣̂ͥ͑́͝],އՙ͓̰̬̰̊̃̈́͘͢͞=(!ᢜˈ̛͚̱̞̏͆̌̔͘͘+[])[ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠],ޢʹ̵̧̍͐̈́͏̘̞̭=ˇʽ̴̨̞̩̱͓͛ͧ̑ͥ͡+ՙʿ̨͓̜̞̗͛͋͂͊̀͡+ᔇꓹ̵̨̱̼̲̂̌̊͜+ᖦʼ̵̡̠̤͛̌ͩͣ͘ͅ+ᵔᵕͪ́̍̕͏̨̥̣̗̝+އՙ͓̰̬̰̊̃̈́͘͢͞+ᒡʻ̢̧̛̖̱͇͙̐͛ͤ̀+ˇʽ̴̨̞̩̱͓͛ͧ̑ͥ͡+ᵔᵕͪ́̍̕͏̨̥̣̗̝+ՙʿ̨͓̜̞̗͛͋͂͊̀͡+އՙ͓̰̬̰̊̃̈́͘͢͞,ʺ_ࣷࣷʿͭͨ̀͏̫̣̣̀̕͜=[][ⵆ_ࣺࣺٴ̸̡͕̝͕ͣ͐͆̕͟+ܙꓹ̡̨̛͚̜̟̲͒̎͋͠+ⵗꓸ̸̵̟͙̥ͩͤ͂ͯ̀+ᵔᵕͪ́̍̕͏̨̥̣̗̝+މء̶̡͙͙̺͂̑́̚͢+އՙ͓̰̬̰̊̃̈́͘͢͞],ᢥꓸ̶̶̖̼̤͍ͥ̌͆ͮ͘=ʺ_ࣷࣷʿͭͨ̀͏̫̣̣̀̕͜[ޢʹ̵̧̍͐̈́͏̘̞̭],ᓒꜘ̡ͦͥ͐̆́͏̮̜̥͟=''[ޢʹ̵̧̍͐̈́͏̘̞̭]+[],བٴ͙̜̙́̒ͦ͒̀͞͞=ᓒꜘ̡ͦͥ͐̆́͏̮̜̥͟[ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣʹ̨̡̹͖͕̅͌́́͞],ⴰʿ̧̪̟̫̒̑͒̑͟͝͞=ᓒꜘ̡ͦͥ͐̆́͏̮̜̥͟[ˌꜗ̶̱̹̒ͯ͆͠͞ͅ-ᠣꓹ̶̡͉̩̣̂ͥ͑́͝],ᠷᵕ̶͙̲̩̘ͭ̐͗̀͘͟=ᵔᵕͪ́̍̕͏̨̥̣̗̝+ՙʿ̨͓̜̞̗͛͋͂͊̀͡+བٴ͙̜̙́̒ͦ͒̀͞͞+ᵔᵕͪ́̍̕͏̨̥̣̗̝+އՙ͓̰̬̰̊̃̈́͘͢͞+ܙꓹ̡̨̛͚̜̟̲͒̎͋͠+ᔇꓹ̵̨̱̼̲̂̌̊͜+ⴰʿ̧̪̟̫̒̑͒̑͟͝͞,ﾞꜘ̷̡̻̳ͫ͌͂̎͢ͅ=(ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣʹ̨̡̹͖͕̅͌́́͞+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ)[ᠷᵕ̶͙̲̩̘ͭ̐͗̀͘͟](ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖),ᠢء̱̻̯͗̔ͩͦ̀̕͢͠=[][ޢʹ̵̧̍͐̈́͏̘̞̭][ޢʹ̵̧̍͐̈́͏̘̞̭](އՙ͓̰̬̰̊̃̈́͘͢͞+މء̶̡͙͙̺͂̑́̚͢+ᵔᵕͪ́̍̕͏̨̥̣̗̝+ᒡʻ̢̧̛̖̱͇͙̐͛ͤ̀+އՙ͓̰̬̰̊̃̈́͘͢͞+ᔇꓹ̵̨̱̼̲̂̌̊͜+ꜙˆ̴̠̼̦̍̾ͤ̀̀͞+މء̶̡͙͙̺͂̑́̚͢+ᖦʼ̵̡̠̤͛̌ͩͣ͘ͅ+ˇʽ̴̨̞̩̱͓͛ͧ̑ͥ͡+ᖦۀ̡̲̩̙̈̊͛͆͟͠+ﾞꜘ̷̡̻̳ͫ͌͂̎͢ͅ+މء̶̡͙͙̺͂̑́̚͢)(),ꓸᵔ̶̷̟͈͚ͧ̉͆͠=ᠢء̱̻̯͗̔ͩͦ̀̕͢͠(''[ᑉᶥ͉̙̹̍̈́̂͘͘͟+ܙꓹ̡̨̛͚̜̟̲͒̎͋͠+ⴰʿ̧̪̟̫̒̑͒̑͟͝͞]())[ᠣꓹ̶̡͉̩̣̂ͥ͑́͝],ᐝꙿ̛̓ͩͯ͑́͡͏͖̤̝=(ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝)[ᠷᵕ̶͙̲̩̘ͭ̐͗̀͘͟](ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖),ꙿۂ͋ͦ̔͏̨̗̮̟͠=(ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠)[ᠷᵕ̶͙̲̩̘ͭ̐͗̀͘͟](ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖),ⵗꞈͩ̓̐̀͠͝͏͉͙͎=(ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖-ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠)[ᠷᵕ̶͙̲̩̘ͭ̐͗̀͘͟](ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖),ᚐꜚ̶̡̱̟̩ͮ͆̽́͡=''[ޢʹ̵̧̍͐̈́͏̘̞̭][ⵆ_ࣺࣺٴ̸̡͕̝͕ͣ͐͆̕͟+އՙ͓̰̬̰̊̃̈́͘͢͞+ՙʿ̨͓̜̞̗͛͋͂͊̀͡+ᐝꙿ̛̓ͩͯ͑́͡͏͖̤̝+ꓸᵔ̶̷̟͈͚ͧ̉͆͠+ꙿۂ͋ͦ̔͏̨̗̮̟͠+ᖦۀ̡̲̩̙̈̊͛͆͟͠+އՙ͓̰̬̰̊̃̈́͘͢͞+ꓸᵔ̶̷̟͈͚ͧ̉͆͠+ՙʿ̨͓̜̞̗͛͋͂͊̀͡+ⵆا̋̊̆͏̷̣͎̫̰͝+މء̶̡͙͙̺͂̑́̚͢],ᣙꜗ̷̧̣̼̰̤ͥ͂̃̚̕=ᢥꓸ̶̶̖̼̤͍ͥ̌͆ͮ͘(އՙ͓̰̬̰̊̃̈́͘͢͞+މء̶̡͙͙̺͂̑́̚͢+ᵔᵕͪ́̍̕͏̨̥̣̗̝+ᒡʻ̢̧̛̖̱͇͙̐͛ͤ̀+އՙ͓̰̬̰̊̃̈́͘͢͞+ᔇꓹ̵̨̱̼̲̂̌̊͜+ꜙˆ̴̠̼̦̍̾ͤ̀̀͞+މء̶̡͙͙̺͂̑́̚͢+ⵗꞈͩ̓̐̀͠͝͏͉͙͎+ᖦۀ̡̲̩̙̈̊͛͆͟͠+ⵗꓸ̸̵̟͙̥ͩͤ͂ͯ̀)(),ᛧᵔ̴̵̫̣̖̒̓̚͞=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ᣙʿ̨̻̝̯̯̉̍͆͝͝=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠣʹ̨̡̹͖͕̅͌́́͞+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ˑʺ͑͌̒͂͟͏̸͇̘͔͔=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᢥ_ྀྀʽ̧̛̛̠͈̣͌̓̊͡=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᠣʹ̨̡̹͖͕̅͌́́͞+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,བʺ̴̬̹͈͈̅ͣ͆̑͝͡=ᠣʹ̨̡̹͖͕̅͌́́͞|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ˑʺ̸̰̥͚ͩͨ̊͢͟=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᚓا̨̫̙͍ͯ̅ͯ́͟=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠩꙿ̐̓͒͏̝͉̳̕͡+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ᑉʼ̧̛̊͒̃͏̞͙͙̘|ˌˌ̵͚̭̮̈́ͨ̒͜͝|ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᠣʹ̨̡̹͖͕̅͌́́͞+ᔇ_ࣰࣰࣰࣰ,ՙꓻ̶̢͉͓̫ͭͩ͋́=ᠣʹ̨̡̹͖͕̅͌́́͞+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ߑᵕ̷̙̼͇͗ͨ̌͘͢=ᔇ_ࣰࣰࣰࣰ+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ᠩꙿ̐̓͒͏̝͉̳̕͡|ᠦי̧͖͕͚̓̓͐͘͟ͅ+ⵈˈͧ͂̒̂͏̷̫̠̙́,ᚲʹ̵̶̧̳̞̼ͣͩͬ͝=ᔇ_ࣰࣰࣰࣰ+ᠣʹ̨̡̹͖͕̅͌́́͞|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ⵈˈͧ͂̒̂͏̷̫̠̙́|ᠩꙿ̐̓͒͏̝͉̳̕͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᠥʹ͛̂ͫ͂͏̶̘̲̮͔͘=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ᠦי̧͖͕͚̓̓͐͘͟ͅ+ᔇ_ࣰࣰࣰࣰ+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠩꙿ̐̓͒͏̝͉̳̕͡,ᵔ_ꓼ̨̤͇̽̋̚͟͡ͅ=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ˌˌ̵͚̭̮̈́ͨ̒͜͝+ᑉʼ̧̛̊͒̃͏̞͙͙̘+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᠩꙿ̐̓͒͏̝͉̳̕͡|ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾,າا̴̶̸̜̰̬͉ͦ͐̉=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᑉʼ̧̛̊͒̃͏̞͙͙̘,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ۃʺ̨̢͇̟̻̰͑͊ͯ͝=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣʹ̨̡̹͖͕̅͌́́͞|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘=ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ꓺ_ึึึึ=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠣʹ̨̡̹͖͕̅͌́́͞+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᵔا̨͔̣͍ͪͬ̓́͟=ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ˌˌ̵͚̭̮̈́ͨ̒͜͝|ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᣞˇ̴̧̘̝́̓͊͡͞ͅ=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ⵈˈͧ͂̒̂͏̷̫̠̙́+ᠩꙿ̐̓͒͏̝͉̳̕͡|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᖮۂ̢̢̡̣͓͉ͦ̾̈͝|ᑉʼ̧̛̊͒̃͏̞͙͙̘,ꓼʼ̨͈̥͙̲̆̽́̚͟͜=ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ᖮۂ̢̢̡̣͓͉ͦ̾̈͝|ᠩꙿ̐̓͒͏̝͉̳̕͡|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ⵈˈͧ͂̒̂͏̷̫̠̙́|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ʹʻ̥͔̣̾ͭͮ͢͠͡=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᑉʼ̧̛̊͒̃͏̞͙͙̘,ᒼۂ̨͇͉͚̾̀̍ͥ̕͡=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠣʹ̨̡̹͖͕̅͌́́͞+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᡪͺ̶̵̨̝̻̩̎ͩ́=ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᵔꙿ̢̧͖͖̦͒͗͒́=ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ʼˇ̧͋͑̂ͪ͏̙̙̩͟=ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ᠦי̧͖͕͚̓̓͐͘͟ͅ+ˌˌ̵͚̭̮̈́ͨ̒͜͝+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ,ᠲٴ̇̄̐̀͏̷̢̜͉̦=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ᠺˇ̶̢̖͍͉̩̓̈́̓͂͠=ᠩꙿ̐̓͒͏̝͉̳̕͡|ᔇ_ࣰࣰࣰࣰ+ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ⵈˈͧ͂̒̂͏̷̫̠̙́|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾,ᡍꜗ̧͇͇̱͋ͯͧ̕͠=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᠢʽ̵̧̙̞̪̒̃ͮ͒̀͟=ᠣʹ̨̡̹͖͕̅͌́́͞|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ᒢۃ̴̻͙͙̜̈́ͫ̓̍͘͡͡=ᔇ_ࣰࣰࣰࣰ+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠩꙿ̐̓͒͏̝͉̳̕͡+ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᑉʼ̧̛̊͒̃͏̞͙͙̘,ᵔʺ̢̙̳̠̀̽̑̎̕͡=ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᠣʹ̨̡̹͖͕̅͌́́͞|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ,ᐟʾ̨̭̯͕̼ͤ̑̄͡͞=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣʹ̨̡̹͖͕̅͌́́͞|ᑉʼ̧̛̊͒̃͏̞͙͙̘,ٴיͬ̆͂̈́͘͏͉̤͉͘͜=ⵈˈͧ͂̒̂͏̷̫̠̙́+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᔇ_ࣰࣰࣰࣰ+ᠩꙿ̐̓͒͏̝͉̳̕͡,ᠧי̡̦̪̞̪̾̇̚̕͟=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᔇ_ࣰࣰࣰࣰ|ᠦי̧͖͕͚̓̓͐͘͟ͅ|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠣʹ̨̡̹͖͕̅͌́́͞,ᠣꜚ̷̡̗͎̞̭͛ͣͧ͘͢=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠣʹ̨̡̹͖͕̅͌́́͞,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᠧە̴̸͉̝͍ͤ̅̑͘=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᑉʼ̧̛̊͒̃͏̞͙͙̘,ᔊʼ̶̩͍͉̔̍͑͘͡=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᢥʿ̸̧̨̛̪̫̩̆̔ͭͧ=ᠦי̧͖͕͚̓̓͐͘͟ͅ+ᔇ_ࣰࣰࣰࣰ+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᠣʹ̨̡̹͖͕̅͌́́͞|ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ,ᡃꞈ̸̨̝̣͉̟̐̌̆̒́͟=ⵈˈͧ͂̒̂͏̷̫̠̙́|ᔇ_ࣰࣰࣰࣰ+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᠩꙿ̐̓͒͏̝͉̳̕͡+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠦי̧͖͕͚̓̓͐͘͟ͅ+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ˌˌ̵͚̭̮̈́ͨ̒͜͝|ᖮۂ̢̢̡̣͓͉ͦ̾̈͝,ヽꞈ̧̠͖͇͐ͭͨ͡͡=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠣʹ̨̡̹͖͕̅͌́́͞|ᑉʼ̧̛̊͒̃͏̞͙͙̘,ʹʿ̡̛̠̰͙͊ͣͭ͡=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᠩꙿ̐̓͒͏̝͉̳̕͡+ᔇ_ࣰࣰࣰࣰ+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˌˌ̵͚̭̮̈́ͨ̒͜͝,γٴ̵̞͉̪̉͑́̅͘̕͢=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᑉʼ̧̛̊͒̃͏̞͙͙̘+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ᢥء̛ͬͫ̍̈͏̢̛̫̤̪=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣʹ̨̡̹͖͕̅͌́́͞|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ˈء̴̨̣͔͍̗ͮ̋̒̀͠=ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᔇ_ࣰࣰࣰࣰ+ᠩꙿ̐̓͒͏̝͉̳̕͡+ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᠣʹ̨̡̹͖͕̅͌́́͞+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾,ᚑꓺ̨̖̦̘̳̒̄̅͝͡=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ᶥי̧͕̖̫̰̑ͮ̅́́̚͡=ᔇ_ࣰࣰࣰࣰ+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ⵈˈͧ͂̒̂͏̷̫̠̙́+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ˌˌ̵͚̭̮̈́ͨ̒͜͝+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ᠩꙿ̐̓͒͏̝͉̳̕͡,γ_ʿ̵̨͙͖̺͔̃ͪ̚͟=ᠦי̧͖͕͚̓̓͐͘͟ͅ|ˌˌ̵͚̭̮̈́ͨ̒͜͝+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,اۂ̡̥̝̥̓̽ͩͤ͘͡=ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᠣʹ̨̡̹͖͕̅͌́́͞+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ˌˌ̵͚̭̮̈́ͨ̒͜͝|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠩꙿ̐̓͒͏̝͉̳̕͡|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ۃʻ̸̤̦͕ͬ̍ͪͦ͡͝=ᔇ_ࣰࣰࣰࣰ|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ᠩꙿ̐̓͒͏̝͉̳̕͡|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᓒˇ̢̛̱̝̥͚̒̽ͣͮ̀=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᚑꓼ̷̶̝̜̮̓̈́̽͘͠=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ʺە̷̽͒ͤ͛͏̸̻͖͕̦=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᓐۃ̜̻̲͇̊̓͗ͯ̀͘̕=ᑉʼ̧̛̊͒̃͏̞͙͙̘,ꓻʿ̢̧͎̥̝̌ͥ͌͘=ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠣʹ̨̡̹͖͕̅͌́́͞|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞=ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᠰۃ̸̧̯̦̙ͩ́͋͢͡=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠣʹ̨̡̹͖͕̅͌́́͞,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠=ᑉʼ̧̛̊͒̃͏̞͙͙̘+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ꓼء̵̨͖̻͚ͥͩ͑͒͠=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ+ᑉʼ̧̛̊͒̃͏̞͙͙̘|ˌˌ̵͚̭̮̈́ͨ̒͜͝+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ءء̧̮̝̜̊͂̾͜͜͜=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᠣʹ̨̡̹͖͕̅͌́́͞,ᒻͺ̏̏̓͐͏̡̧͕̮̭̖=ᠣʹ̨̡̹͖͕̅͌́́͞|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,اʻ͙̱̮̓ͩ̋̋͢͝͡=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᑉʼ̧̛̊͒̃͏̞͙͙̘,ྋՙ̸̩̘͈̿̎̐͂͘͞=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᔇγ̸̬̬̝̰ͤͬ̎͟͡=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ᣙᵕ͓̠̳̙ͪͤ̔ͩ͜͟͝=ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᑉʼ̧̛̊͒̃͏̞͙͙̘|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,ᢥꓻ̢̧̩̤̗̾̊̒̑͡=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᑉʼ̧̛̊͒̃͏̞͙͙̘,އꓻ̴͇̰̜̪͛͊ͣ͘͢=ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ꜗˇ̵̹̬͔ͧ̓ͣ́͢=ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ˌˌ̵͚̭̮̈́ͨ̒͜͝+ᠩꙿ̐̓͒͏̝͉̳̕͡+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠦי̧͖͕͚̓̓͐͘͟ͅ|ᔇ_ࣰࣰࣰࣰ,າꓽ̴̶͉͉̪ͪ͗ͣ́=ᠣʹ̨̡̹͖͕̅͌́́͞|ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᠣᵕ̡͌ͨ͂͝͏̨͓̘ͅ=ᠣʹ̨̡̹͖͕̅͌́́͞+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᑉʼ̧̛̊͒̃͏̞͙͙̘,ہᵕ̵̟̹̥̅̌̈́́̕=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣʹ̨̡̹͖͕̅͌́́͞|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ,ͺۀ̝̠̭̑ͦͯ̀̀͞=ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖,ᔇʹ̷̧̛̘̰̻͑́͑ͮ=ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᠣʹ̨̡̹͖͕̅͌́́͞|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ʽۀ̴͌̒ͩ͂͞͏͍̙̰=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ˌˌ̵͚̭̮̈́ͨ̒͜͝+ᠩꙿ̐̓͒͏̝͉̳̕͡,ˈʹ̷̡̰̙̯ͦ͑̾̕=ᠣʹ̨̡̹͖͕̅͌́́͞|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᓪʽ̶̨̼̩̰̔ͯ̚͝=ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠,γי̷̖̠̙̍ͣ̂́͘͘=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝+ᠣʹ̨̡̹͖͕̅͌́́͞,ᠳʼ̷̵̻̩͈ͫ̓ͯ̄́=ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᡕꙿ̩͖̜̲͗́̐̓̀͜͞=ᑉʼ̧̛̊͒̃͏̞͙͙̘+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡|ᠦי̧͖͕͚̓̓͐͘͟ͅ+ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾+ᠩꙿ̐̓͒͏̝͉̳̕͡+ᔇ_ࣰࣰࣰࣰ,ᡪᵔ̶̵ͦͤ̎͏͈̤͓̠=ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᠦי̧͖͕͚̓̓͐͘͟ͅ+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝|ᛍꓻ̵̨̢̗̽̊̌̈ͅͅ+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾|ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ᠣʹ̨̡̹͖͕̅͌́́͞|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᐟͺ̢͈̟̘ͣͮͧ͘͜͞=ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕+ᖮۂ̢̢̡̣͓͉ͦ̾̈͝+ᠣʹ̨̡̹͖͕̅͌́́͞+ⵈˈͧ͂̒̂͏̷̫̠̙́|ᔇ_ࣰࣰࣰࣰ|ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᠩꙿ̐̓͒͏̝͉̳̕͡+ˌꜗ̶̱̹̒ͯ͆͠͞ͅ+ᓪꓺ̷̴̶̳͎͓͋ͬ͑̾,ᔉͺ̡̻͕͕̆͑ͥ͟͠=ᠣʹ̨̡̹͖͕̅͌́́͞+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ᖦʻ̵͇̤̬̮͐ͩͬ̀̀=ᑉʼ̧̛̊͒̃͏̞͙͙̘|ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ˆˌ̨̥̪̭̲̽ͧ̐ͮ́̕,ⴰᵕ̢̪̬̤̊͒̚͘͘͢=ᠴ_ͤͤʺ̧̨ͭ̌͐́͏̱̪͖̖+ﾞʺ̶̡̂ͤ̅̈͏̼̯͍̠|ᠣꓹ̶̡͉̩̣̂ͥ͑́͝,ⵈʹ̨̮͚̰͑ͨ̎ͯ́͘=ᖮۂ̢̢̡̣͓͉ͦ̾̈͝|ˌˌ̵͚̭̮̈́ͨ̒͜͝+ᠩꙿ̐̓͒͏̝͉̳̕͡+ᠦי̧͖͕͚̓̓͐͘͟ͅ+ⵈᶥ̸̵̫̳͇͊͆͊̄͟͡+ᠣꓹ̶̡͉̩̣̂ͥ͑́͝;ᣙꜗ̷̧̣̼̰̤ͥ͂̃̚̕(ᚐꜚ̶̡̱̟̩ͮ͆̽́͡(ྋՙ̸̩̘͈̿̎̐͂͘͞,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,اʻ͙̱̮̓ͩ̋̋͢͝͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ہᵕ̵̟̹̥̅̌̈́́̕,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ᢥꓻ̢̧̩̤̗̾̊̒̑͡,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,བʺ̴̬̹͈͈̅ͣ͆̑͝͡,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ᢥꓻ̢̧̩̤̗̾̊̒̑͡,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,ᡪͺ̶̵̨̝̻̩̎ͩ́,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,བʺ̴̬̹͈͈̅ͣ͆̑͝͡,ᡍꜗ̧͇͇̱͋ͯͧ̕͠,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,າا̴̶̸̜̰̬͉ͦ͐̉,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹʻ̥͔̣̾ͭͮ͢͠͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ྋՙ̸̩̘͈̿̎̐͂͘͞,ᣙᵕ͓̠̳̙ͪͤ̔ͩ͜͟͝,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᐟʾ̨̭̯͕̼ͤ̑̄͡͞,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,ྋՙ̸̩̘͈̿̎̐͂͘͞,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,اʻ͙̱̮̓ͩ̋̋͢͝͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᔇʹ̷̧̛̘̰̻͑́͑ͮ,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ہᵕ̵̟̹̥̅̌̈́́̕,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,اʻ͙̱̮̓ͩ̋̋͢͝͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ྋՙ̸̩̘͈̿̎̐͂͘͞,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,γי̷̖̠̙̍ͣ̂́͘͘,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᠣᵕ̡͌ͨ͂͝͏̨͓̘ͅ,ʹʻ̥͔̣̾ͭͮ͢͠͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ྋՙ̸̩̘͈̿̎̐͂͘͞,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᠲٴ̇̄̐̀͏̷̢̜͉̦,ྋՙ̸̩̘͈̿̎̐͂͘͞,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ہᵕ̵̟̹̥̅̌̈́́̕,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,اʻ͙̱̮̓ͩ̋̋͢͝͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ྋՙ̸̩̘͈̿̎̐͂͘͞,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,γי̷̖̠̙̍ͣ̂́͘͘,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᠣᵕ̡͌ͨ͂͝͏̨͓̘ͅ,ʹʻ̥͔̣̾ͭͮ͢͠͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ྋՙ̸̩̘͈̿̎̐͂͘͞,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ꓺ_ึึึึ,γٴ̵̞͉̪̉͑́̅͘̕͢,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᔉͺ̡̻͕͕̆͑ͥ͟͠,γٴ̵̞͉̪̉͑́̅͘̕͢,ہᵕ̵̟̹̥̅̌̈́́̕,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,اʻ͙̱̮̓ͩ̋̋͢͝͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ྋՙ̸̩̘͈̿̎̐͂͘͞,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,γי̷̖̠̙̍ͣ̂́͘͘,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᠣᵕ̡͌ͨ͂͝͏̨͓̘ͅ,ʹʻ̥͔̣̾ͭͮ͢͠͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ྋՙ̸̩̘͈̿̎̐͂͘͞,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᛧᵔ̴̵̫̣̖̒̓̚͞,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᔇʹ̷̧̛̘̰̻͑́͑ͮ,ᔉͺ̡̻͕͕̆͑ͥ͟͠,γٴ̵̞͉̪̉͑́̅͘̕͢,γٴ̵̞͉̪̉͑́̅͘̕͢,ہᵕ̵̟̹̥̅̌̈́́̕,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ᢥꓻ̢̧̩̤̗̾̊̒̑͡,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,ᓒˇ̢̛̱̝̥͚̒̽ͣͮ̀,ᖦʻ̵͇̤̬̮͐ͩͬ̀̀,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,γٴ̵̞͉̪̉͑́̅͘̕͢,ˈʹ̷̡̰̙̯ͦ͑̾̕,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ˈʹ̷̡̰̙̯ͦ͑̾̕,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᔇʹ̷̧̛̘̰̻͑́͑ͮ,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ءء̧̮̝̜̊͂̾͜͜͜,ءء̧̮̝̜̊͂̾͜͜͜,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ᢥꓻ̢̧̩̤̗̾̊̒̑͡,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᐟʾ̨̭̯͕̼ͤ̑̄͡͞,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,γٴ̵̞͉̪̉͑́̅͘̕͢,γٴ̵̞͉̪̉͑́̅͘̕͢,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ᣙᵕ͓̠̳̙ͪͤ̔ͩ͜͟͝,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,γٴ̵̞͉̪̉͑́̅͘̕͢,γٴ̵̞͉̪̉͑́̅͘̕͢,ہᵕ̵̟̹̥̅̌̈́́̕,ہᵕ̵̟̹̥̅̌̈́́̕,ᔊʼ̶̩͍͉̔̍͑͘͡,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ՙꓻ̶̢͉͓̫ͭͩ͋́,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᓪʽ̶̨̼̩̰̔ͯ̚͝,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᵔꙿ̢̧͖͖̦͒͗͒́,ᵔꙿ̢̧͖͖̦͒͗͒́,ՙꓻ̶̢͉͓̫ͭͩ͋́,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᓪʽ̶̨̼̩̰̔ͯ̚͝,ᓪʽ̶̨̼̩̰̔ͯ̚͝,ᠳʼ̷̵̻̩͈ͫ̓ͯ̄́,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᓒˇ̢̛̱̝̥͚̒̽ͣͮ̀,ᚑꓺ̨̖̦̘̳̒̄̅͝͡,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᵔꙿ̢̧͖͖̦͒͗͒́,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,އꓻ̴͇̰̜̪͛͊ͣ͘͢,ՙꓻ̶̢͉͓̫ͭͩ͋́,γٴ̵̞͉̪̉͑́̅͘̕͢,ᓪʽ̶̨̼̩̰̔ͯ̚͝,ͺۀ̝̠̭̑ͦͯ̀̀͞,އꓻ̴͇̰̜̪͛͊ͣ͘͢,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,އꓻ̴͇̰̜̪͛͊ͣ͘͢,ᔊʼ̶̩͍͉̔̍͑͘͡,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᠢʽ̵̧̙̞̪̒̃ͮ͒̀͟,ᠣꜚ̷̡̗͎̞̭͛ͣͧ͘͢,ᠣꜚ̷̡̗͎̞̭͛ͣͧ͘͢,ྋՙ̸̩̘͈̿̎̐͂͘͞,ہᵕ̵̟̹̥̅̌̈́́̕,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ᢥꓻ̢̧̩̤̗̾̊̒̑͡,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,ᐟʾ̨̭̯͕̼ͤ̑̄͡͞,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ʹʻ̥͔̣̾ͭͮ͢͠͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ྋՙ̸̩̘͈̿̎̐͂͘͞,ᣙᵕ͓̠̳̙ͪͤ̔ͩ͜͟͝,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᐟʾ̨̭̯͕̼ͤ̑̄͡͞,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,ᔊʼ̶̩͍͉̔̍͑͘͡,ⴰᵕ̢̪̬̤̊͒̚͘͘͢,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᓐۃ̜̻̲͇̊̓͗ͯ̀͘̕,ˑʺ̸̰̥͚ͩͨ̊͢͟,ᓐۃ̜̻̲͇̊̓͗ͯ̀͘̕,ᡪͺ̶̵̨̝̻̩̎ͩ́,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᔊʼ̶̩͍͉̔̍͑͘͡,ᢥء̛ͬͫ̍̈͏̢̛̫̤̪,ྋՙ̸̩̘͈̿̎̐͂͘͞,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,اʻ͙̱̮̓ͩ̋̋͢͝͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᔇʹ̷̧̛̘̰̻͑́͑ͮ,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ᠣꜚ̷̡̗͎̞̭͛ͣͧ͘͢,ᢥ_ྀྀʽ̧̛̛̠͈̣͌̓̊͡,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ヽꞈ̧̠͖͇͐ͭͨ͡͡,اʻ͙̱̮̓ͩ̋̋͢͝͡,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ᠢʽ̵̧̙̞̪̒̃ͮ͒̀͟,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ہᵕ̵̟̹̥̅̌̈́́̕,ᔊʼ̶̩͍͉̔̍͑͘͡,ᚲʹ̵̶̧̳̞̼ͣͩͬ͝,ᒢۃ̴̻͙͙̜̈́ͫ̓̍͘͡͡,ߑᵕ̷̙̼͇͗ͨ̌͘͢,اۂ̡̥̝̥̓̽ͩͤ͘͡,ᠧי̡̦̪̞̪̾̇̚̕͟,ʽۀ̴͌̒ͩ͂͞͏͍̙̰,ˈء̴̨̣͔͍̗ͮ̋̒̀͠,ᢥء̛ͬͫ̍̈͏̢̛̫̤̪,ⵈʹ̨̮͚̰͑ͨ̎ͯ́͘,ᐟͺ̢͈̟̘ͣͮͧ͘͜͞,ᠺˇ̶̢̖͍͉̩̓̈́̓͂͠,ᢥʿ̸̧̨̛̪̫̩̆̔ͭͧ,ᠥʹ͛̂ͫ͂͏̶̘̲̮͔͘,ᶥי̧͕̖̫̰̑ͮ̅́́̚͡,ʹʿ̡̛̠̰͙͊ͣͭ͡,ᠺˇ̶̢̖͍͉̩̓̈́̓͂͠,ᵔʺ̢̙̳̠̀̽̑̎̕͡,ʼˇ̧͋͑̂ͪ͏̙̙̩͟,ۃʻ̸̤̦͕ͬ̍ͪͦ͡͝,ᒼۂ̨͇͉͚̾̀̍ͥ̕͡,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᠧە̴̸͉̝͍ͤ̅̑͘,ᒻͺ̏̏̓͐͏̡̧͕̮̭̖,ᣞˇ̴̧̘̝́̓͊͡͞ͅ,ٴיͬ̆͂̈́͘͏͉̤͉͘͜,ᡃꞈ̸̨̝̣͉̟̐̌̆̒́͟,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,ᒻͺ̏̏̓͐͏̡̧͕̮̭̖,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,اʻ͙̱̮̓ͩ̋̋͢͝͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ᣙᵕ͓̠̳̙ͪͤ̔ͩ͜͟͝,γי̷̖̠̙̍ͣ̂́͘͘,މꓹ̵̡̧͚̪̹̙ͩ̆͆͟,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᒼۂ̨͇͉͚̾̀̍ͥ̕͡,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ꓼʼ̨͈̥͙̲̆̽́̚͟͜,ᵔا̨͔̣͍ͪͬ̓́͟,ᡕꙿ̩͖̜̲͗́̐̓̀͜͞,ᒼۂ̨͇͉͚̾̀̍ͥ̕͡,ᣙʿ̨̻̝̯̯̉̍͆͝͝,γ_ʿ̵̨͙͖̺͔̃ͪ̚͟,ᵔ_ꓼ̨̤͇̽̋̚͟͡ͅ,ᡪᵔ̶̵ͦͤ̎͏͈̤͓̠,ᚓا̨̫̙͍ͯ̅ͯ́͟,ᵔ_ꓼ̨̤͇̽̋̚͟͡ͅ,ꜗˇ̵̹̬͔ͧ̓ͣ́͢,ꓼء̵̨͖̻͚ͥͩ͑͒͠,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,γٴ̵̞͉̪̉͑́̅͘̕͢,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,ހꜗ̴̵͔̣͐̈́͗͟͠ͅ,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ᔊʼ̶̩͍͉̔̍͑͘͡,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ꓻʿ̢̧͎̥̝̌ͥ͌͘,γٴ̵̞͉̪̉͑́̅͘̕͢,ᢥꓻ̢̧̩̤̗̾̊̒̑͡,γٴ̵̞͉̪̉͑́̅͘̕͢,γי̷̖̠̙̍ͣ̂́͘͘,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,γٴ̵̞͉̪̉͑́̅͘̕͢,اʻ͙̱̮̓ͩ̋̋͢͝͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ʹ_҄҄ꓹ̡̡̜̫͕̈́͗̅͜͞,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ᒡꓺ̸̧̲̤̤̩̎̈́̐͘,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ᔇʹ̷̧̛̘̰̻͑́͑ͮ,ᔉͺ̡̻͕͕̆͑ͥ͟͠,ᢥ_ྀྀʽ̧̛̛̠͈̣͌̓̊͡,ྋՙ̸̩̘͈̿̎̐͂͘͞,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,اʻ͙̱̮̓ͩ̋̋͢͝͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ヽꞈ̧̠͖͇͐ͭͨ͡͡,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ہᵕ̵̟̹̥̅̌̈́́̕,ᔇγ̸̬̬̝̰ͤͬ̎͟͡,ᒻͺ̏̏̓͐͏̡̧͕̮̭̖,ˑʺ̸̰̥͚ͩͨ̊͢͟,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᠰۃ̸̧̯̦̙ͩ́͋͢͡,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ྋՙ̸̩̘͈̿̎̐͂͘͞,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ᚑꓼ̷̶̝̜̮̓̈́̽͘͠,ہᵕ̵̟̹̥̅̌̈́́̕,ہᵕ̵̟̹̥̅̌̈́́̕,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ᔊʼ̶̩͍͉̔̍͑͘͡,ʹە̶̵̶͎͖̣ͨ̑ͮ͆͝,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ˑʺ͑͌̒͂͟͏̸͇̘͔͔,ᣙᵕ͓̠̳̙ͪͤ̔ͩ͜͟͝,ᣙʿ̨̻̝̯̯̉̍͆͝͝,ᣙʽ̵̴̵̐ͬ͆̚͏̦͎͈͓,ᢦ_ۚۚۚꙿ̴̸͚̮̣̏̍̐͠,ᔊʼ̶̩͍͉̔̍͑͘͡,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ۃʺ̨̢͇̟̻̰͑͊ͯ͝,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ྋՙ̸̩̘͈̿̎̐͂͘͞,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,າꓽ̴̶͉͉̪ͪ͗ͣ́,ꓸʽ̴̛̲͔̯ͨ̅ͧ̀͡,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ʺە̷̽͒ͤ͛͏̸̻͖͕̦,ᔇʹ̷̧̛̘̰̻͑́͑ͮ))})();result\n</js>"
    },
    "ruleExplore": {
      "author": "span@text",
      "bookList": ".book-like@a",
      "bookUrl": "<js>\na=java.getString('href');\nb=String(a).replace(/^/,'https://www.aahhqq.com');\nc=`data:;base64,${java.base64Encode(b)},{'type':''}`\n</js>",
      "coverUrl": "<js>\na=java.getString('img@src');\nb=String(a).replace(/.*cover\\/(.*)\\..*/,'https://static.aahhqq.com/file/cover/$1.webp');\nb\n</js>",
      "name": "h4@text"
    },
    "ruleSearch": {
      "author": "span@text",
      "bookList": ".grid-item",
      "bookUrl": "<js>\n(()=>{var ᑉꓽ̸̧̧̭̝̫̪̓̿ͭ='ᠷᵔ̸̴̠̺͖ͩͧ̆͐͜'&'ˆۃ̸͎͉͊̎́̚͡ͅ',ﾟ_ˇ̼̥̱͍́͊̀́͢͡=-~'ㆶꓹ̡̡̧̲̟̲̂͌ͯ͂',ꓺꞈ͚͚̰̍̔ͬ̕͠͡=ﾟ_ˇ̼̥̱͍́͊̀́͢͡-~'າء̽͑̚',ᔉہ̳̗̜ͬ͒̓̓̀̀͘=ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ꓺꞈ͚͚̰̍̔ͬ̕͠͡,ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́=ᔉہ̳̗̜ͬ͒̓̓̀̀͘*ꓺꞈ͚͚̰̍̔ͬ̕͠͡,ˇꜙ̡̢̛̩͙̣̄͂͗̕=ꓺꞈ͚͚̰̍̔ͬ̕͠͡*ᔉہ̳̗̜ͬ͒̓̓̀̀͘*ꓺꞈ͚͚̰̍̔ͬ̕͠͡,ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́*ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ᵕˇ̶̰̻̘̇ͩ͑̀͘=ᔉہ̳̗̜ͬ͒̓̓̀̀͘*ˇꜙ̡̢̛̩͙̣̄͂͗̕,ޢᵔ̸̘͈̪̍ͨ̊̕͠=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́*ꓺꞈ͚͚̰̍̔ͬ̕͠͡*ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́,ᖕͺ̷͇̥̪͗͊ͬ̚̕͝=ᵕˇ̶̰̻̘̇ͩ͑̀͘*ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ㆍꓻ̵̈́͊͂͡͏̦̗̲=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́*ᵕˇ̶̰̻̘̇ͩ͑̀͘,ᔈۀ͖̻̯ͧ̐͒͗́͜͡=ᔉہ̳̗̜ͬ͒̓̓̀̀͘*ᖕͺ̷͇̥̪͗͊ͬ̚̕͝,ܝہ̷̛͎͈̦́̀̓́́=ᵕˇ̶̰̻̘̇ͩ͑̀͘*ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,اꜙ̤̜̘̝̒ͭ̈́͜͝=ᖕͺ̷͇̥̪͗͊ͬ̚̕͝*ˇꜙ̡̢̛̩͙̣̄͂͗̕,ᚓۂ̧̨̨̥̯̮̠ͩ̒̿͘=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́*ᔈۀ͖̻̯ͧ̐͒͗́͜͡,ᢏʿ̶̛̪̜̼̑̓̔̍͘=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝*ㆍꓻ̵̈́͊͂͡͏̦̗̲,ꓹᵔ̢̡̐̃͂͏͈̱́ͅ=ᔉہ̳̗̜ͬ͒̓̓̀̀͘*ᚓۂ̧̨̨̥̯̮̠ͩ̒̿͘,יᵕ̧̰̼̗͍̈ͭͪ̂̀͝=!ﾟ_ˇ̼̥̱͍́͊̀́͢͡+[],ᚔꜘ̷̨̤̤̘̾͊̌͘͘=יᵕ̧̰̼̗͍̈ͭͪ̂̀͝[ᑉꓽ̸̧̧̭̝̫̪̓̿ͭ],ʹꙿ̵̧͒̅̆͏̙̠̤=ᚔꜘ̷̨̤̤̘̾͊̌͘͘[ﾟ_ˇ̼̥̱͍́͊̀́͢͡]+[],ᒽꜙ̴̹̙̞̾ͨ̈̀͟͠=יᵕ̧̰̼̗͍̈ͭͪ̂̀͝[ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ᖦʼ̶̷̛̠̹̰ͧ̍̂=יᵕ̧̰̼̗͍̈ͭͪ̂̀͝[ꓺꞈ͚͚̰̍̔ͬ̕͠͡],ܪꞈ̛͚̱͙ͤ͒̚͘̕=יᵕ̧̰̼̗͍̈ͭͪ̂̀͝[ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ﾞۀ̶̡̧̯̗͕̱ͮ̽͆=יᵕ̧̰̼̗͍̈ͭͪ̂̀͝[ᔉہ̳̗̜ͬ͒̓̓̀̀͘],ʿՙ̴̡̫̫̮͋ͬ̓́͟=ʹꙿ̵̧͒̅̆͏̙̠̤[ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ᐦי̴̯͖̺͊̂̅ͨ́̕͝=[]+{},ⵈˑͦͭ̈́̐͏̪̥̞͘͜=ᐦי̴̯͖̺͊̂̅ͨ́̕͝[ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ⵂا̵͂̀́͏̧̧̞̬̣=ᐦי̴̯͖̺͊̂̅ͨ́̕͝[ꓺꞈ͚͚̰̍̔ͬ̕͠͡],ᠤە̸̡̛̣̰̲͒̋ͣ̊=ʹꙿ̵̧͒̅̆͏̙̠̤[ᑉꓽ̸̧̧̭̝̫̪̓̿ͭ],ꜘꓹ̧̄͒̓͝͏͓͈ͅ=ʹꙿ̵̧͒̅̆͏̙̠̤[ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢=(!ᑉꓽ̸̧̧̭̝̫̪̓̿ͭ+[])[ᑉꓽ̸̧̧̭̝̫̪̓̿ͭ],ꞈۂ̢̐̇̓͏̨͖̺̩=ᐦי̴̯͖̺͊̂̅ͨ́̕͝[ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ᠩꓻ̴̪̰͎̆́̆́͢=ᐦי̴̯͖̺͊̂̅ͨ́̕͝[ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́-ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ᠸꜚ̎̐ͯ͏̧̻̹̲̀=ʹꙿ̵̧͒̅̆͏̙̠̤[ꓺꞈ͚͚̰̍̔ͬ̕͠͡],ᠧۃ̢̧͇̙̤ͨ͂ͯ͜=(!ᑉꓽ̸̧̧̭̝̫̪̓̿ͭ+[])[ﾟ_ˇ̼̥̱͍́͊̀́͢͡],ᚐۂ̶̧̣̫̫̂̔͑̔͞͞=ⵈˑͦͭ̈́̐͏̪̥̞͘͜+ꞈۂ̢̐̇̓͏̨͖̺̩+ꜘꓹ̧̄͒̓͝͏͓͈ͅ+ܪꞈ̛͚̱͙ͤ͒̚͘̕+ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ᠤە̸̡̛̣̰̲͒̋ͣ̊+ⵈˑͦͭ̈́̐͏̪̥̞͘͜+ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ꞈۂ̢̐̇̓͏̨͖̺̩+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜,ޙʹͪ̋ͧͭ͏͕̲̣́͘=[][ᚔꜘ̷̨̤̤̘̾͊̌͘͘+ʿՙ̴̡̫̫̮͋ͬ̓́͟+ᖦʼ̶̷̛̠̹̰ͧ̍̂+ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜],ꓸʺ̰̲͓̃̈́͑́͝͝=ޙʹͪ̋ͧͭ͏͕̲̣́͘[ᚐۂ̶̧̣̫̫̂̔͑̔͞͞],ˑە̢̥̘̗̋̂̈͟͠=''[ᚐۂ̶̧̣̫̫̂̔͑̔͞͞]+[],ㆵˌ̸ͪͮ̏͏̡̱̪̤͇͟=ˑە̢̥̘̗̋̂̈͟͠[ﾟ_ˇ̼̥̱͍́͊̀́͢͡+ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́],ᐦʹ̶̵̻̞̼̅͊͗͗̀=ˑە̢̥̘̗̋̂̈͟͠[ˇꜙ̡̢̛̩͙̣̄͂͗̕-ꓺꞈ͚͚̰̍̔ͬ̕͠͡],ʿ_ۚۚۚۚ=ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ꞈۂ̢̐̇̓͏̨͖̺̩+ㆵˌ̸ͪͮ̏͏̡̱̪̤͇͟+ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ʿՙ̴̡̫̫̮͋ͬ̓́͟+ꜘꓹ̧̄͒̓͝͏͓͈ͅ+ᐦʹ̶̵̻̞̼̅͊͗͗̀,བγ̷̸͓͖̦̝̈́̅̉̚͢͡=(ﾟ_ˇ̼̥̱͍́͊̀́͢͡+ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ˇꜙ̡̢̛̩͙̣̄͂͗̕)[ʿ_ۚۚۚۚ](ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝),ˈہ̶̩̹̬̑͊̆̄͠͠=[][ᚐۂ̶̧̣̫̫̂̔͑̔͞͞][ᚐۂ̶̧̣̫̫̂̔͑̔͞͞](ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆+ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ᠤە̸̡̛̣̰̲͒̋ͣ̊+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ꜘꓹ̧̄͒̓͝͏͓͈ͅ+ᠩꓻ̴̪̰͎̆́̆́͢+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆+ܪꞈ̛͚̱͙ͤ͒̚͘̕+ⵈˑͦͭ̈́̐͏̪̥̞͘͜+ᒽꜙ̴̹̙̞̾ͨ̈̀͟͠+བγ̷̸͓͖̦̝̈́̅̉̚͢͡+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆)(),ʺꜗ̣͖ͭ̉͌͟͞͞ͅ=ˈہ̶̩̹̬̑͊̆̄͠͠(''[ⵂا̵͂̀́͏̧̧̞̬̣+ʿՙ̴̡̫̫̮͋ͬ̓́͟+ᐦʹ̶̵̻̞̼̅͊͗͗̀]())[ꓺꞈ͚͚̰̍̔ͬ̕͠͡],ᔅʽ̴̧̩̪̲̩ͭ̒ͦͥ́=(ˇꜙ̡̢̛̩͙̣̄͂͗̕+ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ꓺꞈ͚͚̰̍̔ͬ̕͠͡)[ʿ_ۚۚۚۚ](ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝),ᖕꜚ̷̸̤̜͙͉̐̓̄͞=(ˇꜙ̡̢̛̩͙̣̄͂͗̕+ﾟ_ˇ̼̥̱͍́͊̀́͢͡)[ʿ_ۚۚۚۚ](ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝),ᑉʼ̷̨͔̩̼̿ͫͮ̀=(ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝-ﾟ_ˇ̼̥̱͍́͊̀́͢͡)[ʿ_ۚۚۚۚ](ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝),ʿᶥ̛͔͎̱ͧ̍ͮ͞͡=''[ᚐۂ̶̧̣̫̫̂̔͑̔͞͞][ᚔꜘ̷̨̤̤̘̾͊̌͘͘+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ꞈۂ̢̐̇̓͏̨͖̺̩+ᔅʽ̴̧̩̪̲̩ͭ̒ͦͥ́+ʺꜗ̣͖ͭ̉͌͟͞͞ͅ+ᖕꜚ̷̸̤̜͙͉̐̓̄͞+ᒽꜙ̴̹̙̞̾ͨ̈̀͟͠+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ʺꜗ̣͖ͭ̉͌͟͞͞ͅ+ꞈۂ̢̐̇̓͏̨͖̺̩+ᠸꜚ̎̐ͯ͏̧̻̹̲̀+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆],ꜚᵕ̶̙̞̲ͦͨͦ͡͠=ꓸʺ̰̲͓̃̈́͑́͝͝(ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆+ᖦꙿ̸̧̦͕̲̠̓̍ͩ̅͢+ᠤە̸̡̛̣̰̲͒̋ͣ̊+ᠧۃ̢̧͇̙̤ͨ͂ͯ͜+ꜘꓹ̧̄͒̓͝͏͓͈ͅ+ᠩꓻ̴̪̰͎̆́̆́͢+ﾞۀ̶̡̧̯̗͕̱ͮ̽͆+ᑉʼ̷̨͔̩̼̿ͫͮ̀+ᒽꜙ̴̹̙̞̾ͨ̈̀͟͠+ᖦʼ̶̷̛̠̹̰ͧ̍̂)(),ꓽꓻ̷̠̻̔ͬ̾́͟ͅ=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ˇꜙ̡̢̛̩͙̣̄͂͗̕|ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ﾟ_ˇ̼̥̱͍́͊̀́͢͡,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ=ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ۂʿ̧̨̛̖̙̭ͧ̔̋̽=ᵕˇ̶̰̻̘̇ͩ͑̀͘+ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ꓺꞈ͚͚̰̍̔ͬ̕͠͡,יᵔ̴ͮ̿́̀͏͔̯͍̻=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ˇꜙ̡̢̛̩͙̣̄͂͗̕+ᵕˇ̶̰̻̘̇ͩ͑̀͘,ᖟۂ̶̔̏ͯ͂́͏̞̱̬͟=ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᔉہ̳̗̜ͬ͒̓̓̀̀͘|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᵕˇ̶̰̻̘̇ͩ͑̀͘,ᡪا̸̧̤̗͕ͫ͒̓͊́͝=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ꓺꞈ͚͚̰̍̔ͬ̕͠͡,ꜗۃ̝͉̗ͭ̇ͭ̕͝͝=ᵕˇ̶̰̻̘̇ͩ͑̀͘|ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ˇꜙ̡̢̛̩͙̣̄͂͗̕|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᓒە̶̮̭̝̪̌ͬ̆̕͠=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ᠰꓻ̢̭̮̰̞̇̒͑͟͞=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ﾟ_ˇ̼̥̱͍́͊̀́͢͡+ᵕˇ̶̰̻̘̇ͩ͑̀͘,ܝʿ͗͑ͮ̅̕͏̟̻̞̭͢͝=ﾟ_ˇ̼̥̱͍́͊̀́͢͡+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́,ᶥء̎̆̂͏̴̶̡̪̙͙̯=ˇꜙ̡̢̛̩͙̣̄͂͗̕+ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ᵕˇ̶̰̻̘̇ͩ͑̀͘|ﾟ_ˇ̼̥̱͍́͊̀́͢͡,ہꓸ̶̨̧̺͈̭̀̈́ͩ̀=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ˇꜙ̡̢̛̩͙̣̄͂͗̕,ۃا̶̢͉̱̮̃̎̍̕=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ᵕˇ̶̰̻̘̇ͩ͑̀͘|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ꧦˈ̷̛̭̝̼̂͑̎͜=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᠵˆ̴̧̠̣̪̜ͭ͊ͧ͠=ᵕˇ̶̰̻̘̇ͩ͑̀͘|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ꓺꞈ͚͚̰̍̔ͬ̕͠͡|ˇꜙ̡̢̛̩͙̣̄͂͗̕,ꜘˑ̧̼͓͈̈́̔̈̓͢͢͠=ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,އꓻ̸̨̢͖̯̦͌̄ͪ=ᵕˇ̶̰̻̘̇ͩ͑̀͘|ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ᣞͺ̸̳̝̜̇̏͐̕͘=ᵕˇ̶̰̻̘̇ͩ͑̀͘+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᢦ_᷂᷂ʼ̨ͭ̇̐͏͏͖͓͉=ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ˇꜙ̡̢̛̩͙̣̄͂͗̕|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ꓺꞈ͚͚̰̍̔ͬ̕͠͡,ᐝγ̴̭̻̜̍͐͆̊͘͞͠=ꓺꞈ͚͚̰̍̔ͬ̕͠͡|ﾟ_ˇ̼̥̱͍́͊̀́͢͡+ᵕˇ̶̰̻̘̇ͩ͑̀͘+ˇꜙ̡̢̛̩͙̣̄͂͗̕,ᠲە̛͓̬͇̻̎̉̀̀͘=ᔉہ̳̗̜ͬ͒̓̓̀̀͘|ᵕˇ̶̰̻̘̇ͩ͑̀͘|ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᣟۃ̵̖̥̗̜ͥ̌ͦ̅͢͟=ˇꜙ̡̢̛̩͙̣̄͂͗̕|ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ᵕˇ̶̰̻̘̇ͩ͑̀͘|ﾟ_ˇ̼̥̱͍́͊̀́͢͡,ᐥꞈ̡̛̥͓̟͒̀̾̕=ꓺꞈ͚͚̰̍̔ͬ̕͠͡|ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ꜗꙿ̢̛̙̞͖̈̔͆́͝=ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ߨ_ัััʼ̝̘̝ͫ̇́̚͘͞=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ᵕˇ̶̰̻̘̇ͩ͑̀͘|ꓺꞈ͚͚̰̍̔ͬ̕͠͡,ᠥۂ̶̸̨̦̜̖͙̾ͯ͛=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᵕˇ̶̰̻̘̇ͩ͑̀͘+ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ˇꜙ̡̢̛̩͙̣̄͂͗̕,າʾ̔ͣ̐ͧ͏̞̣̘͟͞=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᵕˇ̶̰̻̘̇ͩ͑̀͘,ᡕꓹ̸̷͎͉͔̄͗̐͜=ᵕˇ̶̰̻̘̇ͩ͑̀͘,ᒽʿ̸̛̭̜̩̑̿͒͒̕=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ᵕˇ̶̰̻̘̇ͩ͑̀͘|ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ˇꜙ̡̢̛̩͙̣̄͂͗̕,ᠫ_۠ۃ̴̈́͆̍͂͏̫͈̟̕ͅ=ᔉہ̳̗̜ͬ͒̓̓̀̀͘|ᵕˇ̶̰̻̘̇ͩ͑̀͘|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᒽˌ̵̷̰̱̖̋ͯͦ͜=ᵕˇ̶̰̻̘̇ͩ͑̀͘|ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ꓺʹ̷̗͈͉͐̑̚͘͟=ꓺꞈ͚͚̰̍̔ͬ̕͠͡|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ᵕˇ̶̰̻̘̇ͩ͑̀͘,ᠥء̮̭͖͂ͭͩ͠͡͞=ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ꓺꞈ͚͚̰̍̔ͬ̕͠͡|ˇꜙ̡̢̛̩͙̣̄͂͗̕|ᵕˇ̶̰̻̘̇ͩ͑̀͘+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᖕʹ̵͙̪̫̾ͩ͂̎̕͠=ᵕˇ̶̰̻̘̇ͩ͑̀͘+ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᔉہ̳̗̜ͬ͒̓̓̀̀͘|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ꞈᵕ̡͖̙̙̦ͪ̅ͪ̕͘=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ꓺꞈ͚͚̰̍̔ͬ̕͠͡+ᵕˇ̶̰̻̘̇ͩ͑̀͘+ﾟ_ˇ̼̥̱͍́͊̀́͢͡,ꧦꓻ̶̷̵͓̖̘̇̋ͮ͝=ꓺꞈ͚͚̰̍̔ͬ̕͠͡|ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝+ﾟ_ˇ̼̥̱͍́͊̀́͢͡+ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞=ᵕˇ̶̰̻̘̇ͩ͑̀͘|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᔉہ̳̗̜ͬ͒̓̓̀̀͘,ᔅʽ̷̡̭͓̼̉̊̃͢=ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ᔉہ̳̗̜ͬ͒̓̓̀̀͘|ˇꜙ̡̢̛̩͙̣̄͂͗̕,ᢏꜗ̵̷̪͖̻̄̽̆̕͠ͅ=ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ˇꜙ̡̢̛̩͙̣̄͂͗̕|ᵕˇ̶̰̻̘̇ͩ͑̀͘+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᠤ_ࣶՙ̨̧̩͉͎͖ͭͯͫ́=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́+ˇꜙ̡̢̛̩͙̣̄͂͗̕+ﾟ_ˇ̼̥̱͍́͊̀́͢͡|ᔉہ̳̗̜ͬ͒̓̓̀̀͘+ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝,ᢏꓺ̨͛̐̍́͏̞̤̞=ᱺˌ̷̵̨̟̤̜̆ͬ̓̑́|ᱸٴ̶͖͈̺̖̈́̂͒̍͘͝|ˇꜙ̡̢̛̩͙̣̄͂͗̕|ꓺꞈ͚͚̰̍̔ͬ̕͠͡;ꜚᵕ̶̙̞̲ͦͨͦ͡͠(ʿᶥ̛͔͎̱ͧ̍ͮ͞͡(ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᠤ_ࣶՙ̨̧̩͉͎͖ͭͯͫ́,ߨ_ัััʼ̝̘̝ͫ̇́̚͘͞,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᠥء̮̭͖͂ͭͩ͠͡͞,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᐥꞈ̡̛̥͓̟͒̀̾̕,ꞈᵕ̡͖̙̙̦ͪ̅ͪ̕͘,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ᒽʿ̸̛̭̜̩̑̿͒͒̕,ᐝγ̴̭̻̜̍͐͆̊͘͞͠,ᒽʿ̸̛̭̜̩̑̿͒͒̕,ᠵˆ̴̧̠̣̪̜ͭ͊ͧ͠,າʾ̔ͣ̐ͧ͏̞̣̘͟͞,ۃا̶̢͉̱̮̃̎̍̕,ꞈᵕ̡͖̙̙̦ͪ̅ͪ̕͘,ꧦˈ̷̛̭̝̼̂͑̎͜,ꜘˑ̧̼͓͈̈́̔̈̓͢͢͠,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᐥꞈ̡̛̥͓̟͒̀̾̕,ہꓸ̶̨̧̺͈̭̀̈́ͩ̀,ᡕꓹ̸̷͎͉͔̄͗̐͜,ᒽˌ̵̷̰̱̖̋ͯͦ͜,ᠵˆ̴̧̠̣̪̜ͭ͊ͧ͠,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ᠲە̛͓̬͇̻̎̉̀̀͘,ꜘˑ̧̼͓͈̈́̔̈̓͢͢͠,ܝʿ͗͑ͮ̅̕͏̟̻̞̭͢͝,ꓽꓻ̷̠̻̔ͬ̾́͟ͅ,ᡪا̸̧̤̗͕ͫ͒̓͊́͝,ꓺʹ̷̗͈͉͐̑̚͘͟,ᠤ_ࣶՙ̨̧̩͉͎͖ͭͯͫ́,ᐝγ̴̭̻̜̍͐͆̊͘͞͠,ᒽʿ̸̛̭̜̩̑̿͒͒̕,ᠵˆ̴̧̠̣̪̜ͭ͊ͧ͠,າʾ̔ͣ̐ͧ͏̞̣̘͟͞,ۃا̶̢͉̱̮̃̎̍̕,ꞈᵕ̡͖̙̙̦ͪ̅ͪ̕͘,ꧦˈ̷̛̭̝̼̂͑̎͜,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ܝʿ͗͑ͮ̅̕͏̟̻̞̭͢͝,ᐥꞈ̡̛̥͓̟͒̀̾̕,ᠵˆ̴̧̠̣̪̜ͭ͊ͧ͠,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,יᵔ̴ͮ̿́̀͏͔̯͍̻,ᖕʹ̵͙̪̫̾ͩ͂̎̕͠,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ۂʿ̧̨̛̖̙̭ͧ̔̋̽,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ꧦˈ̷̛̭̝̼̂͑̎͜,ꧦꓻ̶̷̵͓̖̘̇̋ͮ͝,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᢏꜗ̵̷̪͖̻̄̽̆̕͠ͅ,ᢏꜗ̵̷̪͖̻̄̽̆̕͠ͅ,ۂʿ̧̨̛̖̙̭ͧ̔̋̽,ۂʿ̧̨̛̖̙̭ͧ̔̋̽,ꧦꓻ̶̷̵͓̖̘̇̋ͮ͝,ᓒە̶̮̭̝̪̌ͬ̆̕͠,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᒽˌ̵̷̰̱̖̋ͯͦ͜,ᒽˌ̵̷̰̱̖̋ͯͦ͜,ᢏꜗ̵̷̪͖̻̄̽̆̕͠ͅ,ᢏꜗ̵̷̪͖̻̄̽̆̕͠ͅ,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ,ܝʿ͗͑ͮ̅̕͏̟̻̞̭͢͝,ᡪا̸̧̤̗͕ͫ͒̓͊́͝,ۂʿ̧̨̛̖̙̭ͧ̔̋̽,ᠤ_ࣶՙ̨̧̩͉͎͖ͭͯͫ́,ᣞͺ̸̳̝̜̇̏͐̕͘,ᠫ_۠ۃ̴̈́͆̍͂͏̫͈̟̕ͅ,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᒽʿ̸̛̭̜̩̑̿͒͒̕,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᢏꓺ̨͛̐̍́͏̞̤̞,ꓽꓻ̷̠̻̔ͬ̾́͟ͅ,ꓺʹ̷̗͈͉͐̑̚͘͟,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᶥء̎̆̂͏̴̶̡̪̙͙̯,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ᢦ_᷂᷂ʼ̨ͭ̇̐͏͏͖͓͉,ᔅʽ̷̡̭͓̼̉̊̃͢,ᓒە̶̮̭̝̪̌ͬ̆̕͠,ꜗꙿ̢̛̙̞͖̈̔͆́͝,ᣟۃ̵̖̥̗̜ͥ̌ͦ̅͢͟,ߨ_ัััʼ̝̘̝ͫ̇́̚͘͞,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᠥء̮̭͖͂ͭͩ͠͡͞,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᐥꞈ̡̛̥͓̟͒̀̾̕,ꓺʹ̷̗͈͉͐̑̚͘͟,ᠰꓻ̢̭̮̰̞̇̒͑͟͞,ᶥء̎̆̂͏̴̶̡̪̙͙̯,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ᢦ_᷂᷂ʼ̨ͭ̇̐͏͏͖͓͉,ᔅʽ̷̡̭͓̼̉̊̃͢,އꓻ̸̨̢͖̯̦͌̄ͪ,ۃا̶̢͉̱̮̃̎̍̕,ۂʿ̧̨̛̖̙̭ͧ̔̋̽,ᖟۂ̶̔̏ͯ͂́͏̞̱̬͟,ᠫ_۠ۃ̴̈́͆̍͂͏̫͈̟̕ͅ,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ꧦˈ̷̛̭̝̼̂͑̎͜,ꓺʹ̷̗͈͉͐̑̚͘͟,ܝʿ͗͑ͮ̅̕͏̟̻̞̭͢͝,ꜗۃ̝͉̗ͭ̇ͭ̕͝͝,ᓒە̶̮̭̝̪̌ͬ̆̕͠,ᣟۃ̵̖̥̗̜ͥ̌ͦ̅͢͟,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ,ᒽʿ̸̛̭̜̩̑̿͒͒̕,ᠥۂ̶̸̨̦̜̖͙̾ͯ͛,יᵔ̴ͮ̿́̀͏͔̯͍̻,ᠩۃ̶̩̼̖̝̔̍ͣ̚͟͞,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ,ᢏꓺ̨͛̐̍́͏̞̤̞,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ,ᔇʻ̧̰̜̐ͩͩ͠͝ͅ,ꜗۃ̝͉̗ͭ̇ͭ̕͝͝,ᣞͺ̸̳̝̜̇̏͐̕͘))})();c\n</js>",
      "coverUrl": "<js>\n(()=>{var ᢏᵔ̸̢͈̟ͯ̾̂̕͢ͅ='ᢏγ̧̪̟̖̘̽ͦ͛́̀͞'&'ޢꞈ̵̷͖̣͎̙̑ͬ̚͘',ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡=-~'ءꓺ̴̄͂̂͟͏̻̱͕͘',ངʼ̳̦̙̼̏ͭͮͩ̀̀͠=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡-~'ޙꜗͭͧ̑',ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠=ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔=ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠*ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,יʺ̶̵̧̤͕̭͌ͭͯ̔͠=ངʼ̳̦̙̼̏ͭͮͩ̀̀͠*ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠*ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,ꓺە̶͇̪̫ͩ͋͆͘͝=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔*ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠,ᑉˑ̲̟̜͔̏̐͑̕͢͡=ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠*יʺ̶̵̧̤͕̭͌ͭͯ̔͠,ᓐγ̶͔̱͔̾͛ͮ̽̕͢=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔*ངʼ̳̦̙̼̏ͭͮͩ̀̀͠*ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔,ᔊʻ̵̴̢̮̝̪̍̾͛̐=ᑉˑ̲̟̜͔̏̐͑̕͢͡*ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠,ᖕꙿ̸̃̔͒̕͜͏͙̝ͅ=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔*ᑉˑ̲̟̜͔̏̐͑̕͢͡,ᶥʽ̴̨̝͔̫̃̏͌́̚=ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠*ᔊʻ̵̴̢̮̝̪̍̾͛̐,ᠵꜙ̷̢̝̦͕͉͐̽̽͡=ᑉˑ̲̟̜͔̏̐͑̕͢͡*ꓺە̶͇̪̫ͩ͋͆͘͝,ᠦꓸ̧͈̤̦̘ͪͤ̂̀́=ᔊʻ̵̴̢̮̝̪̍̾͛̐*יʺ̶̵̧̤͕̭͌ͭͯ̔͠,ˑʺ̷̴̶̖̤̙ͤ͊ͩ̋͝=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔*ᶥʽ̴̨̝͔̫̃̏͌́̚,ᣞꞈ̡̛͍̟͙̺̉̔́ͨ̀͢=ꓺە̶͇̪̫ͩ͋͆͘͝*ᖕꙿ̸̃̔͒̕͜͏͙̝ͅ,ᣞە͒̊̂͏̸̢̯̤͙͍=ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠*ˑʺ̷̴̶̖̤̙ͤ͊ͩ̋͝,ᶥʹ̴͉͉̟ͩ̐̑͊͟͞=!ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡+[],ˈꓼ̷̷̨̣̤̳͔͐̓͛͟=ᶥʹ̴͉͉̟ͩ̐̑͊͟͞[ᢏᵔ̸̢͈̟ͯ̾̂̕͢ͅ],ཋʻ͋̍̏̊͟͢͏̠̟͈͚͘=ˈꓼ̷̷̨̣̤̳͔͐̓͛͟[ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡]+[],ہʺ̽͐ͣ͠͞͏̢̯̖͉=ᶥʹ̴͉͉̟ͩ̐̑͊͟͞[ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ءꓻ̴̛̛̱̯̤̎̇̚=ᶥʹ̴͉͉̟ͩ̐̑͊͟͞[ངʼ̳̦̙̼̏ͭͮͩ̀̀͠],ߨꓺ̢ͬ̇͒̽͠͏̟͔̜͟=ᶥʹ̴͉͉̟ͩ̐̑͊͟͞[ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜=ᶥʹ̴͉͉̟ͩ̐̑͊͟͞[ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠],ᑉꜗ̢͇̺́ͦ̐̒̀͘ͅ=ཋʻ͋̍̏̊͟͢͏̠̟͈͚͘[ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ہꓹ̒͒ͫ̆͏̴̝̦̦́ͅ=[]+{},ᠰʺ̷̷̴̨̩̞̂ͫ̓ͅ=ہꓹ̒͒ͫ̆͏̴̝̦̦́ͅ[ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ᠷˑ̷̏̇̄̑͏̶̡̞̼̙=ہꓹ̒͒ͫ̆͏̴̝̦̦́ͅ[ངʼ̳̦̙̼̏ͭͮͩ̀̀͠],ᔇە̴̨̲̱̺̹̃͂̽͝=ཋʻ͋̍̏̊͟͢͏̠̟͈͚͘[ᢏᵔ̸̢͈̟ͯ̾̂̕͢ͅ],ᠺꓹ̸̵̡͖̫͖̈́͐̅ͨ=ཋʻ͋̍̏̊͟͢͏̠̟͈͚͘[ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ⵂء̶̢͍̗̦͎ͣ̀̿́͟=(!ᢏᵔ̸̢͈̟ͯ̾̂̕͢ͅ+[])[ᢏᵔ̸̢͈̟ͯ̾̂̕͢ͅ],ᐦʹ̵̶͈̙͓͙ͯͥͥ͟͞=ہꓹ̒͒ͫ̆͏̴̝̦̦́ͅ[ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ⵓꙿ̵̧͇̳͈ͪ͛̔́͞=ہꓹ̒͒ͫ̆͏̴̝̦̦́ͅ[ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔-ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ⴰۂ̶͙͚̼̂̈ͧ́͘͜=ཋʻ͋̍̏̊͟͢͏̠̟͈͚͘[ངʼ̳̦̙̼̏ͭͮͩ̀̀͠],ꓽʺ̵̢̝̰̖ͧ̇͌͘=(!ᢏᵔ̸̢͈̟ͯ̾̂̕͢ͅ+[])[ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡],ᢜꜘ̶̢̧̤̥̪ͫ͋͆ͧ͢=ᠰʺ̷̷̴̨̩̞̂ͫ̓ͅ+ᐦʹ̵̶͈̙͓͙ͯͥͥ͟͞+ᠺꓹ̸̵̡͖̫͖̈́͐̅ͨ+ߨꓺ̢ͬ̇͒̽͠͏̟͔̜͟+ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᔇە̴̨̲̱̺̹̃͂̽͝+ᠰʺ̷̷̴̨̩̞̂ͫ̓ͅ+ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ᐦʹ̵̶͈̙͓͙ͯͥͥ͟͞+ꓽʺ̵̢̝̰̖ͧ̇͌͘,ꧦꞈ̢̼͎̗̎͆ͬ͐͘͠ͅ=[][ˈꓼ̷̷̨̣̤̳͔͐̓͛͟+ᑉꜗ̢͇̺́ͦ̐̒̀͘ͅ+ءꓻ̴̛̛̱̯̤̎̇̚+ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜+ꓽʺ̵̢̝̰̖ͧ̇͌͘],ʻء̴̧̖̻͕̀̌ͬͧ͟=ꧦꞈ̢̼͎̗̎͆ͬ͐͘͠ͅ[ᢜꜘ̶̢̧̤̥̪ͫ͋͆ͧ͢],ꓼᵔͫ̔ͭ͏̧͍̣̬̪͝=''[ᢜꜘ̶̢̧̤̥̪ͫ͋͆ͧ͢]+[],ˑا̵͍͓̃ͮ̏̇́͠ͅͅ=ꓼᵔͫ̔ͭ͏̧͍̣̬̪͝[ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡+ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔],ʺۂ̶̨̢̤̪̽̿̊ͅ=ꓼᵔͫ̔ͭ͏̧͍̣̬̪͝[יʺ̶̵̧̤͕̭͌ͭͯ̔͠-ངʼ̳̦̙̼̏ͭͮͩ̀̀͠],ᚑꜗ̣͙̤̻̄͌ͭ͘͘͞=ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ᐦʹ̵̶͈̙͓͙ͯͥͥ͟͞+ˑا̵͍͓̃ͮ̏̇́͠ͅͅ+ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᑉꜗ̢͇̺́ͦ̐̒̀͘ͅ+ᠺꓹ̸̵̡͖̫͖̈́͐̅ͨ+ʺۂ̶̨̢̤̪̽̿̊ͅ,ʿا̵͉͖͙̻͗͒̇̀͞=(ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡+ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔+יʺ̶̵̧̤͕̭͌ͭͯ̔͠)[ᚑꜗ̣͙̤̻̄͌ͭ͘͘͞](ꓺە̶͇̪̫ͩ͋͆͘͝),ⴾꓽ̷̶̨̠͙̮͂̔̎́=[][ᢜꜘ̶̢̧̤̥̪ͫ͋͆ͧ͢][ᢜꜘ̶̢̧̤̥̪ͫ͋͆ͧ͢](ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜+ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ᔇە̴̨̲̱̺̹̃͂̽͝+ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᠺꓹ̸̵̡͖̫͖̈́͐̅ͨ+ⵓꙿ̵̧͇̳͈ͪ͛̔́͞+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜+ߨꓺ̢ͬ̇͒̽͠͏̟͔̜͟+ᠰʺ̷̷̴̨̩̞̂ͫ̓ͅ+ہʺ̽͐ͣ͠͞͏̢̯̖͉+ʿا̵͉͖͙̻͗͒̇̀͞+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜)(),ᢏʽ͑̉̉͝͏̘̝̦́=ⴾꓽ̷̶̨̠͙̮͂̔̎́(''[ᠷˑ̷̏̇̄̑͏̶̡̞̼̙+ᑉꜗ̢͇̺́ͦ̐̒̀͘ͅ+ʺۂ̶̨̢̤̪̽̿̊ͅ]())[ངʼ̳̦̙̼̏ͭͮͩ̀̀͠],ⵈᵕ̸͎̼̹̼͆͒͆́́͡=(יʺ̶̵̧̤͕̭͌ͭͯ̔͠+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠)[ᚑꜗ̣͙̤̻̄͌ͭ͘͘͞](ꓺە̶͇̪̫ͩ͋͆͘͝),ヽꓽ̨̛̯̥̝̓̀̒͞=(יʺ̶̵̧̤͕̭͌ͭͯ̔͠+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡)[ᚑꜗ̣͙̤̻̄͌ͭ͘͘͞](ꓺە̶͇̪̫ͩ͋͆͘͝),ᠫꓸ̷̧͚̫̤̥̎̔̓͡=(ꓺە̶͇̪̫ͩ͋͆͘͝-ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡)[ᚑꜗ̣͙̤̻̄͌ͭ͘͘͞](ꓺە̶͇̪̫ͩ͋͆͘͝),ᒼꙿ̷̵̵̶̰̖͔̾̉͆=''[ᢜꜘ̶̢̧̤̥̪ͫ͋͆ͧ͢][ˈꓼ̷̷̨̣̤̳͔͐̓͛͟+ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᐦʹ̵̶͈̙͓͙ͯͥͥ͟͞+ⵈᵕ̸͎̼̹̼͆͒͆́́͡+ᢏʽ͑̉̉͝͏̘̝̦́+ヽꓽ̨̛̯̥̝̓̀̒͞+ہʺ̽͐ͣ͠͞͏̢̯̖͉+ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᢏʽ͑̉̉͝͏̘̝̦́+ᐦʹ̵̶͈̙͓͙ͯͥͥ͟͞+ⴰۂ̶͙͚̼̂̈ͧ́͘͜+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜],ʻꓻ̭̘̯̺ͮ̆̽͢͝͝=ʻء̴̧̖̻͕̀̌ͬͧ͟(ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜+ⵂء̶̢͍̗̦͎ͣ̀̿́͟+ᔇە̴̨̲̱̺̹̃͂̽͝+ꓽʺ̵̢̝̰̖ͧ̇͌͘+ᠺꓹ̸̵̡͖̫͖̈́͐̅ͨ+ⵓꙿ̵̧͇̳͈ͪ͛̔́͞+ᠴꓻ̷̴̛͖͙̙͋ͪ͑̆͜+ᠫꓸ̷̧͚̫̤̥̎̔̓͡+ہʺ̽͐ͣ͠͞͏̢̯̖͉+ءꓻ̴̛̛̱̯̤̎̇̚)(),ヽꓼ̵͓̖͕̺̏̿ͧ͘͝=יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ᑉˑ̲̟̜͔̏̐͑̕͢͡+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,ྋ_۬ꜗ̸͎͚͈̈͑̀͟͡=ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔+ᑉˑ̲̟̜͔̏̐͑̕͢͡+ꓺە̶͇̪̫ͩ͋͆͘͝,ᡪ_ؐؐؐؐ=ᑉˑ̲̟̜͔̏̐͑̕͢͡,ܖʽ̨̛̟̗͈̀̑̄ͯ͜=יʺ̶̵̧̤͕̭͌ͭͯ̔͠+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ꓺە̶͇̪̫ͩ͋͆͘͝|ᑉˑ̲̟̜͔̏̐͑̕͢͡,ܕʽ̷̵͖̖̤̒̽̉̀=ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ꓺە̶͇̪̫ͩ͋͆͘͝|יʺ̶̵̧̤͕̭͌ͭͯ̔͠,ⵓꜗ̨̛̣͍̱̣̓̋̌́=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ᑉˑ̲̟̜͔̏̐͑̕͢͡+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ꓺە̶͇̪̫ͩ͋͆͘͝,ᚔˑ͓͇̯̓ͧ̅́́̕=יʺ̶̵̧̤͕̭͌ͭͯ̔͠+ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ꓺە̶͇̪̫ͩ͋͆͘͝,ᐟꜙ̛̖͚̞̅ͫ̍ͣ̕͝=יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|ꓺە̶͇̪̫ͩ͋͆͘͝,ཋە̨̩̼̙͚͛͑͆̀͢=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,ܯʾ̢̛͎̬̹ͤ̒̏͜=יʺ̶̵̧̤͕̭͌ͭͯ̔͠+ᑉˑ̲̟̜͔̏̐͑̕͢͡|ꓺە̶͇̪̫ͩ͋͆͘͝|ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡,ᠻˇ̛͔̫̙͆ͫ̾͢͠=ꓺە̶͇̪̫ͩ͋͆͘͝+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ᑉˑ̲̟̜͔̏̐͑̕͢͡+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡,މꙿ͕͇̘̉͒̎ͧ̕͞͡=ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ꓺە̶͇̪̫ͩ͋͆͘͝,ꜚꜚ̴̵̝̞͎͔̿̏̋͘͘=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ꓺە̶͇̪̫ͩ͋͆͘͝+ᑉˑ̲̟̜͔̏̐͑̕͢͡,ՙγ̫̳͔̾̊̑̆͜͞͞=ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ꓺە̶͇̪̫ͩ͋͆͘͝,າꜗ̸̡̥̩͉ͧ͆ͭ͞ͅ=ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ꓺە̶͇̪̫ͩ͋͆͘͝,ᔉˑͣ̃̇͘͏̖̫̟̰͞=ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ᑉˑ̲̟̜͔̏̐͑̕͢͡+יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ꓺە̶͇̪̫ͩ͋͆͘͝,ﾞꓽ̸̧̛͙̬̙ͯͦ̊=ᑉˑ̲̟̜͔̏̐͑̕͢͡|יʺ̶̵̧̤͕̭͌ͭͯ̔͠+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔,ᱺꜗ̴̨̰̣̣̈̉͋͡͞=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ꓺە̶͇̪̫ͩ͋͆͘͝,ܕʺ̍͛ͩ͡͏͏̞̥̥=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ꓺە̶͇̪̫ͩ͋͆͘͝|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔,ﾞ__҆҆=ꓺە̶͇̪̫ͩ͋͆͘͝+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠,ۃˑ̷̤͖͍͛ͩͦͥ͢͟͞=יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ꓺە̶͇̪̫ͩ͋͆͘͝,ʾ_ͧͧͧ=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔+ꓺە̶͇̪̫ͩ͋͆͘͝,ྋꓼ͕̼̤͗̈́̉̊̀͘͟=ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ꓺە̶͇̪̫ͩ͋͆͘͝+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡,ˇʼ̷̡̘̤̝̘̽ͯ̃͜=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ᑉˑ̲̟̜͔̏̐͑̕͢͡+ꓺە̶͇̪̫ͩ͋͆͘͝,ꓽʿ̨̢̮̬̝̓͌ͬͦ͜͝=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔+ꓺە̶͇̪̫ͩ͋͆͘͝|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠,ᔊʻ̸̸̺̗̣̑̆ͧ͘=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡+ᑉˑ̲̟̜͔̏̐͑̕͢͡|ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠+ངʼ̳̦̙̼̏ͭͮͩ̀̀͠+ꓺە̶͇̪̫ͩ͋͆͘͝,γʿ̵͎̜̖ͬͭ͐͘̕͟=ᑉˑ̲̟̜͔̏̐͑̕͢͡+ꓺە̶͇̪̫ͩ͋͆͘͝+ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡,ᖮʿ̶̬̥̭͐͒̚͞͡͡ͅ=ꓺە̶͇̪̫ͩ͋͆͘͝+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔,ˈꓻ̨̛̘͈͎͑̿ͯ̀͢=ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|ᑉˑ̲̟̜͔̏̐͑̕͢͡|ꓺە̶͇̪̫ͩ͋͆͘͝,ᔊꓽ̵̛̱̙̬͒ͭ̿͘=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ꓺە̶͇̪̫ͩ͋͆͘͝+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠|ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|יʺ̶̵̧̤͕̭͌ͭͯ̔͠,ᵔꓻ̴̧̜̼̠̌̌ͦ͜=יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ᑉˑ̲̟̜͔̏̐͑̕͢͡+ꓺە̶͇̪̫ͩ͋͆͘͝,ㆵء̙̹͈̍ͥ̃͋̀͢͜=ꓺە̶͇̪̫ͩ͋͆͘͝+ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔,ᓐۀͭͥ̇́͏̸̷̻̮ͅ=ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ꓺە̶͇̪̫ͩ͋͆͘͝+ᡃꜙ̵̪̰͉̮͒ͩ̅͟͠,ᒼۂ̷̨͚͇̟̓ͩͮ͟ͅ=ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔|ᑉˑ̲̟̜͔̏̐͑̕͢͡+ꓺە̶͇̪̫ͩ͋͆͘͝|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,ᖦʾ̵̧̢̲̹̬̓͌̚͡=ꓺە̶͇̪̫ͩ͋͆͘͝|ᐟ_ۂ̈̎̃͢͞͏̡̻̱͔+יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠,ᐞʻ̴̧̨̦̘̘́ͬ̽̓̕=ང_๊๊ᶥ̨̠̱͉̍͛̃͟͡|ངʼ̳̦̙̼̏ͭͮͩ̀̀͠|יʺ̶̵̧̤͕̭͌ͭͯ̔͠|ꓺە̶͇̪̫ͩ͋͆͘͝|ᑉˑ̲̟̜͔̏̐͑̕͢͡;ʻꓻ̭̘̯̺ͮ̆̽͢͝͝(ᒼꙿ̷̵̵̶̰̖͔̾̉͆(γʿ̵͎̜̖ͬͭ͐͘̕͟,ᔊꓽ̵̛̱̙̬͒ͭ̿͘,ᒼۂ̷̨͚͇̟̓ͩͮ͟ͅ,γʿ̵͎̜̖ͬͭ͐͘̕͟,ᚔˑ͓͇̯̓ͧ̅́́̕,γʿ̵͎̜̖ͬͭ͐͘̕͟,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᔊʻ̸̸̺̗̣̑̆ͧ͘,ՙγ̫̳͔̾̊̑̆͜͞͞,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,ヽꓼ̵͓̖͕̺̏̿ͧ͘͝,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,ᔉˑͣ̃̇͘͏̖̫̟̰͞,ྋꓼ͕̼̤͗̈́̉̊̀͘͟,ꜚꜚ̴̵̝̞͎͔̿̏̋͘͘,ᔊʻ̸̸̺̗̣̑̆ͧ͘,ㆵء̙̹͈̍ͥ̃͋̀͢͜,ﾞ__҆҆,ྋꓼ͕̼̤͗̈́̉̊̀͘͟,ⵓꜗ̨̛̣͍̱̣̓̋̌́,ᔊʻ̸̸̺̗̣̑̆ͧ͘,ᡪ_ؐؐؐؐ,ᐞʻ̴̧̨̦̘̘́ͬ̽̓̕,ᔉˑͣ̃̇͘͏̖̫̟̰͞,ᠻˇ̛͔̫̙͆ͫ̾͢͠,ﾞ__҆҆,ʾ_ͧͧͧ,ܕʽ̷̵͖̖̤̒̽̉̀,ཋە̨̩̼̙͚͛͑͆̀͢,ˈꓻ̨̛̘͈͎͑̿ͯ̀͢,ᔊꓽ̵̛̱̙̬͒ͭ̿͘,ヽꓼ̵͓̖͕̺̏̿ͧ͘͝,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,ᔉˑͣ̃̇͘͏̖̫̟̰͞,ྋꓼ͕̼̤͗̈́̉̊̀͘͟,ꜚꜚ̴̵̝̞͎͔̿̏̋͘͘,ᔊʻ̸̸̺̗̣̑̆ͧ͘,ㆵء̙̹͈̍ͥ̃͋̀͢͜,γʿ̵͎̜̖ͬͭ͐͘̕͟,ʾ_ͧͧͧ,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᔉˑͣ̃̇͘͏̖̫̟̰͞,ՙγ̫̳͔̾̊̑̆͜͞͞,ᵔꓻ̴̧̜̼̠̌̌ͦ͜,ྋ_۬ꜗ̸͎͚͈̈͑̀͟͡,γʿ̵͎̜̖ͬͭ͐͘̕͟,ᠻˇ̛͔̫̙͆ͫ̾͢͠,ՙγ̫̳͔̾̊̑̆͜͞͞,ㆵء̙̹͈̍ͥ̃͋̀͢͜,ܕʺ̍͛ͩ͡͏͏̞̥̥,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᱺꜗ̴̨̰̣̣̈̉͋͡͞,ᠻˇ̛͔̫̙͆ͫ̾͢͠,ꓽʿ̨̢̮̬̝̓͌ͬͦ͜͝,ᚔˑ͓͇̯̓ͧ̅́́̕,ՙγ̫̳͔̾̊̑̆͜͞͞,ᔉˑͣ̃̇͘͏̖̫̟̰͞,ﾞꓽ̸̧̛͙̬̙ͯͦ̊,ܕʺ̍͛ͩ͡͏͏̞̥̥,ㆵء̙̹͈̍ͥ̃͋̀͢͜,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᱺꜗ̴̨̰̣̣̈̉͋͡͞,ʾ_ͧͧͧ,ﾞꓽ̸̧̛͙̬̙ͯͦ̊,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᱺꜗ̴̨̰̣̣̈̉͋͡͞,ܕʺ̍͛ͩ͡͏͏̞̥̥,ᖮʿ̶̬̥̭͐͒̚͞͡͡ͅ,ﾞ__҆҆,ˇʼ̷̡̘̤̝̘̽ͯ̃͜,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,ᵔꓻ̴̧̜̼̠̌̌ͦ͜,ᐞʻ̴̧̨̦̘̘́ͬ̽̓̕,ᖦʾ̵̧̢̲̹̬̓͌̚͡,ܕʺ̍͛ͩ͡͏͏̞̥̥,ܕʺ̍͛ͩ͡͏͏̞̥̥,ᐞʻ̴̧̨̦̘̘́ͬ̽̓̕,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,γʿ̵͎̜̖ͬͭ͐͘̕͟,ܖʽ̨̛̟̗͈̀̑̄ͯ͜,ྋꓼ͕̼̤͗̈́̉̊̀͘͟,ᠻˇ̛͔̫̙͆ͫ̾͢͠,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,γʿ̵͎̜̖ͬͭ͐͘̕͟,γʿ̵͎̜̖ͬͭ͐͘̕͟,ˇʼ̷̡̘̤̝̘̽ͯ̃͜,ˇʼ̷̡̘̤̝̘̽ͯ̃͜,ܯʾ̢̛͎̬̹ͤ̒̏͜,ܯʾ̢̛͎̬̹ͤ̒̏͜,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᠻˇ̛͔̫̙͆ͫ̾͢͠,ꓽʿ̨̢̮̬̝̓͌ͬͦ͜͝,ⵓꜗ̨̛̣͍̱̣̓̋̌́,ܕʺ̍͛ͩ͡͏͏̞̥̥,າꜗ̸̡̥̩͉ͧ͆ͭ͞ͅ,ྋꓼ͕̼̤͗̈́̉̊̀͘͟,ྋ_۬ꜗ̸͎͚͈̈͑̀͟͡,ՙγ̫̳͔̾̊̑̆͜͞͞,ܕʺ̍͛ͩ͡͏͏̞̥̥,ᠻˇ̛͔̫̙͆ͫ̾͢͠,ꓽʿ̨̢̮̬̝̓͌ͬͦ͜͝,ᚔˑ͓͇̯̓ͧ̅́́̕,ՙγ̫̳͔̾̊̑̆͜͞͞,ᔉˑͣ̃̇͘͏̖̫̟̰͞,ܕʺ̍͛ͩ͡͏͏̞̥̥,މꙿ͕͇̘̉͒̎ͧ̕͞͡,ۃˑ̷̤͖͍͛ͩͦͥ͢͟͞,ᓐۀͭͥ̇́͏̸̷̻̮ͅ,ᐟꜙ̛̖͚̞̅ͫ̍ͣ̕͝,ՙγ̫̳͔̾̊̑̆͜͞͞,ˈꓻ̨̛̘͈͎͑̿ͯ̀͢,ᵔꓻ̴̧̜̼̠̌̌ͦ͜,ﾞ__҆҆,ʾ_ͧͧͧ,ܕʽ̷̵͖̖̤̒̽̉̀,ཋە̨̩̼̙͚͛͑͆̀͢,ˈꓻ̨̛̘͈͎͑̿ͯ̀͢))})();b\n</js>",
      "name": "h3@text"
    },
    "ruleToc": {
      "chapterList": "<js>\n(()=>{var ᐠۂ̢̢͙͙͇ͨ̋̓͘͘='བꙿ̸̢̮̪̭͛̍ͥ͡'&'ޣۀ̢͖̦̜̊ͤͤ̈̕͟',ᠺە̫͍͔̿͆̊̀̕͢=-~'ⵆꓼ̵̷̯̯̼̼̋ͬͣ͠',ᡕꜘ̴̥̪͔͗͋̔̕͜=ᠺە̫͍͔̿͆̊̀̕͢-~'ۃ_҃ꜘ̌',ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́=ᡕꜘ̴̥̪͔͗͋̔̕͜+ᡕꜘ̴̥̪͔͗͋̔̕͜,ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́*ᡕꜘ̴̥̪͔͗͋̔̕͜,ᣚۀ̧̧̺͔̖̓ͩ̈͞=ᡕꜘ̴̥̪͔͗͋̔̕͜*ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́*ᡕꜘ̴̥̪͔͗͋̔̕͜,ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠*ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́,ᔾە̴͈̻̖͙̎̂͂͘͝=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́*ᣚۀ̧̧̺͔̖̓ͩ̈͞,ᚒۃ̢̼̮̗ͨ͋́̚͜͝=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠*ᡕꜘ̴̥̪͔͗͋̔̕͜*ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠,ᚐʾ̷͖͉̘̲̇́̚͠͞=ᔾە̴͈̻̖͙̎̂͂͘͝*ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́,ᠰʿ̷̷̍̈̅͏͉̗̤͞ͅ=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠*ᔾە̴͈̻̖͙̎̂͂͘͝,ꞈۂ̵͎͉͚̔̂̍̕͜=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́*ᚐʾ̷͖͉̘̲̇́̚͠͞,ᢤٴ̴̱͔̗̳͑̿͑̽̀̀͞=ᔾە̴͈̻̖͙̎̂͂͘͝*ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ᡪء͍͚̠͖ͪ̄̑͝͞͡=ᚐʾ̷͖͉̘̲̇́̚͠͞*ᣚۀ̧̧̺͔̖̓ͩ̈͞,ᠺˇ̸̶̨̫̞͍̋͑͋̔=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠*ꞈۂ̵͎͉͚̔̂̍̕͜,ހᵔ̡̭̰̄ͤ̚͢͟ͅ=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢*ᠰʿ̷̷̍̈̅͏͉̗̤͞ͅ,ޢۂ̷̷̫̩̞̾̔̊͘͟=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́*ᠺˇ̸̶̨̫̞͍̋͑͋̔,ᒡՙ̢̨̺̼̺̥͂͑̊̌͢=!ᠺە̫͍͔̿͆̊̀̕͢+[],ᢜᵕ̴̛̱͉̣̘͂ͧ͐͌́=ᒡՙ̢̨̺̼̺̥͂͑̊̌͢[ᐠۂ̢̢͙͙͇ͨ̋̓͘͘],ㆶ_ۗʹ̴̰̪͓̔̒̅́́̚̕=ᢜᵕ̴̛̱͉̣̘͂ͧ͐͌́[ᠺە̫͍͔̿͆̊̀̕͢]+[],ꓸʽ̷̵̛̪͈̪̼̆̌̊̕=ᒡՙ̢̨̺̼̺̥͂͑̊̌͢[ᠺە̫͍͔̿͆̊̀̕͢],ⵂꓻ̸̛̘̲̹͐̽̅͟=ᒡՙ̢̨̺̼̺̥͂͑̊̌͢[ᡕꜘ̴̥̪͔͗͋̔̕͜],ⵆᶥ̷̨̯̣̩̰͌̊̍͠=ᒡՙ̢̨̺̼̺̥͂͑̊̌͢[ᡕꜘ̴̥̪͔͗͋̔̕͜+ᠺە̫͍͔̿͆̊̀̕͢],ʹꜗ̔͛̇͏̀͏̣̥͉=ᒡՙ̢̨̺̼̺̥͂͑̊̌͢[ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́],ܕꜙ̡̱̪̙͍ͯͤͯ̀́=ㆶ_ۗʹ̴̰̪͓̔̒̅́́̚̕[ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́+ᠺە̫͍͔̿͆̊̀̕͢],ᠴٴ̷̡͉͍̩̈͌ͬ͘=[]+{},ՙˌ̛͉̖̭͒͑ͧ́͢͡=ᠴٴ̷̡͉͍̩̈͌ͬ͘[ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́+ᠺە̫͍͔̿͆̊̀̕͢],ˌꜘ̴̛͔̺͎ͯ̊̚͘=ᠴٴ̷̡͉͍̩̈͌ͬ͘[ᡕꜘ̴̥̪͔͗͋̔̕͜],ۃʹ̷̹̲̊͌̒́̕͝ͅ=ㆶ_ۗʹ̴̰̪͓̔̒̅́́̚̕[ᐠۂ̢̢͙͙͇ͨ̋̓͘͘],ᛍꜚ̧͎̻̻ͤ̅ͦͮ̀͞=ㆶ_ۗʹ̴̰̪͓̔̒̅́́̚̕[ᠺە̫͍͔̿͆̊̀̕͢],ⴾٴ̶͓̻̟̤ͭͣ̄́͢=(!ᐠۂ̢̢͙͙͇ͨ̋̓͘͘+[])[ᐠۂ̢̢͙͙͇ͨ̋̓͘͘],ⵓʾ̴̧̗̝̠̟̓̆̚͘=ᠴٴ̷̡͉͍̩̈͌ͬ͘[ᠺە̫͍͔̿͆̊̀̕͢],ⵗ_ࣼʹ̴̛̠͕̬ͦ̔͊̉͞=ᠴٴ̷̡͉͍̩̈͌ͬ͘[ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠-ᠺە̫͍͔̿͆̊̀̕͢],ᓒ_ͥا̸͔̟̖̀͐̊͢͜=ㆶ_ۗʹ̴̰̪͓̔̒̅́́̚̕[ᡕꜘ̴̥̪͔͗͋̔̕͜],ᔉا̧̞̖̤͛̐ͤ͜͠͝=(!ᐠۂ̢̢͙͙͇ͨ̋̓͘͘+[])[ᠺە̫͍͔̿͆̊̀̕͢],ᢦᵕ̧̥̩̱̫̓̀̊͜͝=ՙˌ̛͉̖̭͒͑ͧ́͢͡+ⵓʾ̴̧̗̝̠̟̓̆̚͘+ᛍꜚ̧͎̻̻ͤ̅ͦͮ̀͞+ⵆᶥ̷̨̯̣̩̰͌̊̍͠+ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ᔉا̧̞̖̤͛̐ͤ͜͠͝+ۃʹ̷̹̲̊͌̒́̕͝ͅ+ՙˌ̛͉̖̭͒͑ͧ́͢͡+ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ⵓʾ̴̧̗̝̠̟̓̆̚͘+ᔉا̧̞̖̤͛̐ͤ͜͠͝,ᐟʻ̶̲̥͈̔̒͛͡͡=[][ᢜᵕ̴̛̱͉̣̘͂ͧ͐͌́+ܕꜙ̡̱̪̙͍ͯͤͯ̀́+ⵂꓻ̸̛̘̲̹͐̽̅͟+ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ʹꜗ̔͛̇͏̀͏̣̥͉+ᔉا̧̞̖̤͛̐ͤ͜͠͝],ⵓە̉͑ͭ͏̵̜͖͉̹͟=ᐟʻ̶̲̥͈̔̒͛͡͡[ᢦᵕ̧̥̩̱̫̓̀̊͜͝],ᡪۂ̫̲̙ͯ͊̏̆́͠͡ͅ=''[ᢦᵕ̧̥̩̱̫̓̀̊͜͝]+[],ᶥ_็ہ̴̵̶̡̩̲͖̟ͫ̄͊=ᡪۂ̫̲̙ͯ͊̏̆́͠͡ͅ[ᠺە̫͍͔̿͆̊̀̕͢+ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠],ᐠʹ̷̨̭͇̙͓ͮ̿̒̀̀=ᡪۂ̫̲̙ͯ͊̏̆́͠͡ͅ[ᣚۀ̧̧̺͔̖̓ͩ̈͞-ᡕꜘ̴̥̪͔͗͋̔̕͜],ˆꜗ̸̧͚͕͈̘̑́̏̏͜=ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ⵓʾ̴̧̗̝̠̟̓̆̚͘+ᶥ_็ہ̴̵̶̡̩̲͖̟ͫ̄͊+ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ᔉا̧̞̖̤͛̐ͤ͜͠͝+ܕꜙ̡̱̪̙͍ͯͤͯ̀́+ᛍꜚ̧͎̻̻ͤ̅ͦͮ̀͞+ᐠʹ̷̨̭͇̙͓ͮ̿̒̀̀,ˇˆ̷̰̠̤ͮ̾̌͟͢=(ᠺە̫͍͔̿͆̊̀̕͢+ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠+ᣚۀ̧̧̺͔̖̓ͩ̈͞)[ˆꜗ̸̧͚͕͈̘̑́̏̏͜](ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢),ⵗͺ̧̧̥̼͓̊͑̎̀=[][ᢦᵕ̧̥̩̱̫̓̀̊͜͝][ᢦᵕ̧̥̩̱̫̓̀̊͜͝](ᔉا̧̞̖̤͛̐ͤ͜͠͝+ʹꜗ̔͛̇͏̀͏̣̥͉+ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ۃʹ̷̹̲̊͌̒́̕͝ͅ+ᔉا̧̞̖̤͛̐ͤ͜͠͝+ᛍꜚ̧͎̻̻ͤ̅ͦͮ̀͞+ⵗ_ࣼʹ̴̛̠͕̬ͦ̔͊̉͞+ʹꜗ̔͛̇͏̀͏̣̥͉+ⵆᶥ̷̨̯̣̩̰͌̊̍͠+ՙˌ̛͉̖̭͒͑ͧ́͢͡+ꓸʽ̷̵̛̪͈̪̼̆̌̊̕+ˇˆ̷̰̠̤ͮ̾̌͟͢+ʹꜗ̔͛̇͏̀͏̣̥͉)(),ꓺʹ̴̛̳̲̹͌ͧ́̀=ⵗͺ̧̧̥̼͓̊͑̎̀(''[ˌꜘ̴̛͔̺͎ͯ̊̚͘+ܕꜙ̡̱̪̙͍ͯͤͯ̀́+ᐠʹ̷̨̭͇̙͓ͮ̿̒̀̀]())[ᡕꜘ̴̥̪͔͗͋̔̕͜],ꜚʼ̔ͭ̉͏̛̗̣̘̕=(ᣚۀ̧̧̺͔̖̓ͩ̈͞+ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́+ᡕꜘ̴̥̪͔͗͋̔̕͜)[ˆꜗ̸̧͚͕͈̘̑́̏̏͜](ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢),ޣ_ꓽ̷̡͙͍̘ͨ͆͂͘=(ᣚۀ̧̧̺͔̖̓ͩ̈͞+ᠺە̫͍͔̿͆̊̀̕͢)[ˆꜗ̸̧͚͕͈̘̑́̏̏͜](ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢),ᐠꜘ̶̪̯̝̎̓̚͞͠=(ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢-ᠺە̫͍͔̿͆̊̀̕͢)[ˆꜗ̸̧͚͕͈̘̑́̏̏͜](ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢),ʼˇ̴̛̼̞͔̬̈̾ͣ̽́=''[ᢦᵕ̧̥̩̱̫̓̀̊͜͝][ᢜᵕ̴̛̱͉̣̘͂ͧ͐͌́+ᔉا̧̞̖̤͛̐ͤ͜͠͝+ⵓʾ̴̧̗̝̠̟̓̆̚͘+ꜚʼ̔ͭ̉͏̛̗̣̘̕+ꓺʹ̴̛̳̲̹͌ͧ́̀+ޣ_ꓽ̷̡͙͍̘ͨ͆͂͘+ꓸʽ̷̵̛̪͈̪̼̆̌̊̕+ᔉا̧̞̖̤͛̐ͤ͜͠͝+ꓺʹ̴̛̳̲̹͌ͧ́̀+ⵓʾ̴̧̗̝̠̟̓̆̚͘+ᓒ_ͥا̸͔̟̖̀͐̊͢͜+ʹꜗ̔͛̇͏̀͏̣̥͉],າء̴̧̢̻̻̠͇̇ͣ̎ͯ=ⵓە̉͑ͭ͏̵̜͖͉̹͟(ᔉا̧̞̖̤͛̐ͤ͜͠͝+ʹꜗ̔͛̇͏̀͏̣̥͉+ⴾٴ̶͓̻̟̤ͭͣ̄́͢+ۃʹ̷̹̲̊͌̒́̕͝ͅ+ᔉا̧̞̖̤͛̐ͤ͜͠͝+ᛍꜚ̧͎̻̻ͤ̅ͦͮ̀͞+ⵗ_ࣼʹ̴̛̠͕̬ͦ̔͊̉͞+ʹꜗ̔͛̇͏̀͏̣̥͉+ᐠꜘ̶̪̯̝̎̓̚͞͠+ꓸʽ̷̵̛̪͈̪̼̆̌̊̕+ⵂꓻ̸̛̘̲̹͐̽̅͟)(),ངʹ̧̨̣̲̤̪ͫ̒͐͟=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ⴰە̴̗̳͖̄̐̎̃͠͡=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᔾە̴͈̻̖͙̎̂͂͘͝,ᐝꓼ̷͊̿͐͏̷̸̯̺͚=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᠺە̫͍͔̿͆̊̀̕͢|ᡕꜘ̴̥̪͔͗͋̔̕͜|ᔾە̴͈̻̖͙̎̂͂͘͝|ᣚۀ̧̧̺͔̖̓ͩ̈͞,ᶥˈ̵̨̟͎̯͓ͬ͊̄̀͢=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᡕꜘ̴̥̪͔͗͋̔̕͜+ᔾە̴͈̻̖͙̎̂͂͘͝|ᠺە̫͍͔̿͆̊̀̕͢|ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ߑ_֡֡ꓼ̡̧̩̯̺̄ͫͥ̕͢=ᔾە̴͈̻̖͙̎̂͂͘͝+ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᣚۀ̧̧̺͔̖̓ͩ̈͞+ᡕꜘ̴̥̪͔͗͋̔̕͜|ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ꓽʻ̵̨̣̩̮͓͐̽̇̇͢=ᔾە̴͈̻̖͙̎̂͂͘͝|ᣚۀ̧̧̺͔̖̓ͩ̈͞+ᡕꜘ̴̥̪͔͗͋̔̕͜|ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ᖟہ̌͌̌͟͏͏̡̗̣̯ͅ=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠+ᔾە̴͈̻̖͙̎̂͂͘͝,ᡪا̸͈̻̫ͬ̓͛́́=ᡕꜘ̴̥̪͔͗͋̔̕͜|ᔾە̴͈̻̖͙̎̂͂͘͝|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᠺە̫͍͔̿͆̊̀̕͢,ꓺʾ̴̛̱͙̙̎ͫ̍͜ͅ=ᣚۀ̧̧̺͔̖̓ͩ̈͞+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢+ᔾە̴͈̻̖͙̎̂͂͘͝|ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠,ˆꓺ̢̢̰̰̮̂ͪͥͬ̕=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢+ᡕꜘ̴̥̪͔͗͋̔̕͜+ᠺە̫͍͔̿͆̊̀̕͢|ᔾە̴͈̻̖͙̎̂͂͘͝,ە_ۧۧˌ̵̸̲͖̝͛̓ͮ͡=ᔾە̴͈̻̖͙̎̂͂͘͝|ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᠺە̫͍͔̿͆̊̀̕͢|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᣚۀ̧̧̺͔̖̓ͩ̈͞,ᡍʺ̷̀̈̃͞͏̲̝͈̮=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠|ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᔾە̴͈̻̖͙̎̂͂͘͝|ᡕꜘ̴̥̪͔͗͋̔̕͜,ᒢγ̷̡͚̱̺̽ͯ́́=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᠺە̫͍͔̿͆̊̀̕͢+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᔾە̴͈̻̖͙̎̂͂͘͝,ᡪˇ̷̷̧̪̭̬̈̋͊͋=ᔾە̴͈̻̖͙̎̂͂͘͝+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᣚۀ̧̧̺͔̖̓ͩ̈͞,ۃˆ̶̷̨̗̝̤̬̆́ͦ̀=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠|ᠺە̫͍͔̿͆̊̀̕͢+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ゝγ̛̘̦̙̉ͦͥͬ͜͟͠=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́+ᔾە̴͈̻̖͙̎̂͂͘͝+ᣚۀ̧̧̺͔̖̓ͩ̈͞,ㆍꜙ̛͈̣̤̈̍̀̽͢͞=ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᔾە̴͈̻̖͙̎̂͂͘͝+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ᠤʹ̶̶̪̻̭͓͊͐̿͠=ᔾە̴͈̻̖͙̎̂͂͘͝+ᠺە̫͍͔̿͆̊̀̕͢+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢+ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠,ᵕꓺ̢͙͓̺͆̆̔͜͜͝=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᡕꜘ̴̥̪͔͗͋̔̕͜,ᒽꜘ̵̧͚͍͓ͧͬ̉͒̕=ᔾە̴͈̻̖͙̎̂͂͘͝|ᡕꜘ̴̥̪͔͗͋̔̕͜|ᠺە̫͍͔̿͆̊̀̕͢|ᣚۀ̧̧̺͔̖̓ͩ̈͞,ܕ_ͩˌ̴̨̨̞̜̱̂̇ͮͦ͜=ᠺە̫͍͔̿͆̊̀̕͢+ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠+ᣚۀ̧̧̺͔̖̓ͩ̈͞+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢,ᖦˑ̴̨͍̬͈́̋͒̇́=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢+ᠺە̫͍͔̿͆̊̀̕͢+ᔾە̴͈̻̖͙̎̂͂͘͝,ꙿꓻ̷̨̛̞̩̤̣̀͂̚=ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́|ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠+ᔾە̴͈̻̖͙̎̂͂͘͝,ⵂꓻ̢̼͎͈̎̄͌̅̀͘=ᖮᵔ̮̹̠̄̂ͥ̕͜͞͠|ہ_᷇᷇᷇ʹ̸̸͇̜̤ͬ̇ͭ̉́+ᔾە̴͈̻̖͙̎̂͂͘͝+ᱸ_ࣼࣼࣼۂ̵̡̻̫͓͂̐͗ͫ͢+ᡕꜘ̴̥̪͔͗͋̔̕͜;າء̴̧̢̻̻̠͇̇ͣ̎ͯ(ʼˇ̴̛̼̞͔̬̈̾ͣ̽́(ꓽʻ̵̨̣̩̮͓͐̽̇̇͢,ᒢγ̷̡͚̱̺̽ͯ́́,ᐝꓼ̷͊̿͐͏̷̸̯̺͚,ە_ۧۧˌ̵̸̲͖̝͛̓ͮ͡,ꙿꓻ̷̨̛̞̩̤̣̀͂̚,ᡪˇ̷̷̧̪̭̬̈̋͊͋,ܕ_ͩˌ̴̨̨̞̜̱̂̇ͮͦ͜,ᡍʺ̷̀̈̃͞͏̲̝͈̮,ᖦˑ̴̨͍̬͈́̋͒̇́,ߑ_֡֡ꓼ̡̧̩̯̺̄ͫͥ̕͢,ᖦˑ̴̨͍̬͈́̋͒̇́,ᵕꓺ̢͙͓̺͆̆̔͜͜͝,ᖦˑ̴̨͍̬͈́̋͒̇́,ᡍʺ̷̀̈̃͞͏̲̝͈̮,ᖦˑ̴̨͍̬͈́̋͒̇́,ꓺʾ̴̛̱͙̙̎ͫ̍͜ͅ,ངʹ̧̨̣̲̤̪ͫ̒͐͟,ᡍʺ̷̀̈̃͞͏̲̝͈̮,ᖦˑ̴̨͍̬͈́̋͒̇́,ߑ_֡֡ꓼ̡̧̩̯̺̄ͫͥ̕͢,ᖦˑ̴̨͍̬͈́̋͒̇́,ᵕꓺ̢͙͓̺͆̆̔͜͜͝,ᖟہ̌͌̌͟͏͏̡̗̣̯ͅ,ᒢγ̷̡͚̱̺̽ͯ́́,ꓺʾ̴̛̱͙̙̎ͫ̍͜ͅ,ⴰە̴̗̳͖̄̐̎̃͠͡,ᒢγ̷̡͚̱̺̽ͯ́́,ˆꓺ̢̢̰̰̮̂ͪͥͬ̕,ᶥˈ̵̨̟͎̯͓ͬ͊̄̀͢,ㆍꜙ̛͈̣̤̈̍̀̽͢͞,ᒢγ̷̡͚̱̺̽ͯ́́,ゝγ̛̘̦̙̉ͦͥͬ͜͟͠,ᶥˈ̵̨̟͎̯͓ͬ͊̄̀͢,ᒽꜘ̵̧͚͍͓ͧͬ̉͒̕,ᡪˇ̷̷̧̪̭̬̈̋͊͋,ꓽʻ̵̨̣̩̮͓͐̽̇̇͢,ᠤʹ̶̶̪̻̭͓͊͐̿͠,ⵂꓻ̢̼͎͈̎̄͌̅̀͘,ᡪا̸͈̻̫ͬ̓͛́́,ངʹ̧̨̣̲̤̪ͫ̒͐͟,ꓽʻ̵̨̣̩̮͓͐̽̇̇͢,ᒢγ̷̡͚̱̺̽ͯ́́,ᐝꓼ̷͊̿͐͏̷̸̯̺͚,ە_ۧۧˌ̵̸̲͖̝͛̓ͮ͡,ꙿꓻ̷̨̛̞̩̤̣̀͂̚,ᡪˇ̷̷̧̪̭̬̈̋͊͋,ۃˆ̶̷̨̗̝̤̬̆́ͦ̀,ۃˆ̶̷̨̗̝̤̬̆́ͦ̀))})();result\n</js>\n.book-chapter@a",
      "chapterName": "text",
      "chapterUrl": "<js>\n(()=>{var ᐠꓸ̸̛̛͔͕̩ͤ͛ͨ='ٴۀ̶̴̨̱̱̹̞ͥ̉̉'&'ᖟʺ̵̛̯̲͎̅̾͂͜',ˇꓻ̴̞͓͙͐͋́̚͜=-~'ᚲꜘ̵̂̈́͊͠͏̟̪͖̭',ᔈי̡͕̰͎ͥ̿ͮ͊͜͝=ˇꓻ̴̞͓͙͐͋́̚͜-~'ᡪͺ̏̊ͣ',ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ=ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ*ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ᣚꓼ͔͔̲̂ͪ̋̀̕͡=ᔈי̡͕̰͎ͥ̿ͮ͊͜͝*ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ*ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,བء̧̢͔̘̖͓̔̈́̈͠=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝*ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ⵆء̛̣̻̙ͥͮ̇́́͡=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ*ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ᔈە̴̵̢͈̥͎ͩͭͬ̽͞=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝*ᔈי̡͕̰͎ͥ̿ͮ͊͜͝*ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ʹꙿ̴̴̛̛̫͕̼͌̊́=ⵆء̛̣̻̙ͥͮ̇́́͡*ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ᒼʹ̸̵̺͙̪̝̑ͨ̆̃͠͝=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝*ⵆء̛̣̻̙ͥͮ̇́́͡,ᕝꜙ̢̢͉̣̜̉̌̐͋͢=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ*ʹꙿ̴̴̛̛̫͕̼͌̊́,ܖי̴̯̘̟̜͊̑̆͠͡=ⵆء̛̣̻̙ͥͮ̇́́͡*བء̧̢͔̘̖͓̔̈́̈͠,ʺꜚ̸̺͉̣͊͂͐͢͜=ʹꙿ̴̴̛̛̫͕̼͌̊́*ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ۂ_ֵֵʹ̸̨͍̳̮̳̽͒͆̀=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝*ᕝꜙ̢̢͉̣̜̉̌̐͋͢,ᚐا̷̨̳͎̥̈́̿̉ͪ͘͜=བء̧̢͔̘̖͓̔̈́̈͠*ᒼʹ̸̵̺͙̪̝̑ͨ̆̃͠͝,ʽ_ء̤̱̙̔͐̓́͢͞=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ*ۂ_ֵֵʹ̸̨͍̳̮̳̽͒͆̀,ᕐە̨̛̭̗̝͌̋̎͞=!ˇꓻ̴̞͓͙͐͋́̚͜+[],ܯʹ̴̻͉̣̭͑̌ͥ͞͞=ᕐە̨̛̭̗̝͌̋̎͞[ᐠꓸ̸̛̛͔͕̩ͤ͛ͨ],ꓽՙ͕̮̣̙̅ͪ̔̉́͘͞=ܯʹ̴̻͉̣̭͑̌ͥ͞͞[ˇꓻ̴̞͓͙͐͋́̚͜]+[],ᕐͺ̶̔͑̈͡͠͏̟͇͕=ᕐە̨̛̭̗̝͌̋̎͞[ˇꓻ̴̞͓͙͐͋́̚͜],ᒻ_֔֔֔=ᕐە̨̛̭̗̝͌̋̎͞[ᔈי̡͕̰͎ͥ̿ͮ͊͜͝],ˌ_ʹ̸̜̦̝́̆͛͋́̀=ᕐە̨̛̭̗̝͌̋̎͞[ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+ˇꓻ̴̞͓͙͐͋́̚͜],ᕐγ̯̮ͯ̿͋̕͠͞ͅ=ᕐە̨̛̭̗̝͌̋̎͞[ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ],ᠱʾ̨̧̇̋ͪ̀͏̥̺͚=ꓽՙ͕̮̣̙̅ͪ̔̉́͘͞[ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ˇꓻ̴̞͓͙͐͋́̚͜],އˌ̴̴͉̦̟̽͒̋͠=[]+{},ʻᶥ̴̦̮̫ͮ̇̿͟͝=އˌ̴̴͉̦̟̽͒̋͠[ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ˇꓻ̴̞͓͙͐͋́̚͜],ᠳγ͉̭̙́͂̒̕͡͝=އˌ̴̴͉̦̟̽͒̋͠[ᔈי̡͕̰͎ͥ̿ͮ͊͜͝],ᠸꓻ̨̆͂̎͝͏̩͖̣͝=ꓽՙ͕̮̣̙̅ͪ̔̉́͘͞[ᐠꓸ̸̛̛͔͕̩ͤ͛ͨ],ﾟʼ̶̨̗̖͗͑ͩ͝ͅ=ꓽՙ͕̮̣̙̅ͪ̔̉́͘͞[ˇꓻ̴̞͓͙͐͋́̚͜],ᢏͺ̛͎̤͍̓ͯ̂̓͢͡=(!ᐠꓸ̸̛̛͔͕̩ͤ͛ͨ+[])[ᐠꓸ̸̛̛͔͕̩ͤ͛ͨ],ᔇ_ࣩٴ̧̋̑̽͏̨̲̰̟=އˌ̴̴͉̦̟̽͒̋͠[ˇꓻ̴̞͓͙͐͋́̚͜],ᓒᵕ̴̵̰͍͖ͨ͋̅͝=އˌ̴̴͉̦̟̽͒̋͠[ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝-ˇꓻ̴̞͓͙͐͋́̚͜],ۃͺ̧̡̜̬̟͋̿̚͢=ꓽՙ͕̮̣̙̅ͪ̔̉́͘͞[ᔈי̡͕̰͎ͥ̿ͮ͊͜͝],ܝꓽͦͯ̃̀͏͈̟̘͘=(!ᐠꓸ̸̛̛͔͕̩ͤ͛ͨ+[])[ˇꓻ̴̞͓͙͐͋́̚͜],ᕪʼ̢̛̛̝̥̲́ͭ̉̐=ʻᶥ̴̦̮̫ͮ̇̿͟͝+ᔇ_ࣩٴ̧̋̑̽͏̨̲̰̟+ﾟʼ̶̨̗̖͗͑ͩ͝ͅ+ˌ_ʹ̸̜̦̝́̆͛͋́̀+ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ܝꓽͦͯ̃̀͏͈̟̘͘+ᠸꓻ̨̆͂̎͝͏̩͖̣͝+ʻᶥ̴̦̮̫ͮ̇̿͟͝+ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ᔇ_ࣩٴ̧̋̑̽͏̨̲̰̟+ܝꓽͦͯ̃̀͏͈̟̘͘,ٴۀ̢̫̖̼̽̾́̚͟=[][ܯʹ̴̻͉̣̭͑̌ͥ͞͞+ᠱʾ̨̧̇̋ͪ̀͏̥̺͚+ᒻ_֔֔֔+ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ᕐγ̯̮ͯ̿͋̕͠͞ͅ+ܝꓽͦͯ̃̀͏͈̟̘͘],ᠺͺ̊ͣ͑̚͏̶̗̭̼͢͝ͅ=ٴۀ̢̫̖̼̽̾́̚͟[ᕪʼ̢̛̛̝̥̲́ͭ̉̐],γʽ̼̭͎̒ͦ͆̚͢͠͝=''[ᕪʼ̢̛̛̝̥̲́ͭ̉̐]+[],ᔊۃ̶͍͚͈ͣ̒̾̀͘͜=γʽ̼̭͎̒ͦ͆̚͢͠͝[ˇꓻ̴̞͓͙͐͋́̚͜+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝],ᐧꓽ̛͙͙̬ͪ̿͒̕͡=γʽ̼̭͎̒ͦ͆̚͢͠͝[ᣚꓼ͔͔̲̂ͪ̋̀̕͡-ᔈי̡͕̰͎ͥ̿ͮ͊͜͝],ᠰʾ̛ͦͨͥ̔͏̨̮͎̘̲͡=ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ᔇ_ࣩٴ̧̋̑̽͏̨̲̰̟+ᔊۃ̶͍͚͈ͣ̒̾̀͘͜+ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ܝꓽͦͯ̃̀͏͈̟̘͘+ᠱʾ̨̧̇̋ͪ̀͏̥̺͚+ﾟʼ̶̨̗̖͗͑ͩ͝ͅ+ᐧꓽ̛͙͙̬ͪ̿͒̕͡,ᚒᵔ̡͚̱̝̈́ͮͤ̕͡͝=(ˇꓻ̴̞͓͙͐͋́̚͜+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+ᣚꓼ͔͔̲̂ͪ̋̀̕͡)[ᠰʾ̛ͦͨͥ̔͏̨̮͎̘̲͡](བء̧̢͔̘̖͓̔̈́̈͠),ܪᵕ̵̢̢͎̜̱̔̑̈́=[][ᕪʼ̢̛̛̝̥̲́ͭ̉̐][ᕪʼ̢̛̛̝̥̲́ͭ̉̐](ܝꓽͦͯ̃̀͏͈̟̘͘+ᕐγ̯̮ͯ̿͋̕͠͞ͅ+ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ᠸꓻ̨̆͂̎͝͏̩͖̣͝+ܝꓽͦͯ̃̀͏͈̟̘͘+ﾟʼ̶̨̗̖͗͑ͩ͝ͅ+ᓒᵕ̴̵̰͍͖ͨ͋̅͝+ᕐγ̯̮ͯ̿͋̕͠͞ͅ+ˌ_ʹ̸̜̦̝́̆͛͋́̀+ʻᶥ̴̦̮̫ͮ̇̿͟͝+ᕐͺ̶̔͑̈͡͠͏̟͇͕+ᚒᵔ̡͚̱̝̈́ͮͤ̕͡͝+ᕐγ̯̮ͯ̿͋̕͠͞ͅ)(),ꓼͺ̡͇̼̪̘̌̑̊̐̀̕=ܪᵕ̵̢̢͎̜̱̔̑̈́(''[ᠳγ͉̭̙́͂̒̕͡͝+ᠱʾ̨̧̇̋ͪ̀͏̥̺͚+ᐧꓽ̛͙͙̬ͪ̿͒̕͡]())[ᔈי̡͕̰͎ͥ̿ͮ͊͜͝],ᠥᵕ̵̵̗̭̙̈̔̾͜͟=(ᣚꓼ͔͔̲̂ͪ̋̀̕͡+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝)[ᠰʾ̛ͦͨͥ̔͏̨̮͎̘̲͡](བء̧̢͔̘̖͓̔̈́̈͠),ᱸꜗ̒̍̚͜͏̵̱̤͚̭=(ᣚꓼ͔͔̲̂ͪ̋̀̕͡+ˇꓻ̴̞͓͙͐͋́̚͜)[ᠰʾ̛ͦͨͥ̔͏̨̮͎̘̲͡](བء̧̢͔̘̖͓̔̈́̈͠),ᶥꜗ̶̧͕̱̻̬͐͂̊́=(བء̧̢͔̘̖͓̔̈́̈͠-ˇꓻ̴̞͓͙͐͋́̚͜)[ᠰʾ̛ͦͨͥ̔͏̨̮͎̘̲͡](བء̧̢͔̘̖͓̔̈́̈͠),ᐠ_ؖؖؖꜙ̸̟̹̹̇̅ͭ̀͠͞=''[ᕪʼ̢̛̛̝̥̲́ͭ̉̐][ܯʹ̴̻͉̣̭͑̌ͥ͞͞+ܝꓽͦͯ̃̀͏͈̟̘͘+ᔇ_ࣩٴ̧̋̑̽͏̨̲̰̟+ᠥᵕ̵̵̗̭̙̈̔̾͜͟+ꓼͺ̡͇̼̪̘̌̑̊̐̀̕+ᱸꜗ̒̍̚͜͏̵̱̤͚̭+ᕐͺ̶̔͑̈͡͠͏̟͇͕+ܝꓽͦͯ̃̀͏͈̟̘͘+ꓼͺ̡͇̼̪̘̌̑̊̐̀̕+ᔇ_ࣩٴ̧̋̑̽͏̨̲̰̟+ۃͺ̧̡̜̬̟͋̿̚͢+ᕐγ̯̮ͯ̿͋̕͠͞ͅ],ᠺʹ̴̶̸̧͖̜͖͊̆̒͌=ᠺͺ̊ͣ͑̚͏̶̗̭̼͢͝ͅ(ܝꓽͦͯ̃̀͏͈̟̘͘+ᕐγ̯̮ͯ̿͋̕͠͞ͅ+ᢏͺ̛͎̤͍̓ͯ̂̓͢͡+ᠸꓻ̨̆͂̎͝͏̩͖̣͝+ܝꓽͦͯ̃̀͏͈̟̘͘+ﾟʼ̶̨̗̖͗͑ͩ͝ͅ+ᓒᵕ̴̵̰͍͖ͨ͋̅͝+ᕐγ̯̮ͯ̿͋̕͠͞ͅ+ᶥꜗ̶̧͕̱̻̬͐͂̊́+ᕐͺ̶̔͑̈͡͠͏̟͇͕+ᒻ_֔֔֔)(),ᠻᵕ̷̸̛̮͈͈̪̽̑͒=ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+ˇꓻ̴̞͓͙͐͋́̚͜+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+ⵆء̛̣̻̙ͥͮ̇́́͡|བء̧̢͔̘̖͓̔̈́̈͠+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ʻا̧̥̫͊̋̋̀͘ͅ=ⵆء̛̣̻̙ͥͮ̇́́͡+བء̧̢͔̘̖͓̔̈́̈͠|ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ەꙿ̷͓̩͇̿ͭͪ̀͞=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝|ⵆء̛̣̻̙ͥͮ̇́́͡|ˇꓻ̴̞͓͙͐͋́̚͜|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|བء̧̢͔̘̖͓̔̈́̈͠+ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ᚐە̧̱͙̖ͫ̎̈̕͟=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+བء̧̢͔̘̖͓̔̈́̈͠|ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ޚᵕ̴̢̝̹̗͓̉̓̌́͢=བء̧̢͔̘̖͓̔̈́̈͠+ˇꓻ̴̞͓͙͐͋́̚͜+ᣚꓼ͔͔̲̂ͪ̋̀̕͡|ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝|ⵆء̛̣̻̙ͥͮ̇́́͡,ܖꓻ̴̸̺̝͖ͦ̂̀͞=ⵆء̛̣̻̙ͥͮ̇́́͡+ˇꓻ̴̞͓͙͐͋́̚͜+བء̧̢͔̘̖͓̔̈́̈͠+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ᔊꓻ̜̜̼̅͐ͤ͘͜͡=ˇꓻ̴̞͓͙͐͋́̚͜|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|ᣚꓼ͔͔̲̂ͪ̋̀̕͡|ⵆء̛̣̻̙ͥͮ̇́́͡,ʹꜘ̐̽͋͆̕͏̶͍̱͙=བء̧̢͔̘̖͓̔̈́̈͠|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+ˇꓻ̴̞͓͙͐͋́̚͜|ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝|ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ゝᵕ̷̸͎̜̘̣̃̈́̍̊͡=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+བء̧̢͔̘̖͓̔̈́̈͠|ˇꓻ̴̞͓͙͐͋́̚͜,ᔉە̶̞̳̫̳̄̒̈́͠͞=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+བء̧̢͔̘̖͓̔̈́̈͠|ⵆء̛̣̻̙ͥͮ̇́́͡+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ءꓸ̶̧͇͇̼̯̔͊̂͢͠=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+བء̧̢͔̘̖͓̔̈́̈͠+ⵆء̛̣̻̙ͥͮ̇́́͡+ˇꓻ̴̞͓͙͐͋́̚͜,ᠻᵕ̷̤͇̱̊ͥ̎̄̕̕͜=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝|བء̧̢͔̘̖͓̔̈́̈͠,ᔅꓼ̴̯̲̟̌̀̄̀͜͡=ⵆء̛̣̻̙ͥͮ̇́́͡+བء̧̢͔̘̖͓̔̈́̈͠|ᣚꓼ͔͔̲̂ͪ̋̀̕͡|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ᛍʹ̨̮̤̬̜͒ͨ̀̉̀͟͢=ⵆء̛̣̻̙ͥͮ̇́́͡|བء̧̢͔̘̖͓̔̈́̈͠|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ˇꓼ̵̨̹̪̩͚͋͗̑͜=ˇꓻ̴̞͓͙͐͋́̚͜+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|བء̧̢͔̘̖͓̔̈́̈͠+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ᒽۀ̴̨̨̻͍͉̣͐̃͑̚͢=ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝=བء̧̢͔̘̖͓̔̈́̈͠+ⵆء̛̣̻̙ͥͮ̇́́͡+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ءˌ̜̱͚̌̿̈́̒͜͢͜͞=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+བء̧̢͔̘̖͓̔̈́̈͠|ⵆء̛̣̻̙ͥͮ̇́́͡|ᣚꓼ͔͔̲̂ͪ̋̀̕͡+ˇꓻ̴̞͓͙͐͋́̚͜,ٴʹ̀ͣ̈̿͏͏͈̞̪͟=ᣚꓼ͔͔̲̂ͪ̋̀̕͡+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝+བء̧̢͔̘̖͓̔̈́̈͠+ˇꓻ̴̞͓͙͐͋́̚͜|ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ܯʾ͖͔̟͑ͤ̏́͠͡=ⵆء̛̣̻̙ͥͮ̇́́͡+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|བء̧̢͔̘̖͓̔̈́̈͠|ˇꓻ̴̞͓͙͐͋́̚͜|ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ʽء̶̯̼̥̳̆͆̎̌̀͝͠=ⵆء̛̣̻̙ͥͮ̇́́͡|བء̧̢͔̘̖͓̔̈́̈͠+ˇꓻ̴̞͓͙͐͋́̚͜,ꓽʾ̵̷̖̙̲̂̆̋͆̕͜=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ˇꓻ̴̞͓͙͐͋́̚͜+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|ⵆء̛̣̻̙ͥͮ̇́́͡|ᣚꓼ͔͔̲̂ͪ̋̀̕͡|བء̧̢͔̘̖͓̔̈́̈͠,ᠳγ̵̶̱̘̜ͭ͊͗͞=བء̧̢͔̘̖͓̔̈́̈͠+ˇꓻ̴̞͓͙͐͋́̚͜+ᣚꓼ͔͔̲̂ͪ̋̀̕͡+ⵆء̛̣̻̙ͥͮ̇́́͡,ܙا̹̝̜̉ͫ̆̓̀͢͠=བء̧̢͔̘̖͓̔̈́̈͠+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ܪꙿ̸̨̧̭̯͖̅̈̅̐=ˇꓻ̴̞͓͙͐͋́̚͜|ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+བء̧̢͔̘̖͓̔̈́̈͠|ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ᒢꜚ̧̢̛̘̱͎͗̔̆͒=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+བء̧̢͔̘̖͓̔̈́̈͠|ˇꓻ̴̞͓͙͐͋́̚͜|ⵆء̛̣̻̙ͥͮ̇́́͡,މՙ̨̤̩̦̃ͦ̂̓͜͞͝=བء̧̢͔̘̖͓̔̈́̈͠|ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ᚐ_ؕʾ̵̨͙̗̝̈̒͑̀͘=ⵆء̛̣̻̙ͥͮ̇́́͡|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+ᣚꓼ͔͔̲̂ͪ̋̀̕͡|ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+བء̧̢͔̘̖͓̔̈́̈͠,ʺꓼ̳͚̝̾̔͂͟͢͡=ᣚꓼ͔͔̲̂ͪ̋̀̕͡|བء̧̢͔̘̖͓̔̈́̈͠|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ޣᵔ̣̖̤̎̏ͨ͘͜͟=ⵆء̛̣̻̙ͥͮ̇́́͡|བء̧̢͔̘̖͓̔̈́̈͠+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ᖦᵕ̨̼̘͉̓ͦͣ͢͟=ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+ⵆء̛̣̻̙ͥͮ̇́́͡+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝|ᣚꓼ͔͔̲̂ͪ̋̀̕͡,ᚔʻ̷̢̙̲͈͛̓͒̋́̕=ⵆء̛̣̻̙ͥͮ̇́́͡|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝+བء̧̢͔̘̖͓̔̈́̈͠+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ﾞʽ̡̧̩̪̱̒ͪ̍͜͞=བء̧̢͔̘̖͓̔̈́̈͠|ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|ⵆء̛̣̻̙ͥͮ̇́́͡|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝,ᚲꓺ̪̝̞ͮ͋͛̀͜͢=བء̧̢͔̘̖͓̔̈́̈͠|ⵆء̛̣̻̙ͥͮ̇́́͡|ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ⴰʼ̵̗̮̜̞̾ͪ̓͐͘͢=ⵆء̛̣̻̙ͥͮ̇́́͡+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ+ˇꓻ̴̞͓͙͐͋́̚͜,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́=ˇꓻ̴̞͓͙͐͋́̚͜+བء̧̢͔̘̖͓̔̈́̈͠|ⵆء̛̣̻̙ͥͮ̇́́͡+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ,ᢦꓻ̵͖̦͖ͫ͑̒͟͜͡=བء̧̢͔̘̖͓̔̈́̈͠|ⵆء̛̣̻̙ͥͮ̇́́͡+ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ˑꜘ̵̰͇̼̞̏̾ͮ̕͝=བء̧̢͔̘̖͓̔̈́̈͠|ⵆء̛̣̻̙ͥͮ̇́́͡,יՙ̵̲̗̻̑̽͛̀̕=བء̧̢͔̘̖͓̔̈́̈͠+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|ᒢᶥ̫̝̬͊̓̔ͣ͘͝͝,ᚓꓹ̨̻̮͇̇̃̆͡͝=ᣚꓼ͔͔̲̂ͪ̋̀̕͡+ʺʹ̴̵̲̖ͣ̉ͬ̕ͅ|ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|བء̧̢͔̘̖͓̔̈́̈͠,ᣟᶥ̸̸̨̲̯̤̃͑̑=ᔈי̡͕̰͎ͥ̿ͮ͊͜͝|ⵆء̛̣̻̙ͥͮ̇́́͡|བء̧̢͔̘̖͓̔̈́̈͠+ˇꓻ̴̞͓͙͐͋́̚͜;ᠺʹ̴̶̸̧͖̜͖͊̆̒͌(ᐠ_ؖؖؖꜙ̸̟̹̹̇̅ͭ̀͠͞(ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ٴʹ̀ͣ̈̿͏͏͈̞̪͟,ᚔʻ̷̢̙̲͈͛̓͒̋́̕,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ᚐ_ؕʾ̵̨͙̗̝̈̒͑̀͘,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ܙا̹̝̜̉ͫ̆̓̀͢͠,ᒢꜚ̧̢̛̘̱͎͗̔̆͒,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ᔊꓻ̜̜̼̅͐ͤ͘͜͡,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ᔅꓼ̴̯̲̟̌̀̄̀͜͡,ܖꓻ̴̸̺̝͖ͦ̂̀͞,ޣᵔ̣̖̤̎̏ͨ͘͜͟,ᒢꜚ̧̢̛̘̱͎͗̔̆͒,ᠻᵕ̷̤͇̱̊ͥ̎̄̕̕͜,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ᢦꓻ̵͖̦͖ͫ͑̒͟͜͡,ᔅꓼ̴̯̲̟̌̀̄̀͜͡,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ﾞʽ̡̧̩̪̱̒ͪ̍͜͞,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ゝᵕ̷̸͎̜̘̣̃̈́̍̊͡,ʹꜘ̐̽͋͆̕͏̶͍̱͙,ᒽۀ̴̨̨̻͍͉̣͐̃͑̚͢,ᛍʹ̨̮̤̬̜͒ͨ̀̉̀͟͢,ٴʹ̀ͣ̈̿͏͏͈̞̪͟,ᔊꓻ̜̜̼̅͐ͤ͘͜͡,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ᔅꓼ̴̯̲̟̌̀̄̀͜͡,ܖꓻ̴̸̺̝͖ͦ̂̀͞,ޣᵔ̣̖̤̎̏ͨ͘͜͟,ᒢꜚ̧̢̛̘̱͎͗̔̆͒,ᠻᵕ̷̤͇̱̊ͥ̎̄̕̕͜,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ゝᵕ̷̸͎̜̘̣̃̈́̍̊͡,ܙا̹̝̜̉ͫ̆̓̀͢͠,ᔅꓼ̴̯̲̟̌̀̄̀͜͡,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ʻا̧̥̫͊̋̋̀͘ͅ,ᔉە̶̞̳̫̳̄̒̈́͠͞,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ᣟᶥ̸̸̨̲̯̤̃͑̑,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ᠻᵕ̷̤͇̱̊ͥ̎̄̕̕͜,ܪꙿ̸̨̧̭̯͖̅̈̅̐,ᖦᵕ̨̼̘͉̓ͦͣ͢͟,ܪꙿ̸̨̧̭̯͖̅̈̅̐,יՙ̵̲̗̻̑̽͛̀̕,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ᢦꓻ̵͖̦͖ͫ͑̒͟͜͡,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ʻا̧̥̫͊̋̋̀͘ͅ,ܯʾ͖͔̟͑ͤ̏́͠͡,ʺꓼ̳͚̝̾̔͂͟͢͡,ܪꙿ̸̨̧̭̯͖̅̈̅̐,ܪꙿ̸̨̧̭̯͖̅̈̅̐,ꓽʾ̵̷̖̙̲̂̆̋͆̕͜,ꓽʾ̵̷̖̙̲̂̆̋͆̕͜,ꓽʾ̵̷̖̙̲̂̆̋͆̕͜,ܙا̹̝̜̉ͫ̆̓̀͢͠,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ᢦꓻ̵͖̦͖ͫ͑̒͟͜͡,ᢦꓻ̵͖̦͖ͫ͑̒͟͜͡,ᠳγ̵̶̱̘̜ͭ͊͗͞,ᠳγ̵̶̱̘̜ͭ͊͗͞,ܙا̹̝̜̉ͫ̆̓̀͢͠,ᣟᶥ̸̸̨̲̯̤̃͑̑,ᠻᵕ̷̸̛̮͈͈̪̽̑͒,ءꓸ̶̧͇͇̼̯̔͊̂͢͠,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ゝᵕ̷̸͎̜̘̣̃̈́̍̊͡,ʹꜘ̐̽͋͆̕͏̶͍̱͙,ᒽۀ̴̨̨̻͍͉̣͐̃͑̚͢,ᣟᶥ̸̸̨̲̯̤̃͑̑,ٴʹ̀ͣ̈̿͏͏͈̞̪͟,ˑꜘ̵̰͇̼̞̏̾ͮ̕͝,ᚲꓺ̪̝̞ͮ͋͛̀͜͢,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ʺꓼ̳͚̝̾̔͂͟͢͡,ʹꜘ̐̽͋͆̕͏̶͍̱͙,ᛍʹ̨̮̤̬̜͒ͨ̀̉̀͟͢,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ܯʾ͖͔̟͑ͤ̏́͠͡,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ᚓꓹ̨̻̮͇̇̃̆͡͝,ᚐە̧̱͙̖ͫ̎̈̕͟,יՙ̵̲̗̻̑̽͛̀̕,މՙ̨̤̩̦̃ͦ̂̓͜͞͝,ەꙿ̷͓̩͇̿ͭͪ̀͞,ᚔʻ̷̢̙̲͈͛̓͒̋́̕,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ᚐ_ؕʾ̵̨͙̗̝̈̒͑̀͘,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ܙا̹̝̜̉ͫ̆̓̀͢͠,ᛍʹ̨̮̤̬̜͒ͨ̀̉̀͟͢,ʽء̶̯̼̥̳̆͆̎̌̀͝͠,ܯʾ͖͔̟͑ͤ̏́͠͡,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ᚓꓹ̨̻̮͇̇̃̆͡͝,ᚐە̧̱͙̖ͫ̎̈̕͟,ⴰʼ̵̗̮̜̞̾ͪ̓͐͘͢,ޣᵔ̣̖̤̎̏ͨ͘͜͟,ᣟᶥ̸̸̨̲̯̤̃͑̑,ᠻᵕ̷̸̛̮͈͈̪̽̑͒,ᚲꓺ̪̝̞ͮ͋͛̀͜͢,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ᠻᵕ̷̤͇̱̊ͥ̎̄̕̕͜,ᛍʹ̨̮̤̬̜͒ͨ̀̉̀͟͢,ゝᵕ̷̸͎̜̘̣̃̈́̍̊͡,ءˌ̜̱͚̌̿̈́̒͜͢͜͞,יՙ̵̲̗̻̑̽͛̀̕,ەꙿ̷͓̩͇̿ͭͪ̀͞,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ʿי̷̡̛̻̪̙ͦ́̓ͦ͝,ޚᵕ̴̢̝̹̗͓̉̓̌́͢,ʻا̧̥̫͊̋̋̀͘ͅ,ᒡ_᷾᷾ꞈ̢̛̞̩̝̄͌̔́,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ʺꓼ̳͚̝̾̔͂͟͢͡,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ˇꓼ̵̨̹̪̩͚͋͗̑͜,ءˌ̜̱͚̌̿̈́̒͜͢͜͞,ˑꜘ̵̰͇̼̞̏̾ͮ̕͝))})();c\n</js>",
      "updateTime": ""
    },
    "searchUrl": "https://www.aakkrr.com/book/{{key}}/{{page}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁25.04.07修改,适配任何情况\n//首发论坛taoba.cf\n//2024.11.29\n12.2 by怣疯 目录修改，适配可乐小说和仿番茄小说目录",
    "bookSourceGroup": "🌷最爱书源🌷",
    "bookSourceName": "源社区出品-仿茄小说（优）",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.fanqxsw.com/##",
    "bookUrlPattern": "https:\\/\\/www\\.fanqxsw\\.com\\/book\\/\\w+\\.html",
    "customOrder": 187,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"全部🏷分类\",\"url\":\"/list-0-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n            {\"title\":\"全部\",\"url\":\"/list-0-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\n            {\"title\":\" 男生 \",\"url\":\"/list-1-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 玄幻小说 \",\"url\":\"/list-4-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 奇幻小说 \",\"url\":\"/list-5-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 武侠小说 \",\"url\":\"/list-6-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 仙侠小说 \",\"url\":\"/list-7-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 都市小说 \",\"url\":\"/list-8-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 军事小说 \",\"url\":\"/list-9-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 历史小说 \",\"url\":\"/list-10-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 游戏小说 \",\"url\":\"/list-11-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 体育小说 \",\"url\":\"/list-12-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 科幻小说 \",\"url\":\"/list-13-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 诸天无限 \",\"url\":\"/list-14-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 悬疑小说 \",\"url\":\"/list-15-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 女生 \",\"url\":\"/list-2-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 古代言情 \",\"url\":\"/list-16-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 仙侠奇缘 \",\"url\":\"/list-17-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 现代言情 \",\"url\":\"/list-18-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 浪漫青春 \",\"url\":\"/list-19-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 玄幻言情 \",\"url\":\"/list-20-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 悬疑推理 \",\"url\":\"/list-21-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 科幻空间 \",\"url\":\"/list-22-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 游戏竞技 \",\"url\":\"/list-23-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 短篇言情 \",\"url\":\"/list-24-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 轻小说 \",\"url\":\"/list-42-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 二次元 \",\"url\":\"/list-3-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 原生幻想 \",\"url\":\"/list-25-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 恋爱日常 \",\"url\":\"/list-26-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 衍生同人 \",\"url\":\"/list-27-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\" 搞笑吐槽 \",\"url\":\"/list-28-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"男🏷生\",\"url\":\"/list-1-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t{\"title\":\"全部\",\"url\":\"/list-1-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"玄幻小说 \",\"url\":\"/list-4-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"奇幻小说 \",\"url\":\"/list-5-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"武侠小说 \",\"url\":\"/list-6-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"仙侠小说 \",\"url\":\"/list-7-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"都市小说 \",\"url\":\"/list-8-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"军事小说 \",\"url\":\"/list-9-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"历史小说 \",\"url\":\"/list-10-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"游戏小说 \",\"url\":\"/list-11-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"体育小说 \",\"url\":\"/list-12-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"科幻小说 \",\"url\":\"/list-13-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"诸天无限 \",\"url\":\"/list-14-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"悬疑小说 \",\"url\":\"/list-15-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"女🏷生\",\"url\":\"/list-2-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n\t\t\t\t{\"title\":\"全部\",\"url\":\"/list-2-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"古代言情 \",\"url\":\"/list-16-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"仙侠奇缘 \",\"url\":\"/list-17-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"现代言情 \",\"url\":\"/list-18-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"浪漫青春 \",\"url\":\"/list-19-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"玄幻言情 \",\"url\":\"/list-20-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"悬疑推理 \",\"url\":\"/list-21-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"科幻空间 \",\"url\":\"/list-22-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"游戏竞技 \",\"url\":\"/list-23-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"短篇言情 \",\"url\":\"/list-24-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"轻小说 \",\"url\":\"/list-42-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"二次元🏷\",\"url\":\"/list-3-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n\t\t\t\t\t{\"title\":\"全部\",\"url\":\"/list-3-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"原生幻想 \",\"url\":\"/list-25-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"恋爱日常 \",\"url\":\"/list-26-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"衍生同人 \",\"url\":\"/list-27-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\"title\":\"搞笑吐槽 \",\"url\":\"/list-28-{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "header": "{\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36 Edg/129.0.0.0\"}",
    "lastUpdateTime": "1743967154206",
    "respondTime": 183155,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "intro": "[property$=description]@content",
      "kind": "[property$=category]@content",
      "lastChapter": "{{@@[property$=latest_chapter_name]@content}}\n{{@@[property$=update_time]@content}}",
      "name": "[property$=book_name]@content",
      "tocUrl": "<js>\nurl=baseUrl.replace(/book/,'chapter');\nm=java.ajax(url);\nre=String(m).match(/[\\s\\S]*data-p.*?(\\d+)[\\s\\S]*?\\/ul>/)[1]\njava.put(\"m\",re)\nif(baseUrl.match(/fanqxsw/)){\n\tjava.getString('text.章节目录@href')\n\t}else if (baseUrl.match(/kanshudashi/)){\t\ta=baseUrl.match(/book\\/(.*?)\\./)[1];\nb=`https://www.kanshudashi.com/index.php?action=loadChapterPage,{\"method\":\"post\",\"body\": \"id=${a}&page=1\"}`;\n}else if (baseUrl.match(/kelexs/)){\n\t\ta=baseUrl.match(/book\\/(.*?)\\./)[1];\nb=`https://www.kelexs.com/index.php?action=loadChapterPage,{\"method\":\"post\",\"body\": \"id=${a}&page=1\"}`;\n}\n</js>",
      "wordCount": "[property$=status]@content"
    },
    "ruleContent": {
      "content": ".content@html"
    },
    "ruleExplore": {
      "author": ".time@span.0@text",
      "bookList": ".list@ul@li",
      "bookUrl": ".name@a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".about@span.0@text",
      "lastChapter": ".time@span.1@text##更新",
      "name": ".name@a@text",
      "wordCount": ".about@span.2@text"
    },
    "ruleSearch": {
      "author": "a.2@text",
      "bookList": ".list@ul@li",
      "bookUrl": "@js:\ns=java.get(\"s\")\na=java.getString('.pic@html')\nc=String(a).match(/upclick\\(\\'(.*?)\\'/)[1]\n\tif (s.match(/kanshudashi/)){\nb='https://www.kanshudashi.com/book/'+c+'.html';\nb;\n}else if (s.match(/kelexs/)){\nb='https://www.kelexs.com/book/'+c+'.html';\nb;\n\t}",
      "checkKeyWord": "https://www.kanshudashi.com/book/h0xxhq.html",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": "a.3@text",
      "lastChapter": "a.5@text",
      "name": "a.1@text",
      "wordCount": "📖{{@@a.4@text}}"
    },
    "ruleToc": {
      "chapterList": "<js>\nif(baseUrl.match(/kele/)){\n\tresult=java.getElements(\"$.data[*]\")\n\t}else{\nif(String(result).match(/\\<a\\>/)){\n\tresult=java.getElements(\"class.list font18 chapListBody@ul@li@a\")\n\t}else{\n\t\tresult=java.getElements(\"$.data[*]\")\n\t\t}\n}\n\t\t//java.log(result)\n\t\tresult\n</js>",
      "chapterName": "$.chaptername||text",
      "chapterUrl": "$.chapterurl||href",
      "nextTocUrl": "<js>\nm=java.get(\"m\");\nif(baseUrl.match(/fanqx/)){\nvar a = baseUrl.match(/\\/chapter\\/(.*?)\\.html/);\n//java.log(a[1]);\nlet hrefList = [];\nif (a) {\n  var b = result.match(/data\\-p\\=\"\\d+\"/g).length;\n  if (b) {\n    for(let i = 1; i <= b; i++) {\n      let href = `https://www.fanqxsw.com/index.php?action=loadChapterPage,{\"body\":\"id=${a[1]}&page=${i}\",\"method\":\"POST\"}`;\n     //java.log(href);\n      hrefList.push(href);\n    }\n    hrefList\n     }\n}\n}else {\nlist=[]\nif(JSON.parse(result).data.length>0){\n\tfor (i = 2; i <= m; i++){\n\tlist.push(baseUrl.replace(/page=(\\d+)/,'page=' +i))\n\t\t}\n\t\tlist\n\t}\n\t}\n\n</js>"
    },
    "searchUrl": "https://www.rrssk.com/keywords-{{key}}-{{page}}.html\n<js>\nsrc=java.ajax(result)\njava.put(\"s\",String(src));\nresult\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁(yesui.me)25.04.02修复正文\n//首发论坛：ysqbbs.com,发布页：taoba.cf",
    "bookSourceGroup": "男频,女频,晋江,起点",
    "bookSourceName": "kanshuv",
    "bookSourceType": 0,
    "bookSourceUrl": "https://kanshuv.com#qin",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"༺男生༻\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1}},{\"title\":\"玄幻奇幻\",\"url\":\"/api/changkan/portal/novel/list?type=4&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"恐怖推理\",\"url\":\"/api/changkan/portal/novel/list?type=8&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"武侠仙侠\",\"url\":\"/api/changkan/portal/novel/list?type=5&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"都市重生\",\"url\":\"/api/changkan/portal/novel/list?type=6&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"历史军事\",\"url\":\"/api/changkan/portal/novel/list?type=7&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"玄幻网络\",\"url\":\"/api/changkan/portal/novel/list?type=9&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"༺女生༻\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1}},{\"title\":\"都市言情\",\"url\":\"/api/changkan/portal/novel/list?type=10&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"古代言情\",\"url\":\"/api/changkan/portal/novel/list?type=11&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"穿越重生\",\"url\":\"/api/changkan/portal/novel/list?type=12&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"玄幻仙侠\",\"url\":\"/api/changkan/portal/novel/list?type=13&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"青春同人\",\"url\":\"/api/changkan/portal/novel/list?type=14&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"网游科幻\",\"url\":\"/api/changkan/portal/novel/list?type=15&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"༺耽美༻\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1}},{\"title\":\"二次元\",\"url\":\"/api/changkan/portal/novel/list?type=25&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"现代耽美\",\"url\":\"/api/changkan/portal/novel/list?type=27&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"古代架空\",\"url\":\"/api/changkan/portal/novel/list?type=28&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"穿越重生\",\"url\":\"/api/changkan/portal/novel/list?type=29&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"玄幻科幻\",\"url\":\"/api/changkan/portal/novel/list?type=30&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"BL同人\",\"url\":\"/api/changkan/portal/novel/list?type=31&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"GL百合\",\"url\":\"/api/changkan/portal/novel/list?type=32&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"༺其他༻\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1}},{\"title\":\"清流小说\",\"url\":\"/api/changkan/portal/novel/list?type=33&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"种田小说\",\"url\":\"/api/changkan/portal/novel/list?type=34&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"女尊小说\",\"url\":\"/api/changkan/portal/novel/list?type=35&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"高干小说\",\"url\":\"/api/changkan/portal/novel/list?type=36&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"豪门小说\",\"url\":\"/api/changkan/portal/novel/list?type=37&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"搞笑小说\",\"url\":\"/api/changkan/portal/novel/list?type=38&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"社会小说\",\"url\":\"/api/changkan/portal/novel/list?type=39&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"官场小说\",\"url\":\"/api/changkan/portal/novel/list?type=40&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"都市小说\",\"url\":\"/api/changkan/portal/novel/list?type=41&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"三国小说\",\"url\":\"/api/changkan/portal/novel/list?type=42&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"抗战小说\",\"url\":\"/api/changkan/portal/novel/list?type=43&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"虐念小说\",\"url\":\"/api/changkan/portal/novel/list?type=44&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"影视原著\",\"url\":\"/api/changkan/portal/novel/list?type=45&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"青春校园\",\"url\":\"/api/changkan/portal/novel/list?type=46&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"年代文\",\"url\":\"/api/changkan/portal/novel/list?type=47&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"主攻\",\"url\":\"/api/changkan/portal/novel/list?type=48&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"无CP\",\"url\":\"/api/changkan/portal/novel/list?type=49&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"盗墓小说\",\"url\":\"/api/changkan/portal/novel/list?type=50&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"洪荒小说\",\"url\":\"/api/changkan/portal/novel/list?type=51&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"耽美\",\"url\":\"/api/changkan/portal/novel/list?type=52&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"海外耽美\",\"url\":\"/api/changkan/portal/novel/list?type=53&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}},{\"title\":\"职场文\",\"url\":\"/api/changkan/portal/novel/list?type=54&pageNo={{page}}&pageSize=24&sort={{getVariable()}}\",\"style\":{\"layout_flexBasisPercent\":0.291}}]",
    "jsLib": "function getVariable() {\n  const {source} = this;\n  var sort  = source.getVariable();\n  if (sort==null || sort==\"\") {\n    sort = \"create_time&order=desc\";\n    source.setVariable(sort);\n  }\n  return sort;\n}",
    "lastUpdateTime": "1743604574591",
    "loginUi": "[\n  {\n    \"name\": \"　　　　　　 ↓分类内容筛选↓ 　　　　　　\",\n    \"type\": \"button\",\n    \"action\": \"filterSort(0)\"\n  },\n  {\n    \"name\": \"　      更新时间      　\",\n    \"type\": \"button\",\n    \"action\": \"filterSort(0)\"\n  },\n  {\n    \"name\": \"　      最多字数      　\",\n    \"type\": \"button\",\n    \"action\": \"filterSort(1)\"\n  }\n]",
    "loginUrl": "var arr = [\"create_time&order=desc\", \"count&order=asc\"];\nfunction filterSort(id) {\n  source.setVariable(arr[id]);\n  java.toast(\"设置成功\");\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.imgPath",
      "downloadUrls": "$.filePath",
      "init": "$.result",
      "intro": "$.summary<js>##简介：</js>##^|[　]{2}|\\\\n##<br>",
      "kind": "$.typeName",
      "lastChapter": "$.updateTime",
      "name": "$.name@put:{bid:$.id}",
      "tocUrl": "/api/changkan/portal/novel/getReaderPage,{\n  \"method\": \"POST\",\n  \"body\": \"{\\\"num\\\":50,\\\"pageStart\\\":\\\"0\\\",\\\"id\\\":\\\"{{$.id}}\\\",\\\"headers\\\":{\\\"Content-Type\\\":\\\"application/x-www-form-urlencoded\\\"}}\"\n}",
      "wordCount": "$.size"
    },
    "ruleContent": {
      "content": "$.result.content\n<js>\njava.put(\"hi\",baseUrl);\nresult\n</js>",
      "nextContentUrl": "<js>\nhi=java.get(\"hi\");\nhia=hi.match(/pageStart=(\\d+)/)[1]\njava.log(hia)\na = java.get(\"c\");\nb=String(a).replace(/\\[(.*)\\]/,'$1').replace(/\\\"/g,'').replace(/\\s/g,'');\n//java.log(b)\nif (typeof b == 'string') {\n    b = b.split(','); \n}\n//java.log(nextChapterUrl)\nc = nextChapterUrl.match(/pageStart= {0,1}(\\d+)/);\nc = parseInt(c[1]); \nresults = [];\nfor (i = 0; i < b.length; i++) {\n        currentPage = parseInt(b[i]);\n        if (isNaN(currentPage)) {\n            continue;\n        }\n        if (currentPage > c) {\n            break;\n        }\n        if (currentPage > hia && currentPage < c) {\n            url = baseUrl.replace(/(pageStart=)\\d+/, '$1' + currentPage);\n            results.push(url);\n        }\n    }results\n</js>",
      "replaceRegex": "",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.result.records[*]",
      "bookUrl": "/api/changkan/portal/novel/queryById?id={{$.id}}",
      "checkKeyWord": "穿进赛博游戏后干掉BOSS成功上位",
      "coverUrl": "$.imgPath",
      "intro": "$.summary<js>##简介：</js>##^|[　]{2}|\\\\n##<br>",
      "kind": "$.typeName",
      "lastChapter": "$.updateTime",
      "name": "$.name",
      "wordCount": "$.size"
    },
    "ruleToc": {
      "chapterList": "<js>\nvar $ = JSON.parse(result).result;\nvar i = 0, j = 0, ch = {};\nvar k = $.chapter.length;\nvar l = $.page.length;\nvar b=$.page\n$.c=java.log(JSON.stringify(b))\njava.put(\"c\",$.c)\nwhile(j<l) {\n  if (i<k) {\n    ch = $.chapter[i];\n    while(+ch.pos>$.page[j]) {\n      ch.no = $.page[j];\n      ch.page = \"Page \"+(j+1);\n      $.page[j] = ch;\n      j++;\n    }\n    i++;\n  } else {\n    ch = $.chapter[k-1];\n    ch.no = $.page[j];\n    ch.page = \"Page \"+(j+1);\n    $.page[j] = ch;\n    j++;\n  }\n}\nJSON.stringify($.page);\n</js>\n$.[*]",
      "chapterName": "$.name",
      "chapterUrl": "/api/changkan/portal/novel/getReaderContent?num=50&pageStart={{$.no}}&id=@get:{bid}&headers=headers={\"Content-Type\":\"application/x-www-form-urlencoded\"}##(pageStart=)\\s##$1",
      "preUpdateJs": "",
      "updateTime": "$.page"
    },
    "searchUrl": "/api/changkan/portal/novel/list?name={{key}}&pageNo={{page}}&pageSize=24&sort={{getVariable()}}",
    "weight": 0
  },
  {
    "bookSourceComment": "请先注册密钥QAQ，每天限制1000章,触发封禁2秒请求8章，接口2为兼容版，接口3为新接口，接口4为兼容版，非会员使用本源下载请先调整预下载为0，线程为1\n3.31前注册的用户数据未同步（重新注册或联系管理员）\n支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说，起点69小说",
    "bookSourceGroup": "番茄小说",
    "bookSourceName": "♕番茄小说(需要注册密钥QAQ,免费的)",
    "bookSourceType": 0,
    "bookSourceUrl": "http://api.fq.yesui.me:7748/\nhttp://45.207.206.182:7748/\nhttp://yesui.me:10005/\nhttp://45.207.214.102:10005/",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet keys = getArguments(open_argument,'key');\nif (!keys) {\n\tkeys = '';\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"情无羁阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + keys,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"media\": \"全部\",\n            \"server\": \"http://api.fq.yesui.me:7748\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "lastUpdateTime": "1743653749520",
    "loginUi": "[\n      {\n        \"name\":  \"  请杯咖啡，破解限制  \",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"设备管理\",\n        \"type\": \"button\",\n        \"action\": \"clear()\"\n      },{\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"更新源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"♥♥♥♥♥♥填写密钥♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"番茄登录(同步书架)\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \" 退出番茄登录 \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"当前来源\",\n        \"type\": \"button\",\n        \"action\": \"getmedia()\"\n      },{\n        \"name\":  \"搜索全部\",\n        \"type\": \"button\",\n        \"action\": \"set('搜索全部')\"\n      },{\n        \"name\":  \"搜索番茄\",\n        \"type\": \"button\",\n        \"action\": \"set('番茄')\"\n      },{\n        \"name\":  \"搜索七猫\",\n        \"type\": \"button\",\n        \"action\": \"set('七猫')\"\n      },{\n        \"name\":  \"搜索起点\",\n        \"type\": \"button\",\n        \"action\": \"set('起点')\"\n      },{\n        \"name\":  \"搜索得间\",\n        \"type\": \"button\",\n        \"action\": \"set('得间')\"\n      },{\n        \"name\":  \"搜索QQ\",\n        \"type\": \"button\",\n        \"action\": \"set('QQ')\"\n      },{\n        \"name\":  \"搜索熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set('熊猫')\"\n      },{\n        \"name\":  \"搜索轻小说\",\n        \"type\": \"button\",\n        \"action\": \"set('哔哩')\"\n      },{\n        \"name\":  \"搜索聚合\",\n        \"type\": \"button\",\n        \"action\": \"set('聚合')\"\n      }    ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    }\n\n\nlet server = getArgument('server');\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split(';')\n            for (let key of keyParts) {\n                  if (key.includes(\"secretKey=\")) {\n                  keyParts = key.split('secretKey=');\n                  if (keyParts.length > 1) {\n                  key = keyParts[keyParts.length - 1];\n                  setArgument('key', key);\n                  return key;\n                  }\n            }\n             }\n           \n        }\n    }\n\n    return '';\n}\n\n// 填写密钥\nfunction loginqt(){\n    let key = gets_key()\n    if (key && key != \"\") {\n            java.toast(\"您已填写秘钥:\"+key);\n            return false\n        }\n    java.startBrowserAwait(getArgument('server')+'/check_key','登录情无羁小说书源');\n    key = gets_key()\n    if (key){\n        java.longToast('登录成功，秘钥：'+key);\n        return true\n        } else {\n            java.toast('登录失败！！！！！');\n            return false\n            }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\t\t\nfunction api() { \tjava.startBrowserAwait(getArgument('server')+'/','首页');\n    }\nfunction hqmy() { \tjava.startBrowserAwait(getArgument('server')+'/key','密钥');\n    }\nfunction vip() { \tjava.startBrowserAwait(getArgument('server')+'/coffee',\"喝咖啡\");\n    }\nfunction clear() { \tjava.startBrowserAwait(getArgument('server')+'/clear',\"清空设备\");\n    }\n\n\nfunction set(media) {\n\t  setArgument('media',media);\n\t  java.toast(\"\\n\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t   \tlet media = getArgument('media');\n\t   \tif(media == '') {\n\t   \t\tmedia = '全部来源都搜索';\n\t   \t\t}\n\t\t\t  java.toast(\"\\n\\n当前搜索范围是：\"+media);\n\t\t\t  \n}\n\n//获取服务器\nfunction get_server() {\n\t  var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：'+ server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "",
      "init": "$..book_id\n<js>\nlet res = result[0];\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet sjy = '';\nlet info;\nlet bookUrl = '';\nlet lx = '';\nlet zxtime = '';\nlet zxzj = '';\nlet sy = '';\nlet jj = '';\ntry {\n\t       function setArgument(key, value) {\n        let open_argument = source.getVariable();\n        open_argument = getArguments(open_argument, '');\n        open_argument[key] = value;\n        open_argument = JSON.stringify(open_argument);\n        source.setVariable(open_argument);\n        return open_argument;\n    }\n\n    function gets_key() {\n        var servers = String(source.bookSourceUrl);\n        const serverList = servers.split('\\n');\n\n        for (let server of serverList) {\n            let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n            if (keys) {\n                let keyParts = keys.split('secretKey=');\n                if (keyParts.length > 1) {\n                    keys = keyParts[keyParts.length - 1];\n                    setArgument('key', keys);\n                    return keys;\n                }\n            }\n        }\n        return '';\n    }\n\n    let open_argument = source.getVariable();\n    let base_url = getArguments(open_argument, 'server');\n    let ms = getArguments(open_argument, 'media');\n    let key = getArguments(open_argument, 'key');\n    if (!key) {\n        key = gets_key();\n    }\n\n    var tishi = '&nbsp;&nbsp;当前搜索模式：' + ms + '\\n\\n如需切换,请点击登陆进行切换\\n切换之后需要重新搜索！\\n\\n\\u200b'\n    if (media == 'fanqie' || media == 'juxiaoshuo') {\n        try {\n            info = JSON.parse(java.ajax(`${base_url}/novel_detail?&bookid=${bookid}`));\n          try {\n                let shuyuan = info.shuyuan;\n                if (shuyuan) {\n                    let n = 0;\n                    let v = String(book.getVariable(\"custom\"));\n                    let x = v.match(/^\\d+$/) ? v : n;\n                    x = parseInt(x) < shuyuan.length ? x : n;\n                    bookUrl = shuyuan[x];\n                    bookUrl = `${base_url}/detail?bookId=${bookUrl}_juxiaoshuo`;\n                    sjy = `🎯当前书源【${x}】：${shuyuan[x]}`;\n                    sy = info.sy;\n                    lx= info.lx;\n                    zxtime= info.zxtime;\n                    zxzj= info.zxzj;\n                    jj = info.abstract;\n                    jj = `${lx}\n${zxzj}\n${zxtime}\n\\u200b\n${jj}\n\\u200b\n${sjy}\n${sy}`\ninfo = {'abstract': jj}\n                }\n            } catch (error) {\n                info = {'abstract': \"\"}\n            }\n        } catch (error) {\n            info = {'abstract': \"\"}\n        }\n    } else {\n        info = {'abstract': \"\"}\n    }\n\n    if (!key) {\n        jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    } else if (!info.abstract) {\n        jj = \"\"\n    } else {\n        jj = info.abstract\n    }\nif (!jj){tishi=''}\n    let data = {\n    \t   tishi:tishi,\n        info: jj,\n        bookUrl: bookUrl\n    };\n    JSON.stringify(data);\n} catch (error) {\n    JSON.stringify({info: '', bookUrl: ''});\n}\n</js>",
      "intro": "&nbsp;&nbsp;\n{{$.tishi}}\n{{$.info}}",
      "kind": "",
      "name": "",
      "tocUrl": "bookUrl"
    },
    "ruleContent": {
      "content": "<br>{{$.content}}\n<js>\nif (result.match(/已被封禁/)){\n\tjava.toast('您的访问过于频繁, 已被封禁')\n\t}\n\tresult\n</js>"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n    if (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\nresult",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "abstract",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "我的",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn ''\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\nif(!key) {\n    java.longToast('\\n\\n请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-1&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url\nif (catalogue_url.match(/item_id=\\d+_\\d+.*番茄/)){\n\treurl=catalogue_url.replace(/(item_id=\\d+_)\\d+/,'$1fanqie');\n\treurl\n}",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet media = getArguments(open_argument,'media');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\nbase_url+'/searchNovel?title='+result+'&media='+media",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "番茄小说二采网",
    "bookSourceGroup": "-自制,✨极速,文件",
    "bookSourceName": "久久小说网",
    "bookSourceType": 3,
    "bookSourceUrl": "https://www.338i.com",
    "customOrder": 1,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"都市\",\"url\":\"/txt/doushi/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"玄幻\",\"url\":\"/txt/xuanhuan/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"历史\",\"url\":\"/txt/lishi/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"科幻\",\"url\":\"/txt/kehuan/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"仙侠\",\"url\":\"/txt/xianxia/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"同人\",\"url\":\"/txt/tongren/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"游戏\",\"url\":\"/txt/youxi/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"其他\",\"url\":\"/txt/qita/index_{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}},{\"title\":\"书库\",\"url\":\"/txt/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.2}}]",
    "header": "{\n\t\"User-Agent\": \"Mozilla/5.0 (Linux; Android 12; OXF-AN00 Build/HUAWEIOXF-AN00; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/114.0.5735.196 Mobile Safari/537.36\"\n}",
    "lastUpdateTime": "1744188188820",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "span:contains(作者) > a@text",
      "coverUrl": "#bookimg > img@src",
      "downloadUrls": "#button_all@.b2@a@href",
      "intro": "#bookintro@text##(^|[。！？]+[”」）】]?)##$1<br>",
      "kind": "li:contains(分类) > span@text&&li:contains(状态) > span@text&&li:contains(更新) > span@text",
      "lastChapter": "[property$=og:novel:lastest_chapter_name]@content",
      "name": ".d_title@h1@text",
      "tocUrl": "",
      "wordCount": "li:contains(字数) > span@text"
    },
    "ruleContent": {
      "content": ".m-post@html##<script.*?</script>",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "#sitebox@dl",
      "bookUrl": "a@href",
      "coverUrl": "img@data-original",
      "intro": ".book_des@text",
      "kind": ".book_other@span@text",
      "lastChapter": "dd:contains(最新章节) > a@text",
      "name": "dd@h3@a@text",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": "",
      "bookList": "ol#b_results .b_algo.0",
      "bookUrl": "a.tilk@href",
      "coverUrl": "a.tilk@href\n@js:\nid=result.match(/\\/(\\d+)\\/$/)[1];\nx = id.length-3>0? id.substr(0, id.length-3) : 0;\nimg = `https://www.beqege.cc/cover/${x}/${id}.jpg`;",
      "intro": "链接：{{@@.b_tpcn a@href}}\n简介：{{@@p@text}}",
      "lastChapter": "",
      "name": "<js>\nx=java.getString(\"h2.0@text\");\nif (/第.+章/.test(x) || /《.+》/.test(x)) {\n\tb=null;\n\t}else{\n\t\tb=java.getString(\"h2.0@text\")};\nb;\n</js>##^([^_]+)_.*##$1"
    },
    "ruleToc": {
      "chapterList": "#chapterList@li@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "@js:\ncookie.removeCookie(\"https://cn.bing.com\")\n\"https://cn.bing.com/search?q=site%3Awww.338i.com%20{{java.encodeURI(key)}}&first={{(page-1)*10+1}},\"+JSON.stringify({\n  'webView': true\n})",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁25.04.06,网站有很多目录缺失的书籍,发现页也有很多空的,质量一般\n//首发论坛：taoba.cf",
    "bookSourceName": "源社区出品-色友小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://seyouxiaoshuo.com/",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"玄幻小说\",\"url\":\"/index.php/book/category/tags/1/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"奇幻小说\",\"url\":\"/index.php/book/category/tags/2/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"武侠小说\",\"url\":\"/index.php/book/category/tags/3/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"仙侠小说\",\"url\":\"/index.php/book/category/tags/4/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"都市小说\",\"url\":\"/index.php/book/category/tags/5/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"言情小说\",\"url\":\"/index.php/book/category/tags/6/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"历史小说\",\"url\":\"/index.php/book/category/tags/7/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"军事小说\",\"url\":\"/index.php/book/category/tags/8/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"游戏小说\",\"url\":\"/index.php/book/category/tags/9/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"悬疑小说\",\"url\":\"/index.php/book/category/tags/10/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"科幻小说\",\"url\":\"/index.php/book/category/tags/11/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"灵异小说\",\"url\":\"/index.php/book/category/tags/12/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"二次元小说\",\"url\":\"/index.php/book/category/tags/13/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"短篇小说\",\"url\":\"/index.php/book/category/tags/14/page/{{page}}\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}]",
    "lastUpdateTime": "1743967089067",
    "respondTime": 180000,
    "ruleBookInfo": {
      "intro": "<js>\na=java.getString('#chapterlsit@li@a.0@text')\nif (String(a).length==0){\n\tresult='本书没有目录还请换源阅读';\n\tresult\n\t}else {\n\t\tjava.getString('.decs@html')\n\t\t}\n</js>",
      "kind": ".ty@text"
    },
    "ruleContent": {
      "content": ".tjc-cot@html"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "span.0@text",
      "bookList": ".tjshu@li",
      "bookUrl": "a@href",
      "coverUrl": "img@src",
      "intro": ".decs@html",
      "kind": "span.1@text",
      "name": ".name@text",
      "wordCount": ".date@text"
    },
    "ruleToc": {
      "chapterList": "#chapterlsit@li a\n<js>\nif (result.length==0){\n\tjava.toast('该书籍没有目录，请换源');\n\tresult\n\t}else {\n\t\tresult\n\t\t}\n</js>",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "https://seyouxiaoshuo.com/index.php/book/search/{{key}}/{{page}}",
    "weight": 0
  },
  {
    "bookSourceComment": "目录js规则抄的酷安@转义字符大佬的\n\nhttps://www.shongshu.com/",
    "bookSourceGroup": "🎖禁",
    "bookSourceName": "小红书（通用）",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.longtimebook.com/",
    "customOrder": 117,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"高H\",\"url\":\"https://www.shongshu.com/search/%E9%AB%98h/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"快穿\",\"url\":\"https://www.shongshu.com/search/%E5%BF%AB%E7%A9%BF/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"双洁\",\"url\":\"https://www.shongshu.com/search/%E5%8F%8C%E6%B4%81/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"1v1\",\"url\":\"https://www.shongshu.com/search/1v1/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"竹马\",\"url\":\"https://www.shongshu.com/search/%E2%80%8C%E2%80%8D%E7%AB%B9%E9%A9%AC/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"童话\",\"url\":\"https://www.shongshu.com/search/%E2%80%8C%E2%80%8D%E7%AB%A5%E8%AF%9D/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"人鱼\",\"url\":\"https://www.shongshu.com/search/%E4%BA%BA%E9%B1%BC/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"甜文\",\"url\":\"https://www.shongshu.com/search/%E2%80%8E%E7%94%9C%E6%96%87/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"直男\",\"url\":\"https://www.shongshu.com/search/%E7%9B%B4%E7%94%B7/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"俊帅受\",\"url\":\"https://www.shongshu.com/search/%E4%BF%8A%E5%B8%85%E5%8F%97/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"恶毒受\",\"url\":\"https://www.shongshu.com/search/%E6%81%B6%E6%AF%92/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"龙傲天\",\"url\":\"https://www.shongshu.com/search/%E9%BE%99%E5%82%B2%E5%A4%A9/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"欢喜冤家\",\"url\":\"https://www.shongshu.com/search/%E2%80%8E%E2%80%8D%E6%AC%A2%E5%96%9C%E5%86%A4%E5%AE%B6/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"美攻强受\",\"url\":\"https://www.shongshu.com/search/%E7%BE%8E%E6%94%BB%E5%BC%BA%E5%8F%97/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},{\"title\":\"强攻强受\",\"url\":\"https://www.shongshu.com/search/%E5%BC%BA%E6%94%BB%E5%BC%BA%E5%8F%97/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}]",
    "lastUpdateTime": "1744021046750",
    "respondTime": 5691,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "[property=\"og:novel:update_time\"]@content&&\n[property=\"og:description\"]@content##^##更新时间：",
      "kind": "[property~=category|status|tags]@content",
      "lastChapter": "[property~=las?test_chapter_name]@content",
      "name": "[property=\"og:novel:book_name\"]@content",
      "tocUrl": "class.BGsectionOne-bottom@li.1@tag.a@href"
    },
    "ruleContent": {
      "content": ".RBGsectionThree-content@p@html"
    },
    "ruleExplore": {
      "author": "span.2@text",
      "bookList": ".SHsectionThree-middle p",
      "bookUrl": "span.1@tag.a.0@href",
      "intro": "",
      "kind": "span.0@text##\\[|\\]",
      "lastChapter": "p.3@text",
      "name": "span.1@text"
    },
    "ruleSearch": {
      "author": "span.3@text",
      "bookList": "class.SHsectionThree-middle@tag.p",
      "bookUrl": "span.1@tag.a@href",
      "checkKeyWord": "我的",
      "kind": "span.0@text",
      "name": "span.1@text"
    },
    "ruleToc": {
      "chapterList": "class.BCsectionTwo-top-chapter\n<js>\ntry {\na=src.match(/var originalOrder = \\[.*\\];/)[0]\neval(String(a))\n\nlist=[]\nfor (i in result) {\n\tlist[originalOrder[i]]=result[i]\n\t}\n\t\nlist\n} catch(err) {\n\tresult\n\t}\n\t\n</js>",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href##$##,{'webView': true}",
      "nextTocUrl": "text.下一页@href||option@value"
    },
    "searchUrl": "/search/{{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁25.04.06修复\n//首发论坛：taoba.cf\nhttps://m.74txt.cc\nhttps://m.74txt.com",
    "bookSourceGroup": "✨",
    "bookSourceName": "源社区出品-✍骑士小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.74txts.com/",
    "customOrder": 502,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "玄幻::/fenlei/1_{{page}}\n武侠::/fenlei/2_{{page}}\n都市::/fenlei/3_{{page}}\n历史::/fenlei/4_{{page}}\n科幻::/fenlei/6_{{page}}\n游戏::/fenlei/5_{{page}}\n女生::/fenlei/7_{{page}}\n其他::/fenlei/8_{{page}}",
    "lastUpdateTime": "1743967235744",
    "loginCheckJs": "cookie.removeCookie(source.getKey())\nresult",
    "respondTime": 5821,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "img@src",
      "intro": "[property$=description]@content##(^|[。！？]+[”」）】]?)##$1&lt;br&gt;",
      "kind": "[property~=category|status|update_time]@content##\\s.*",
      "lastChapter": "[property$=latest_chapter_name]@content##正文卷.|正文.|VIP章节.|免费章节.|VIP卷.|默认卷.|章节目录.|最新章节.|[\\(（【].*?[求更票谢乐发订合补加].*?[】）\\)]",
      "name": "[property$=book_name]@content",
      "tocUrl": "text.更多章节@href",
      "wordCount": "class.xxx@tag.a@text##$##万字"
    },
    "ruleContent": {
      "content": "id.booktxt@p@textNodes",
      "nextContentUrl": "id.linkNext@href",
      "replaceRegex": "##(本章完)|{{chapter.title}}\\n*|\\s*.*(推荐票|月票|求收藏|求推荐|新书).*|\\s*\\(.*?\\)$|请关闭浏览器的阅读/畅读/小说模式并且关闭广告屏蔽过滤功能，避免出现内容无法显示或者段落错乱。"
    },
    "ruleExplore": {
      "author": "p.-3@text",
      "bookUrl": "a@href",
      "coverUrl": "img@src",
      "intro": "p.-1@text",
      "kind": "",
      "name": "h2@text"
    },
    "ruleSearch": {
      "author": "",
      "bookList": "class.panel-body@.book-coverlist",
      "bookUrl": "a@href",
      "coverUrl": "",
      "intro": ".text-justify@text",
      "kind": "",
      "name": "h4@text"
    },
    "ruleToc": {
      "chapterList": "id.newlist@dd",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "nextTocUrl": "text.下一页@href"
    },
    "searchUrl": "<js>\ncookie.removeCookie(source.key);\nurl=source.key;\na=java.ajax(url);\n//java.log(a)\nb=a.match(/action=\\\"([^\"]*)\\\"/)[1];\nc=`?searchkey=${key},{\"method\": \"get\"}`;\nb+=c\n</js>",
    "weight": 0
  },
  {
    "bookSourceGroup": "-自制,✨极速",
    "bookSourceName": "ttmhbook-必应搜索[优化版]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.ttmhbook.com/",
    "bookUrlPattern": "https://www\\.ttmhbook\\.com/\\w+/\\d+/",
    "customOrder": 4,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "header": "{\n\t\"User-Agent\": \"Mozilla/5.0 (Linux; Android 12; OXF-AN00 Build/HUAWEIOXF-AN00; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/114.0.5735.196 Mobile Safari/537.36\"\n}",
    "lastUpdateTime": "1743748346922",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property$=og:novel:author]@content",
      "coverUrl": ".book-intro .book-img img@src",
      "intro": "{{@@.book-intro p:contains(作品简介)@text##作品简介：}}##(^|[。！？……；]+[”」）】]?)##$1<br>",
      "kind": "[property$=og:novel:category]@content&&[property$=og:novel:status]@content&&[property$=og:novel:update_time]@content",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "h1@text"
    },
    "ruleContent": {
      "content": ".m-post@html##<script.*?</script>",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "",
      "bookList": "ol#b_results .b_algo.0",
      "bookUrl": "a.tilk@href",
      "checkKeyWord": "美学公式",
      "coverUrl": "a.tilk@href\n@js:\nid=result.match(/\\/(\\d+)\\/$/)[1];\nx = id.length-3>0? id.substr(0, id.length-3) : 0;\nimg = `https://www.beqege.cc/cover/${x}/${id}.jpg`;",
      "intro": "链接：{{@@.b_tpcn a@href}}\n简介：{{@@p@text}}",
      "name": "<js>\nx=java.getString(\"h2.0@text\");\nif (/第.+章/.test(x) || /《.+》/.test(x)) {\n\tb=null;\n\t}else{\n\t\tb=java.getString(\"h2.0@text\")};\nb;\n</js>##^([^_]+)_.*##$1"
    },
    "ruleToc": {
      "chapterList": ".xsbox ul li",
      "chapterName": "a@text||replace(\\s*\\d+$||)|trim",
      "chapterUrl": "a@href"
    },
    "searchUrl": "@js:\ncookie.removeCookie(\"https://cn.bing.com\")\n\"https://cn.bing.com/search?q=site%3Awww.ttmhbook.com%20{{java.encodeURI(key)}}&first={{(page-1)*10+1}},\"+JSON.stringify({\n  'webView': true\n})",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "壬二酸 目录下一页by辞暮🍏",
    "bookSourceGroup": "联通可直连",
    "bookSourceName": "po18文学壬二酸",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.po18co.com/",
    "customOrder": -22,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "header": "",
    "lastUpdateTime": "1743605514477",
    "respondTime": 76168,
    "ruleBookInfo": {
      "author": "class.xx@tag.ul@tag.li.2@tag.a@text",
      "canReName": "",
      "coverUrl": "class.xsfm@tag.img@src",
      "intro": "class.jianjie bk@text",
      "kind": "class.xx@tag.ul@tag.li.1@tag.a@text",
      "lastChapter": "class.xx@tag.ul@tag.li.3@tag.a@text",
      "name": "class.xx@tag.ul@tag.li.0@text",
      "tocUrl": "text.查看更多章节@href",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "id.nr@textNodes",
      "imageStyle": "full"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": "tag.a.2@text",
      "bookList": "class.fk@tag.li",
      "bookUrl": "tag.a.1@href",
      "checkKeyWord": "不死不灭",
      "coverUrl": "",
      "intro": "",
      "kind": "tag.a.0@text",
      "name": "tag.a.1@text##在线阅读",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "class.lb fk@tag.li!-1",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href",
      "isVip": "",
      "isVolume": "voltype",
      "nextTocUrl": ".showpage a@href",
      "preUpdateJs": "",
      "updateTime": "info"
    },
    "searchUrl": "/s.php,{\n  \"body\": \"submit=&type=articlename&s={{key}}\",\n  \"method\": \"POST\",\n  \"charset\": \"GBK\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "なな酱ゃ帮忙正文图片解密\n情无羁帮忙解决了正文是图片和纯字的判断if else \n壬二酸于2025.4.1 ",
    "bookSourceName": "国学汉籍",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.gxhj.com/",
    "customOrder": 2,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "lastUpdateTime": "1743601394456",
    "respondTime": 180000,
    "ruleBookInfo": {
      "lastChapter": "class.lst8@tag.li.-1@text",
      "name": "class.breadcrumb@tag.ul@tag.li.2@text"
    },
    "ruleContent": {
      "content": "<js>\nif (src.match(/imlist/)){\nvar imlist = src.match(/var imlist=\"([^\"]+)\"/)[1];\nvar imgpath = src.match(/var imgpath=\"([^\"]+)\"/)[1];\n\nvar img = imlist.split(\",\")\n  .map(function(filename) {\n    return '<img src=\"' + imgpath + filename.trim() + '\">';\n  })\n  .join(\"\\n\");\n\nimg\n}else {\na=java.getString('class.mcon@tag.p.0@html')\n\t}\n</js>",
      "nextContentUrl": ""
    },
    "ruleExplore": [],
    "ruleSearch": {
      "bookList": " class.lst6@tag.li",
      "bookUrl": "tag.a@href",
      "checkKeyWord": "學易記;九卷, 首一卷",
      "name": "tag.a@text"
    },
    "ruleToc": {
      "chapterList": "class.lst8@tag.li||class.lst9@tag.li",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href\n\n"
    },
    "searchUrl": "/search/?keyword={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttps://20.langge.tk\nhttps://api.langge.cf\nhttp://219.154.201.122:5006\nhttp://110.40.38.4:5006\n*/\n\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增大灰狼书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和大灰狼书架栏目\n2.预计新增阅读记录，阅读过的书籍可在大灰狼书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增大灰狼书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceGroup": "大灰狼小说,番茄小说,七猫小说,塔读小说,得间小说,起点小说",
    "bookSourceName": "聚合总有你需要的",
    "bookSourceType": 0,
    "bookSourceUrl": "https://api.doubi.tk",
    "concurrentRate": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"大灰狼书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1744021209697",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录大灰狼账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚大灰狼书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','大灰狼书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录大灰狼小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('https://dashabi.tk', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\n//java.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录大灰狼账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄大灰狼账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('大灰狼融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t//如果要显示最新章节，请去除注释，去除会影响搜索速度\n//if ('{{$.source}}'=='番茄'){\n//\t'番茄:'+fq_last();\n//\t} else if ('{{$.source}}'=='七猫'){\n//\t'七猫:'+qm_last();\n//\t} else {\n\t'{{$.source}} {{$.last_chapter_title}}'\n//\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet device;\nlet device_type;\nlet tab = book_detail.tab;\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n \tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\nlet content_url = `${item_id}大灰狼融合2.1${tab}大灰狼融合2.1${title}大灰狼融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "每隔八小时访问一遍签到（使用的时候访问）\n点击“登录”自定义发现\n更改过发现要刷新本书源才会生效\n\n❗️注意事项:\n1、请不要退出晋江app的账号，只要点了退出，或者在其他地方登录了，都要重新抓token。\n2、更新token，书籍就要更新目录。\n3、【抓包token登录】和【账号登录】二选一，【抓包token登录】的优先级高些，填了【抓包token登录】，就是按【抓包token登录的值】登录\n\n4、登录步骤【设备保护关闭的状态下】：\n①填写好账号密码，点击“邮箱验证码”或者“手机验证码”\n②填写好验证码，点击“邮箱登录”或者“手机登录”\n③想要确认是否成功可以在登录UI里点右上角三点，查看登录头token里是否有值。\n④如果弹出提示“请校检验证码”，可尝试填入上一次发送给你验证码。\n\n5、如果邮箱和手机号无法登录，可能是需要过滑动验证码，可尝试先在晋江app里登录一遍后，再在阅读里登录，❗️还是不行就只能抓包token，填写在“抓包token登录”处。",
    "bookSourceGroup": "①🔰  正版,②🌸  常用",
    "bookSourceName": "🏷晋江文学",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.jjwxc.net/channel/",
    "bookUrlPattern": "https?://app-cdn.jjwxc.net/androidapi/novelbasicinfo\\?novelId=\\d+",
    "customOrder": 4,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\ntoken = Map(\"token\");\n\n// 选择需要开启的分类\nconst enabledCategories = Map(\"fl\") || \"9,10\";\nconst tagNum = Map(\"bq\") || \"5\";\n\ntagName = [\"言情\",\"纯爱\",\"百合\",\"无Cp\",\"多元\"][Number(tagNum)-1];\ntagCategory = [1,2,3,5,6][Number(tagNum)-1];\nconst at = Map(\"at\");\n\n\n// 一行个数（0是自由排）\nconst defaultNumPerRow = 0;\n\n\n// 分隔符\nconst separator = '::';\n\n\n//标识符\n分类标识 =\"🌸\"\n榜单标识=\"📖\"\n标签标识=\"🏷\"\n\n// 添加作者格式：作者名::作者id\nlet authorNames = String(java.base64Decode(at || \"\")).split(\" \").filter(name => name.trim() !== \"\");\nauthorNames = authorNames.length ? authorNames.map(x => `${x}::::at`) : [];\nif (authorNames.length) authorNames.unshift(\"📖 作者 📖::::1\");\n\n//书架数据\nlet ShelfNum  = Map(\"classNum\")??\"\"\nlet ShelfList = [];\n\tif(/❗️([\\s\\S]+?)❗️/.test(String(source.getVariable()))){\n\t\tShelfList =JSON.parse(String(source.getVariable()).match(/❗️([\\s\\S]+?)❗️/)[1]);\n\t\t}else{\n\t\t\tShelfNum = \"\"\n\t\t\t}\n\n// 为数组中的每一项添加 \"::::class\"\nShelfList = ShelfList.map(item => item + \"::::class\");\n\n// 标题::链接::一行个数::分类\nlet all = [\n\"🍒 其他::::1\",\n  \"点击签到::https://app.jjwxc.org/androidapi/signin,{\\\"method\\\":\\\"POST\\\",\\\"body\\\":\\\"versionCode=313&sign={{enbody = String(Date.now())+':'+String(source.getLoginHeaderMap().get('token'));String(java.createSymmetricCrypto('DES/CBC/PKCS5Padding', String('KW8Dvm2N'), String('1ae2c94b')).encryptBase64(enbody))}}\\\"}\",\n  \"今日限免::https://app-cdn.jjwxc.net/bookstore/getFullPage?channel=novelfree\",\n  \"新书千字榜::https://app-cdn.jjwxc.com/bookstore/favObservationByDate?day=today&use_cdn=1&version=19\",\n  \"⬆️ TOP 100::::1\",\n  \"言情::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=yq,{'headers':{'versionCode': '389'}}::null\",\n\"纯爱::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=dm,{'headers':{'versionCode': '389'}}::null\",\n\"衍生::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=tr,{'headers':{'versionCode': '389'}}::null\",\n\"无CP+::https://app.jjwxc.org/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=389&type=nocp_plus,{'headers':{'versionCode': '389'}}::null\",\n\"百合::https://android.jjwxc.net/app.jjwxc/android/reading/TopOneHundred/getRankData?versionCode=398&type=bh,{'headers':{'versionCode': '398','versiontype':'reading'}}::null\"\n];\n\nconst categories = [\"古代言情\",\"现代言情\",\"幻想现言\",\"古代穿越\",\"奇幻言情\",\"未来游戏悬疑\",\"都市纯爱\",\"现代幻纯\",\"古代纯爱\",\"百合\",\"无CP\",\"衍生无CP\",\"衍生纯爱\",\"衍生言情\",\"二次元言情\",\"多元\",\"男主无CP\",\"女主无CP\",\"未来幻纯\"];\n\n// 分类数据\nconst categoryData = {\n  \"古代言情\": {\n    \"连载\": [\n      \"复仇虐渣::natural_16\",\n      \"重生::natural_12\",\n      \"宫廷侯爵::natural_11\",\n      \"架空历史::natural_13\",\n      \"布衣生活::natural_9\",\n      \"古香古色::natural_8\",\n      \"科举朝堂::natural_18\",\n      \"励志人生::natural_19\",\n      \"市井人家::natural_17\",\n      \"女尊女强::natural_14\",\n      \"传奇武侠::natural_15\"\n    ],\n    \"完结\": [\n      \"复仇虐渣::natural_33\",\n      \"重生::natural_29\",\n      \"宫廷侯爵::natural_28\",\n      \"架空历史::natural_30\",\n      \"布衣生活::natural_26\",\n      \"古香古色::natural_25\",\n      \"科举朝堂::natural_35\",\n      \"励志人生::natural_36\",\n      \"市井人家::natural_34\",\n      \"女尊女强::natural_31\",\n      \"传奇武侠::natural_32\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_23\",\n                  \"运气淘文::40000001\",\n      \"勤奋更新::natural_1482\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=101&ranktype=deep\",\n      \"育苗实验::90001000_101\",\n      \"VIP新文::natural_3\",\n      \"新晋作者::natural_4\",\n      \"月度排行::natural_5\",\n      \"季度排行::natural_6\",\n      \"半年排行::natural_7\"\n    ]\n  },\n  \"现代言情\": {\n    \"连载\": [\n      \"天之骄子::natural_52\",\n      \"豪门世家::natural_44\",\n      \"励志人生::natural_46\",\n      \"娱乐星光::natural_53\",\n      \"婚前婚后::natural_47\",\n      \"时代新风::natural_51\",\n      \"校园青春::natural_73\",\n      \"都市情缘::natural_48\",\n      \"甜心蜜意::natural_75\",\n      \"破镜重圆::natural_49\",\n      \"近水楼台::natural_50\",\n      \"情有独钟::natural_76\",\n      \"时尚流行::natural_74\",\n      \"欢喜冤家::natural_54\",\n      \"因缘邂逅::natural_55\"\n    ],\n    \"完结\": [\n      \"天之骄子::natural_69\",\n      \"豪门世家::natural_61\",\n      \"励志人生::natural_63\",\n      \"娱乐星光::natural_70\",\n      \"婚前婚后::natural_64\",\n      \"时代新风::natural_68\",\n      \"校园青春::natural_77\",\n      \"都市情缘::natural_65\",\n      \"甜心蜜意::natural_79\",\n      \"破镜重圆::natural_66\",\n      \"近水楼台::natural_67\",\n      \"情有独钟::natural_80\",\n      \"时尚流行::natural_78\",\n      \"欢喜冤家::natural_71\",\n      \"因缘邂逅::natural_72\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_59\",\n                  \"运气淘文::40000002\",\n      \"勤奋更新::natural_1483\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=102&ranktype=deep\",\n      \"育苗实验::90001000_102\",\n      \"VIP新文::natural_39\",\n      \"新晋作者::natural_40\",\n      \"月度排行::natural_41\",\n      \"季度排行::natural_42\",\n      \"半年排行::natural_43\"\n    ]\n  },\n  \"幻想现言\": {\n    \"连载\": [\n      \"流金年代::natural_107\",\n      \"豪门世家::natural_100\",\n      \"娱乐时尚::natural_108\",\n      \"快穿系统::natural_97\",\n      \"种田日常::natural_98\",\n      \"打脸爽文::natural_105\",\n      \"重启人生::natural_93\",\n      \"都市异闻::natural_103\",\n      \"穿越时空::natural_94\",\n      \"神奇能力::natural_102\",\n      \"升级逆袭::natural_104\",\n      \"时代奇缘::natural_96\",\n      \"人生赢家::natural_95\",\n      \"现代架空::natural_101\",\n      \"幻想传奇::natural_99\"\n    ],\n    \"完结\": [\n      \"流金年代::natural_123\",\n      \"豪门世家::natural_116\",\n      \"娱乐时尚::natural_124\",\n      \"快穿系统::natural_113\",\n      \"种田日常::natural_114\",\n      \"打脸爽文::natural_121\",\n      \"重启人生::natural_109\",\n      \"都市异闻::natural_119\",\n      \"穿越时空::natural_110\",\n      \"神奇能力::natural_118\",\n      \"升级逆袭::natural_120\",\n      \"时代奇缘::natural_112\",\n      \"人生赢家::natural_111\",\n      \"现代架空::natural_117\",\n      \"幻想传奇::natural_115\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_86\",\n                  \"运气淘文::40000003\",\n      \"勤奋更新::natural_1484\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=103&ranktype=deep\",\n      \"育苗实验::90001000_103\",\n      \"VIP新文::natural_84\",\n      \"新晋作者::natural_87\",\n      \"月度排行::natural_81\",\n      \"季度排行::natural_82\",\n      \"半年排行::natural_88\"\n    ]\n  },\n  \"古代穿越\": {\n    \"连载\": [\n      \"复仇虐渣::natural_148\",\n      \"宫廷侯爵::natural_142\",\n      \"架空穿越::natural_140\",\n      \"系统快穿::natural_147\",\n      \"历史穿越::natural_139\",\n      \"科举朝堂::natural_146\",\n      \"布衣生活::natural_141\",\n      \"欢喜冤家::natural_143\",\n      \"女尊女强::natural_138\",\n      \"市井人家::natural_145\",\n      \"异世穿书::natural_144\"\n    ],\n    \"完结\": [\n      \"复仇虐渣::natural_164\",\n      \"宫廷侯爵::natural_158\",\n      \"架空穿越::natural_156\",\n      \"系统快穿::natural_163\",\n      \"历史穿越::natural_155\",\n      \"科举朝堂::natural_162\",\n      \"布衣生活::natural_157\",\n      \"欢喜冤家::natural_159\",\n      \"女尊女强::natural_154\",\n      \"市井人家::natural_161\",\n      \"异世穿书::natural_160\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_130\",\n                  \"运气淘文::40000004\",\n      \"勤奋更新::natural_1485\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=104&ranktype=deep\",\n      \"育苗实验::90001000_104\",\n      \"VIP新文::natural_128\",\n      \"新晋作者::natural_131\",\n      \"月度排行::natural_125\",\n      \"季度排行::natural_126\",\n      \"半年排行::natural_132\"\n    ]\n  },\n  \"奇幻言情\": {\n    \"连载\": [\n      \"天作之合::natural_179\",\n      \"西方奇幻::natural_183\",\n      \"爽文::natural_181\",\n      \"奇幻甜宠::natural_177\",\n      \"升级逆袭::natural_188\",\n      \"东方玄幻::natural_186\",\n      \"灵异神怪::natural_182\",\n      \"穿书异能::natural_187\",\n      \"系统穿越::natural_185\",\n      \"金手指::natural_184\",\n      \"另类幻想::natural_180\"\n    ],\n    \"完结\": [\n      \"天作之合::natural_191\",\n      \"西方奇幻::natural_195\",\n      \"爽文::natural_193\",\n      \"奇幻甜宠::natural_189\",\n      \"升级逆袭::natural_200\",\n      \"东方玄幻::natural_198\",\n      \"灵异神怪::natural_194\",\n      \"穿书异能::natural_199\",\n      \"系统穿越::natural_197\",\n      \"金手指::natural_196\",\n      \"另类幻想::natural_192\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_170\",\n                  \"运气淘文::40000005\",\n      \"勤奋更新::natural_1486\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=105&ranktype=deep\",\n      \"育苗实验::90001000_105\",\n      \"VIP新文::natural_168\",\n      \"新晋作者::natural_171\",\n      \"月度排行::natural_165\",\n      \"季度排行::natural_166\",\n      \"半年排行::natural_172\"\n    ]\n  },\n  \"未来游戏悬疑\": {\n    \"连载\": [\n      \"赛博废土::natural_225\",\n      \"无限领域::natural_222\",\n      \"基建种田::natural_226\",\n      \"末世异世::natural_215\",\n      \"规则怪谈::natural_223\",\n      \"游戏娱乐::natural_216\",\n      \"悬疑惊悚::natural_220\",\n      \"系统异能::natural_221\",\n      \"穿书快穿::natural_227\",\n      \"升级爽文::natural_224\",\n      \"重生穿越::natural_219\",\n      \"未来科幻::natural_217\",\n      \"推理探案::natural_214\",\n      \"幻想甜宠::natural_228\",\n      \"异度幻想::natural_218\"\n    ],\n    \"完结\": [\n      \"赛博废土::natural_241\",\n      \"无限领域::natural_238\",\n      \"基建种田::natural_242\",\n      \"末世异世::natural_231\",\n      \"规则怪谈::natural_239\",\n      \"游戏娱乐::natural_232\",\n      \"悬疑惊悚::natural_236\",\n      \"系统异能::natural_237\",\n      \"穿书快穿::natural_243\",\n      \"升级爽文::natural_240\",\n      \"重生穿越::natural_235\",\n      \"未来科幻::natural_233\",\n      \"推理探案::natural_230\",\n      \"幻想甜宠::natural_244\",\n      \"异度幻想::natural_234\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_206\",\n                  \"运气淘文::40000006\",\n      \"勤奋更新::natural_1487\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=106&ranktype=deep\",\n      \"育苗实验::90001000_106\",\n      \"VIP新文::natural_204\",\n      \"新晋作者::natural_207\",\n      \"月度排行::natural_201\",\n      \"季度排行::natural_202\",\n      \"半年排行::natural_208\"\n    ]\n  },\n  \"都市纯爱\": {\n    \"连载\": [\n      \"时尚娱乐::natural_270\",\n      \"种田日常::natural_266\",\n      \"现代都市::natural_260\",\n      \"豪门世家::natural_267\",\n      \"业界精英::natural_265\",\n      \"重生::natural_259\",\n      \"边缘恋曲::natural_264\",\n      \"校园青春::natural_261\",\n      \"婚前婚后::natural_272\",\n      \"穿越时空::natural_262\",\n      \"成长励志::natural_268\",\n      \"欢喜冤家::natural_257\",\n      \"情有独钟::natural_271\",\n      \"都市甜文::natural_258\",\n      \"打脸逆袭::natural_263\"\n    ],\n    \"完结\": [\n      \"时尚娱乐::natural_286\",\n      \"种田日常::natural_282\",\n      \"现代都市::natural_276\",\n      \"豪门世家::natural_283\",\n      \"业界精英::natural_281\",\n      \"重生::natural_275\",\n      \"边缘恋曲::natural_280\",\n      \"校园青春::natural_277\",\n      \"婚前婚后::natural_288\",\n      \"穿越时空::natural_278\",\n      \"成长励志::natural_284\",\n      \"欢喜冤家::natural_273\",\n      \"情有独钟::natural_287\",\n      \"都市甜文::natural_274\",\n      \"打脸逆袭::natural_279\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_250\",\n                  \"运气淘文::40000007\",\n      \"勤奋更新::natural_1488\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=107&ranktype=deep\",\n      \"育苗实验::90001000_107\",\n      \"VIP新文::natural_248\",\n      \"新晋作者::natural_251\",\n      \"月度排行::natural_245\",\n      \"季度排行::natural_246\",\n      \"半年排行::natural_252\"\n    ]\n  },\n  \"现代幻纯\": {\n    \"连载\": [\n      \"娱乐星光::natural_517\",\n      \"萌宠频道::natural_515\",\n      \"异闻秘术::natural_514\",\n      \"快穿世界::natural_511\",\n      \"奇幻灵异::natural_523\",\n      \"幻想甜宠::natural_521\",\n      \"无限流::natural_509\",\n      \"系统::natural_512\",\n      \"边缘幻想::natural_516\",\n      \"情有独钟::natural_520\",\n      \"升级爽文::natural_522\"\n    ],\n    \"完结\": [\n      \"娱乐星光::natural_533\",\n      \"萌宠频道::natural_531\",\n      \"异闻秘术::natural_530\",\n      \"快穿世界::natural_527\",\n      \"奇幻灵异::natural_539\",\n      \"幻想甜宠::natural_537\",\n      \"无限流::natural_525\",\n      \"系统::natural_528\",\n      \"边缘幻想::natural_532\",\n      \"情有独钟::natural_536\",\n      \"升级爽文::natural_538\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_502\",\n                  \"运气淘文::40000013\",\n      \"勤奋更新::natural_1495\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=118&ranktype=deep\",\n      \"育苗实验::90001000_118\",\n      \"VIP新文::natural_500\",\n      \"新晋作者::natural_503\",\n      \"月度排行::natural_497\",\n      \"季度排行::natural_498\",\n      \"半年排行::natural_504\"\n    ]\n  },\n  \"古代纯爱\": {\n    \"连载\": [\n      \"仙侠修真::natural_298\",\n      \"布衣生活::natural_297\",\n      \"武侠传奇::natural_307\",\n      \"西幻异世 ::natural_301\",\n      \"穿越时空::natural_303\",\n      \"重生::natural_302\",\n      \"古代幻想::natural_299\",\n      \"系统快穿::natural_304\",\n      \"玄幻灵异::natural_305\",\n      \"天作之合::natural_306\",\n      \"升级逆袭::natural_300\"\n    ],\n    \"完结\": [\n      \"仙侠修真::natural_315\",\n      \"布衣生活::natural_314\",\n      \"武侠传奇::natural_324\",\n      \"西幻异世 ::natural_318\",\n      \"穿越时空::natural_320\",\n      \"重生::natural_319\",\n      \"古代幻想::natural_316\",\n      \"系统快穿::natural_321\",\n      \"玄幻灵异::natural_322\",\n      \"天作之合::natural_323\",\n      \"升级逆袭::natural_317\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_311\",\n                  \"运气淘文::40000008\",\n      \"勤奋更新::natural_1489\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=108&ranktype=deep\",\n      \"育苗实验::90001000_108\",\n      \"VIP新文::natural_291\",\n      \"新晋作者::natural_292\",\n      \"月度排行::natural_293\",\n      \"季度排行::natural_294\",\n      \"半年排行::natural_295\"\n    ]\n  },\n  \"百合\": {\n    \"连载\": [\n      \"幻想未来::natural_336\",\n      \"架空历史::natural_334\",\n      \"都市情缘::natural_337\",\n      \"穿越时空::natural_335\",\n      \"天赐良缘::natural_338\",\n      \"时尚娱乐::natural_339\",\n      \"奇幻异闻::natural_333\",\n      \"系统快穿::natural_342\",\n      \"宫廷侯爵::natural_340\",\n      \"业界精英::natural_341\",\n      \"情有独钟::natural_343\"\n    ],\n    \"完结\": [\n      \"幻想未来::natural_353\",\n      \"架空历史::natural_351\",\n      \"都市情缘::natural_354\",\n      \"穿越时空::natural_352\",\n      \"天赐良缘::natural_355\",\n      \"时尚娱乐::natural_356\",\n      \"奇幻异闻::natural_350\",\n      \"系统快穿::natural_359\",\n      \"宫廷侯爵::natural_357\",\n      \"业界精英::natural_358\",\n      \"情有独钟::natural_360\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_1072\",\n                  \"运气淘文::40000009\",\n      \"勤奋更新::natural_1490\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=9&ranktype=deep\",\n      \"育苗实验::90001000_9\",\n      \"VIP新文::natural_1069\",\n      \"新晋作者::natural_1045\",\n      \"月度排行::natural_1043\",\n      \"季度排行::natural_1042\",\n      \"半年排行::natural_1044\"\n    ]\n  },\n  \"无CP\": {\n    \"连载\": [\n      \"未来幻想-女主::natural_477\",\n      \"都市成长-男主::natural_478\",\n      \"都市成长-女主::natural_479\",\n      \"古代架空-男主::natural_480\",\n      \"古代架空-女主::natural_481\",\n      \"无限快穿-男主::natural_482\",\n      \"无限快穿-女主::natural_483\"\n    ],\n    \"完结\": [\n      \"未来幻想-女主::natural_490\",\n      \"都市成长-男主::natural_491\",\n      \"都市成长-女主::natural_492\",\n      \"古代架空-男主::natural_493\",\n      \"古代架空-女主::natural_494\",\n      \"无限快穿-男主::natural_495\",\n      \"无限快穿-女主::natural_496\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_487\",\n                  \"运气淘文::40000014\",\n      \"勤奋更新::natural_1494\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=114&ranktype=deep\",\n      \"育苗实验::90001000_114\",\n      \"VIP新文::natural_471\",\n      \"新晋作者::natural_472\",\n      \"月度排行::natural_473\",\n      \"季度排行::natural_474\",\n      \"半年排行::natural_475\"\n    ]\n  },\n  \"衍生无CP\": {\n    \"连载\": [\n      \"幻想轻小说::natural_549\",\n      \"东方衍生::natural_550\",\n      \"西方衍生::natural_555\",\n      \"二次元热血::natural_552\",\n      \"二次元幻想::natural_553\",\n      \"二次元异能::natural_554\",\n      \"女主向::natural_551\"\n    ],\n    \"完结\": [\n      \"幻想轻小说::natural_562\",\n      \"东方衍生::natural_563\",\n      \"西方衍生::natural_568\",\n      \"二次元热血::natural_565\",\n      \"二次元幻想::natural_566\",\n      \"二次元异能::natural_567\",\n      \"女主向::natural_564\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_559\",\n      \"运气淘文::40000015\",\n      \"勤奋更新::natural_1496\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=120&ranktype=deep\",\n      \"育苗实验::90001000_120\",\n      \"VIP新文::natural_543\",\n      \"新晋作者::natural_544\",\n      \"月度排行::natural_545\",\n      \"季度排行::natural_546\",\n      \"半年排行::natural_547\"\n    ]\n  },\n  \"衍生纯爱\": {\n    \"连载\": [\n      \"西方罗曼::natural_373\",\n      \"都市轻小说::natural_376\",\n      \"幻想轻小说::natural_377\",\n      \"二次元热血::natural_378\",\n      \"二次元幻想::natural_379\",\n      \"二次元异能::natural_369\",\n      \"其他衍生::natural_372\"\n    ],\n    \"完结\": [\n      \"西方罗曼::natural_390\",\n      \"都市轻小说::natural_393\",\n      \"幻想轻小说::natural_394\",\n      \"二次元热血::natural_395\",\n      \"二次元幻想::natural_396\",\n      \"二次元异能::natural_386\",\n      \"其他衍生::natural_389\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_383\",\n                  \"运气淘文::40000010\",\n      \"勤奋更新::natural_1491\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=110&ranktype=deep\",\n      \"育苗实验::90001000_110\",\n      \"VIP新文::natural_363\",\n      \"新晋作者::natural_364\",\n      \"月度排行::natural_365\",\n      \"季度排行::natural_366\",\n      \"半年排行::natural_367\"\n    ]\n  },\n  \"衍生言情\": {\n    \"连载\": [\n      \"历史传奇::natural_450\",\n      \"西方罗曼::natural_449\",\n      \"无限快穿::natural_451\",\n      \"江湖恩怨::natural_453\",\n      \"娱乐竞技::natural_454\",\n      \"东方幻想::natural_452\",\n      \"其他::natural_455\"\n    ],\n    \"完结\": [\n      \"历史传奇::natural_463\",\n      \"西方罗曼::natural_462\",\n      \"无限快穿::natural_464\",\n      \"江湖恩怨::natural_466\",\n      \"娱乐竞技::natural_467\",\n      \"东方幻想::natural_465\",\n      \"其他::natural_468\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_459\",\n                  \"运气淘文::40000012\",\n      \"勤奋更新::natural_1493\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=112&ranktype=deep\",\n      \"育苗实验::90001000_112\",\n      \"VIP新文::natural_443\",\n      \"新晋作者::natural_444\",\n      \"月度排行::natural_445\",\n      \"季度排行::natural_446\",\n      \"半年排行::natural_447\"\n    ]\n  },\n  \"二次元言情\": {\n    \"连载\": [\n      \"多重身份::natural_415\",\n      \"经营基建::natural_418\",\n      \"竞技社团::natural_422\",\n      \"东方古风::natural_412\",\n      \"西幻魔幻::natural_413\",\n      \"乙女游戏::natural_414\",\n      \"异能超能::natural_417\",\n      \"转生::natural_420\",\n      \"异闻怪谈::natural_421\",\n      \"浪漫情缘::natural_419\",\n      \"新奇幻想::natural_423\"\n    ],\n    \"完结\": [\n      \"多重身份::natural_432\",\n      \"经营基建::natural_435\",\n      \"竞技社团::natural_439\",\n      \"东方古风::natural_429\",\n      \"西幻魔幻::natural_430\",\n      \"乙女游戏::natural_431\",\n      \"异能超能::natural_434\",\n      \"转生::natural_437\",\n      \"异闻怪谈::natural_438\",\n      \"浪漫情缘::natural_436\",\n      \"新奇幻想::natural_440\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_427\",\n                  \"运气淘文::40000011\",\n      \"勤奋更新::natural_1492\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=111&ranktype=deep\",\n      \"育苗实验::90001000_111\",\n      \"VIP新文::natural_407\",\n      \"新晋作者::natural_408\",\n      \"月度排行::natural_409\",\n      \"季度排行::natural_410\",\n      \"半年排行::natural_411\"\n    ]\n  },\n  \"多元\": {\n    \"连载\": [],\n    \"完结\": [],\n    \"榜单\": [\n      \"频道金榜::natural_1010\",\n      \"月度排行::natural_1012\",\n      \"VIP新文::natural_1011\",\n      \"育苗实验::90001000_121\",\n      \"新晋作者::natural_1013\",\n      \"季度排行::natural_1014\",\n      \"半年排行::natural_1518\"\n    ]\n  },\n  \"男主无CP\": {\n    \"连载\": [\n      \"都市成长::natural_478\",\n      \"古代架空::natural_480\",\n      \"无限快穿::natural_482\"\n    ],\n    \"完结\": [\n      \"都市成长::natural_491\",\n      \"古代架空::natural_493\",\n      \"无限快穿::natural_495\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_992\",\n                  \"勤奋更新::natural_1515\",\n      \"VIP新文::natural_986\",\n      \"新晋作者::natural_987\",\n      \"月度排行::natural_988\",\n      \"季度排行::natural_989\",\n      \"半年排行::natural_990\"\n    ]\n  },\n  \"女主无CP\": {\n    \"连载\": [\n      \"都市成长::natural_479\",\n      \"古代架空::natural_481\",\n      \"无限快穿::natural_483\"\n    ],\n    \"完结\": [\n      \"都市成长::natural_492\",\n      \"古代架空::natural_494\",\n      \"无限快穿::natural_496\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_1000\",\n                  \"勤奋更新::natural_1516\",\n      \"VIP新文::natural_994\",\n      \"新晋作者::natural_995\",\n      \"月度排行::natural_996\",\n      \"季度排行::natural_997\",\n      \"半年排行::natural_998\"\n    ]\n  },\n  \"未来幻纯\": {\n    \"连载\": [\n      \"娱乐竞技::natural_1112\",\n      \"快穿::natural_1113\",\n      \"无限流::natural_1114\",\n      \"系统::natural_1115\",\n      \"末世狂想::natural_1116\",\n      \"幻想甜宠::natural_1117\",\n      \"星际日常::natural_1118\",\n      \"奇幻异想::natural_1119\",\n      \"边缘幻想::natural_1120\",\n      \"未来畅想::natural_1121\",\n      \"升级爽文::natural_1122\"\n    ],\n    \"完结\": [\n      \"娱乐竞技::natural_1128\",\n      \"快穿::natural_1129\",\n      \"无限流::natural_1130\",\n      \"系统::natural_1131\",\n      \"末世狂想::natural_1132\",\n      \"幻想甜宠::natural_1133\",\n      \"星际日常::natural_1134\",\n      \"奇幻异想::natural_1135\",\n      \"边缘幻想::natural_1136\",\n      \"未来畅想::natural_1137\",\n      \"升级爽文::natural_1138\"\n    ],\n    \"榜单\": [\n      \"频道金榜::natural_1104\",\n      \"运气淘文::wlhxca\",\n      \"勤奋更新::natural_1497\",\n      \"深耕排行::https://app-cdn.jjwxc.com/newBookStoreAndroid/getRankMoreData?channel=126&ranktype=deep\",\n      \"育苗实验::90001000_126\",\n      \"VIP新文::natural_1102\",\n      \"新晋作者::natural_1105\",\n      \"月度排行::natural_1099\",\n      \"季度排行::natural_1100\",\n      \"半年排行::natural_1106\"\n    ]\n  }\n}\n\n// 标签数据\nconst tags = [\"轻松::262::::bq\",\"爽文::137::::bq\",\"甜文::124::::bq\",\"正剧::263::::bq\",\"穿书::134::::bq\",\"强强::19::::bq\",\"系统::122::::bq\",\"成长::183::::bq\",\"重生::75::::bq\",\"惊悚::9::::lx\",\"悬疑::10::::lx\",\"剧情::16::::lx\",\"快穿::125::::bq\",\"直播::142::::bq\",\"逆袭::184::::bq\",\"励志::121::::bq\",\"打脸::138::::bq\",\"女强::82::::bq\",\"异能::72::::bq\",\"基建::237::::bq\",\"救赎::329::::bq\",\"女配::96::::bq\",\"暗恋::314::::bq\",\"末世::81::::bq\",\"惊悚::29::::bq\",\"婚恋::78::::bq\",\"科幻::28::::bq\",\"炮灰::305::::bq\",\"开挂::344::::bq\",\"经营::180::::bq\",\"脑洞::273::::bq\",\"烧脑::269::::bq\",\"爱情::1::::lx\",\"武侠::2::::lx\",\"奇幻::3::::lx\",\"仙侠::4::::lx\",\"游戏::5::::lx\",\"传奇::6::::lx\",\"科幻::7::::lx\",\"童话::8::::lx\",\"都市::30::::bq\",\"校园::185::::bq\",\"综漫::6::::bq\",\"星际::135::::bq\",\"日常::268::::bq\",\"柯南::241::::bq\",\"年下::21::::bq\",\"咒回::240::::bq\",\"沙雕::266::::bq\",\"美食::99::::bq\",\"生子::20::::bq\",\"群像::356::::bq\",\"萌宠::205::::bq\",\"文野::208::::bq\",\"治愈::265::::bq\",\"团宠::287::::bq\",\"爆笑::261::::bq\",\"西幻::143::::bq\",\"魔幻::27::::bq\",\"综艺::335::::bq\",\"热血::267::::bq\",\"废土::281::::bq\",\"清穿::18::::bq\",\"朝堂::178::::bq\",\"虫族::260::::bq\",\"玄学::206::::bq\",\"萌娃::302::::bq\",\"钓系::298::::bq\",\"电竞::328::::bq\",\"港风::282::::bq\",\"全息::276::::bq\",\"宫斗::74::::bq\",\"剧透::343::::bq\",\"科举::174::::bq\",\"机甲::97::::bq\",\"虐文::42::::bq\",\"网王::1::::bq\",\"原神::371::::bq\",\"古早::275::::bq\",\"师徒::292::::bq\",\"家教::12::::bq\",\"江湖::35::::bq\",\"忠犬::312::::bq\",\"武侠::11::::bq\",\"七五::8::::bq\",\"宅斗::73::::bq\",\"腹黑::290::::bq\",\"权谋::326::::bq\",\"失忆::320::::bq\",\"猎人::5::::bq\",\"洪荒::67::::bq\",\"卡牌::357::::bq\",\"职场::98::::bq\",\"御姐::310::::bq\",\"盲盒::345::::bq\",\"吐槽::270::::bq\",\"替身::286::::bq\",\"预知::346::::bq\",\"创业::330::::bq\",\"足球::368::::bq\",\"BE::317::::bq\",\"HE::318::::bq\",\"ABO::259::::bq\",\"APP::338::::bq\",\"NPC::293::::bq\",\"哨向::369::::bq\",\"田园::58::::bq\",\"中二::375::::bq\",\"群穿::352::::bq\",\"奇谭::197::::bq\",\"囤货::322::::bq\",\"位面::350::::bq\",\"学霸::309::::bq\",\"傲娇::294::::bq\",\"民国::61::::bq\",\"鬼灭::254::::bq\",\"开荒::331::::bq\",\"商战::123::::bq\",\"转生::362::::bq\",\"锦鲤::349::::bq\",\"齐神::201::::bq\",\"血族::69::::bq\",\"网红::141::::bq\",\"现实::271::::bq\",\"扶贫::324::::bq\",\"封神::215::::bq\",\"冰山::296::::bq\",\"聊斋::188::::bq\",\"天降::308::::bq\",\"美娱::140::::bq\",\"毒舌::299::::bq\",\"非遗::323::::bq\",\"吃货::297::::bq\",\"御兽::365::::bq\",\"悲剧::264::::bq\",\"港台::87::::bq\",\"网配::84::::bq\",\"曲艺::306::::bq\",\"婆媳::80::::bq\",\"恶役::359::::bq\",\"轻小说::17::::lx\",\"娱乐圈::64::::bq\",\"无限流::83::::bq\",\"升级流::139::::bq\",\"种田文::66::::bq\",\"年代文::173::::bq\",\"万人迷::295::::bq\",\"美强惨::291::::bq\",\"少年漫::90::::bq\",\"马甲文::243::::bq\",\"克苏鲁::283::::bq\",\"白月光::313::::bq\",\"单元文::355::::bq\",\"高智商::311::::bq\",\"读心术::337::::bq\",\"时尚圈::182::::bq\",\"迪化流::370::::bq\",\"龙傲天::289::::bq\",\"论坛体::354::::bq\",\"对照组::316::::bq\",\"古穿今::65::::bq\",\"红楼梦::15::::bq\",\"反套路::274::::bq\",\"神豪流::348::::bq\",\"纸片人::288::::bq\",\"日韩泰::86::::bq\",\"签到流::351::::bq\",\"读档流::340::::bq\",\"召唤流::347::::bq\",\"大冒险::198::::bq\",\"姐弟恋::186::::bq\",\"模拟器::358::::bq\",\"乙女向::360::::bq\",\"少女漫::14::::bq\",\"吐槽役::366::::bq\",\"犬夜叉::257::::bq\",\"红包群::341::::bq\",\"中世纪::280::::bq\",\"对话体::353::::bq\",\"情有独钟::39::::bq\",\"穿越时空::60::::bq\",\"天作之合::52::::bq\",\"天之骄子::54::::bq\",\"豪门世家::33::::bq\",\"宫廷侯爵::32::::bq\",\"仙侠修真::68::::bq\",\"破镜重圆::47::::bq\",\"业界精英::101::::bq\",\"灵异神怪::26::::bq\",\"幻想空间::25::::bq\",\"先婚后爱::315::::bq\",\"欢喜冤家::41::::bq\",\"悬疑推理::128::::bq\",\"游戏网游::92::::bq\",\"时代奇缘::22::::bq\",\"青梅竹马::62::::bq\",\"因缘邂逅::45::::bq\",\"现代架空::126::::bq\",\"相爱相杀::103::::bq\",\"花季雨季::31::::bq\",\"未来架空::127::::bq\",\"恋爱合约::48::::bq\",\"英美衍生::17::::bq\",\"体育竞技::70::::bq\",\"近水楼台::46::::bq\",\"超级英雄::132::::bq\",\"东方玄幻::144::::bq\",\"布衣生活::38::::bq\",\"乔装改扮::51::::bq\",\"规则怪谈::361::::bq\",\"复仇虐渣::145::::bq\",\"异世大陆::57::::bq\",\"高岭之花::301::::bq\",\"市井生活::175::::bq\",\"赛博朋克::277::::bq\",\"女扮男装::136::::bq\",\"随身空间::56::::bq\",\"第四天灾::285::::bq\",\"前世今生::49::::bq\",\"灵魂转换::23::::bq\",\"西方罗曼::59::::bq\",\"阴差阳错::53::::bq\",\"都市异闻::181::::bq\",\"天选之子::307::::bq\",\"史诗奇幻::199::::bq\",\"时代新风::210::::bq\",\"抽奖抽卡::339::::bq\",\"日久生情::332::::bq\",\"异想天开::190::::bq\",\"边缘恋歌::44::::bq\",\"排球少年::253::::bq\",\"异闻传说::196::::bq\",\"制服情缘::85::::bq\",\"三教九流::36::::bq\",\"神话传说::367::::bq\",\"古代幻想::189::::bq\",\"古典名著::130::::bq\",\"平步青云::55::::bq\",\"灵气复苏::284::::bq\",\"西方名著::16::::bq\",\"荒野求生::319::::bq\",\"赶山赶海::325::::bq\",\"性别转换::24::::bq\",\"真假千金::334::::bq\",\"刀剑乱舞::258::::bq\",\"星穹铁道::372::::bq\",\"多重人格::300::::bq\",\"极品亲戚::336::::bq\",\"骑士与剑::63::::bq\",\"亡灵异族::192::::bq\",\"交换人生::342::::bq\",\"魔法少女::256::::bq\",\"原始社会::279::::bq\",\"七年之痒::79::::bq\",\"蒸汽朋克::278::::bq\",\"古典衍生::20::::lx\",\"东方衍生::18::::lx\",\"西方衍生::19::::lx\",\"历史衍生::91::::bq\",\"其他衍生::21::::lx\",\"追爱火葬场::321::::bq\"];\n\n// 解析分类数据\nfunction parseCategory(data) {\n  const [title, url, num = defaultNumPerRow] = data.split(separator);\n  \n  const fullUrl = /^\\d+|natural/.test(url) \n    ? `http://app-cdn.jjwxc.net/bookstore/getFullPage?channelBody=%7B%22${url}%22%3A%7B%22offset%22%3A%22{{(page-1)*25}}%22%2C%22limit%22%3A%2225%22%7D%7D&versionCode=148`\n    : url;\n  \n  return [title, fullUrl, num];\n}\n\n// 解析标签数据\nfunction parseTag(data, tagCategory) {\n  const [title, url, num = defaultNumPerRow, tagType] = data.split(separator);\n  \n  let fullUrl = url;\n  if (tagType === \"bq\") {\n    fullUrl = `https://android.jjwxc.com/search/getSearchForKeyWords?versionCode=313&offset={{(page-1)*20}}&limit=20&bq=${url}&removetags=0&fw=0&yc=0&xx=${tagCategory}&sd=0&lx=0&fg=0&mainview=0&fbsj=0&collectionTypes=ors&isfinish=0&sortType=0&token=${token}`;\n  } else if (tagType === \"at\") {\n  \tfullUrl = `https://app-cdn.jjwxc.com/androidapi/authorColumn?authorid=${url}`;\n  \t\n  \t}else if (tagType === \"class\") {\n  \tfullUrl = `https://android.jjwxc.net/androidapi/incrementFavorite,{'method':'POST','body':\\\"versionCode=313&token=${token}&order=1&classId=${url}&backupTime=${Date.now()}\\\"}`\n  \t\n  \t}else if (tagType === \"lx\") {\n    fullUrl = `https://android.jjwxc.com/search/getSearchForKeyWords?versionCode=313&offset={{(page-1)*20}}&limit=20&bq=0&removetags=0&fw=0&yc=0&xx=${tagCategory}&sd=0&lx=${url}&fg=0&mainview=0&fbsj=0&collectionTypes=ors&isfinish=0&sortType=0&token=${token}`;\n  }\n  return [title, fullUrl, num];\n}\n\n// 创建 FlexBox 对象\nfunction createFlexBox(title, url, num) {\n  const flexBasisMap = { 1: 1, 2: 0.4, 3: 0.25, 4: 0.2, 5: 0.15, 7: 0.1, 10: 0.05 };\n  return {\n    title,\n    url: url || '',\n    style: {\n      layout_flexGrow: 1,\n      layout_flexBasisPercent: flexBasisMap[num]\n    }\n  };\n}\n\n// 生成分类结果\nconst result = [];\nresult.push(createFlexBox(`📂 我的收藏`, \"https://android.jjwxc.net/androidapi/incrementFavorite,{'method':'POST','body':\\\"versionCode=313&token={{source.getLoginHeaderMap().get('token')}}&order=1&classId=&backupTime={{Date.now()}}\\\"}\", 1));\n\nif(ShelfNum){\nconst ShelfNumList = String(ShelfNum).split(\",\");\nShelfNumList.forEach(x => {\n  const parsedTag = parseTag(ShelfList[x]);\n  result.push(createFlexBox(parsedTag[0], parsedTag[1], parsedTag[2],parsedTag[3]));\n});\n}\n\n\nauthorNames.forEach(tag => {\n  const parsedTag = parseTag(tag, tagCategory);\n  result.push(createFlexBox(parsedTag[0], parsedTag[1], parsedTag[2],parsedTag[3]));\n});\n\nJSON.stringify(result);\n\nall.forEach(item => {\n  const parsedItem = parseCategory(item);\n  result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n});\n\nconst enabledCategoryList = enabledCategories.split(\",\");\nenabledCategoryList.forEach(categoryIndex => {\n  const categoryName = categories[categoryIndex];\n  if (categoryData[categoryName]) {\n    result.push(createFlexBox(`${分类标识} ${categoryName}连载`, null, 1));\n    categoryData[categoryName].连载.forEach(item => {\n      const parsedItem = parseCategory(item);\n      result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n    });\n    result.push(createFlexBox(`${分类标识} ${categoryName}完结`, null, 1));\n    categoryData[categoryName].完结.forEach(item => {\n      const parsedItem = parseCategory(item);\n      result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n    });\n    result.push(createFlexBox(`${榜单标识} ${categoryName}榜单`, null, 1));\n    categoryData[categoryName].榜单.forEach(item => {\n      const parsedItem = parseCategory(item);\n      result.push(createFlexBox(parsedItem[0], parsedItem[1], parsedItem[2]));\n    });\n  }\n});\n\nresult.push(createFlexBox(`${标签标识} ${tagName}标签`, null, 1));\ntags.forEach(tag => {\n  const parsedTag = parseTag(tag, tagCategory);\n  result.push(createFlexBox(parsedTag[0], parsedTag[1], parsedTag[2],parsedTag[3]));\n});\n\nJSON.stringify(result);\n\n\n</js>",
    "header": "<js>\n\n//let date=\"Mobile \"+Date.now();\nresult = JSON.stringify({\n\t\"versiontype\":\"reading\"\n\t})\n\t\n</js>",
    "jsLib": "function encode(data){\n\tconst { java } = this;\n  return\tjava.createSymmetricCrypto(\"DES/CBC/PKCS5Padding\", String(\"KW8Dvm2N\"), String(\"1ae2c94b\")).encryptBase64(data)\n\t}\n\t\nfunction Map(e) { \n\t  const { source } = this;\n    let infomap = source.getLoginHeaderMap();\n    let map = (infomap !== null && infomap.get(e)) ? infomap.get(e) : '';\n    return String(map);\n}\n\n\t\nfunction setHead(k,v){\n\tconst { source } = this;\n  let  infomap = source.getLoginHeaderMap();\n  let map = (infomap !== null && infomap !== \"\")?infomap:{};\n  map[k] = v;\n  source.putLoginHeader(JSON.stringify(map))\n\t}\nfunction bDe(d){\n\tconst { java } = this;\n\tif(/^http/.test(d)){\n\t\ttoken =/\\d+_[\\w\\d]{16,}/.test(d)?\"token=\"+ d.match(/\\d+_[\\w\\d]{16,}/)[0]:\"token=\";\n   novelId=d.match(/novelId=\\d+/)[0];\n   chapterId = /chapterId=\\d+/.test(d)?\"&\"+d.match(/chapterId=\\d+/)[0]:\"\";\n   re =  `${token}&${novelId}${chapterId}`;\n\t\t}else{\n\t\t\tre = String(java.base64Decode(String(d).match(/base64,([^,]+),/)[1]))\n\t\t\t}\n\treturn re\n\t}\n\nfunction getToken(d){\n\treturn d.match(/token=(.*?)&/)[1];\n\t}\n\nfunction getNid(d){\n\treturn d.match(/novelId=(\\d+)/)[1];\n\t}",
    "lastUpdateTime": "1744254574326",
    "loginCheckJs": "//8小时检查一遍签到\nif(!cache.getFile(\"jjtime\")) {\n    cache.putFile(\"jjtime\", true, 23200);\n    const enbody = `${String(Date.now())}:${Map(\"token\")}`;\n    const option = {\n        method: \"POST\",\n        body: `versionCode=313&sign=${encode(enbody)}`\n    };\n    const jjsign = java.ajax(\"https://app.jjwxc.org/androidapi/signin,\" + JSON.stringify(option));\n    java.toast(JSON.parse(jjsign).message);\n}result",
    "loginUi": "[\n{\n    \t  name:\"获取书架数据\",\n    \t  type: \"button\",\n       action: \"getShelf()\"\n    \t},\n{\n    \t  name:\"选择📚书架序号\",\n    \t  type: \"button\",\n       action: \"showShelf()\",\n       \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n    \t},\n    \t{\n    \"name\": \"选择🌸分类序号\",\n    \"type\": \"button\",\n    \"action\": \"getFl()\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n  \t{\n\t\tname: \"选择🏷标签序号\",\n\t\ttype: \"button\",\n\t\taction: \"getTag()\",\n\t\t\"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n\t},\n\t{\n    \t  name:\"抓包token登录\",\n    \t  type:\"password\"\n    \t},\n    {\n    \t  name:\"账号\",\n    \t  type:\"text\"\n    \t},\n    \t{\n    \t  name:\"密码\",\n    \t  type:\"password\"\n    \t},\n    \t{\n    \t  name:\"验证码\",\n    \t  type:\"text\"\n    \t},\n    \n   {\n        name: \"①获取邮箱验证码\",\n        type: \"button\",\n        action: \"getCode('email')\"\n    },\n     {\n        name: \"②邮箱登录\",\n        type: \"button\",\n        action: \"getCode('email')\"\n    },\n    {\n        name: \"①获取手机验证码\",\n        type: \"button\",\n        action: \"getCode('phone')\"\n    },\n    {\n        name: \"②手机登录\",\n        type: \"button\",\n        action: \"getCode('phone')\"\n    },\n\t\t{\n    \t\tname:\"作者列表（作者::作者id 注意添加多个用空格分割）\",\n    \t\ttype:\"text\"\n    \t\t}\n]",
    "loginUrl": "<js>\n\n//请不要改书源的任何地方，请点击“登录”后再填写\n\n//保存标签等序号\nfunction saveTag(svg,tagType){\n\tlet Code = String(java.getVerificationCode('data:image/svg+xml;base64,'+svg));\n    if(/(\\d,*)*/.test(Code)){\n\t    Map = source.getLoginHeaderMap();\n\t    Map == (Map == null||Map==\"\")?{}:Map\n\t    Map[tagType]=Code;\n\t    source.putLoginHeader(JSON.stringify(Map))\n\t    java.toast(\"已保存数据\")\n\t}\n}\n\nfunction rd() {\n    let n = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    let s = \"\";\n    for (let i = 0; i < 20; i++) {\n        let r = Math.floor(Math.random() * 10);\n        s += n[r];\n    }\n    return s;\n}\n\n//获取书架数据\nfunction getShelf(){\n    let sourceGet = String(source.getVariable()).replace(/\\n*(?:请勿删除此书架数据)*❗️[\\s\\S]+?❗️/g,'');\n\tlet token = Map(\"token\");\n\tlet ShelfUrl = `https://android.jjwxc.net/androidapi/incrementFavorite,{'method':'POST','body':\\\"versionCode=313&token=${token}&order=1&classId=&backupTime=${Date.now()}\\\"}`\n\tlet ShelfJson = String(java.ajax(ShelfUrl));\n    ShelfJson = JSON.parse(ShelfJson);\n\t    function extractClassInfo(obj, result = [], uniqueSet = new Set()) {\n\t    // 如果当前对象是数组，递归遍历数组中的每个元素\n\t    if (Array.isArray(obj)) {\n\t        for (let item of obj) {\n\t            extractClassInfo(item, result, uniqueSet);\n\t        }\n\t    } else if (typeof obj === 'object' && obj !== null) {\n        // 检查是否存在 className 和 classId\n\t        if (obj.hasOwnProperty('className') && obj.hasOwnProperty('classId')) {\n\t            let className = obj.className;\n\t            // 如果 className 为空，设置为“尚未分类”\n\t            if (className.trim() === \"\") {\n\t                className = \"尚未分类\";\n\t            }\n\t            // 构造组合字符串\n\t            const combo = `${className}::${obj.classId}`;\n\t            // 如果组合字符串未出现过，添加到结果中\n\t            if (!uniqueSet.has(combo)) {\n\t                uniqueSet.add(combo);\n\t                result.push(combo);\n\t            }\n\t        }\n\t        // 递归遍历对象的每个属性\n\t        for (let key in obj) {\n\t            extractClassInfo(obj[key], result, uniqueSet);\n\t        }\n  \t\t  }\n    \t\treturn result;\n\t   }\n\n\tlet ShlefClass = \"请勿删除此书架数据❗️\"+JSON.stringify(extractClassInfo(ShelfJson))+\"❗️\"\n\tsource.setVariable(sourceGet+\"\\n\"+ShlefClass);\n\tjava.longToast(\"已获取书架数据，请点击选择显示的书架\")\n}\n\n//选择要显示的书架\nfunction showShelf(){\n\ttry{\n\t\tif(!/❗️([\\s\\S]+?)❗️/.test(String(source.getVariable()))){\n\t\t\tjava.longToast(\"请先点击获取书架数据，只需点一次\");\n\t\t\treturn \"\"\n\t\t}\n\t\tlet sourceGet = String(source.getVariable()).match(/❗️([\\s\\S]+?)❗️/)[1];\n\t\tlet classNameList = JSON.parse(sourceGet);\n\t\tlet className = classNameList.map((x,i)=>i+\"、\"+x.split(\"::\")[0]);\n\t\t \n\t\t// 初始 x 值\n\t\tlet x = 50;\n\t\t// x 的增量\n\t\tconst xIncrement = 230; // 250 - 20 = 230\n\t\t// x 的最大值\n\t\tconst xMax = 910;\n\t\t// 生成 <tspan> 元素的字符串\n\t\tlet tspanElements = className.map((item) => {\n\t\t    // 如果 x 为 20，dy 为 \"1.5em\"，否则为 \"0\"\n\t\t    const dy = x === 50 ? \"1.5em\" : \"0\";\n\t\t    // 构造 <tspan> 元素\n\t\t    const tspan = `<tspan x=\"${x}\" dy=\"${dy}\">${item}</tspan>`;\n\t\t    // 更新 x 的值\n\t\t    x += xIncrement;\n\t\t    // 如果 x 超过最大值，重置为 20\n\t\t    if (x > xMax) {\n\t\t        x = 50;\n\t\t    }\n\t\t    return tspan;\n\t\t}).join(\"\\n\"); // 用换行符拼接\n\n\t\t svg = `<svg width=\"1190\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t  <!-- 背景矩形 -->\n\t\t  <rect width=\"100%\" height=\"100%\" fill=\"#ffffff\"/>\n\t\t\n\t\t  <!-- 标题 -->\n\t\t  <text x=\"20\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#333\" font-weight=\"bold\">选项（输入你要显示的书架序号，再点“✓”如：0,1,2 是英文逗号）</text>\n\t\t\n\t\t  <!-- 选项列表 -->\n\t\t  <text x=\"50\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#555\">\n\t\t  ${tspanElements}\n\t\t    </text>\n\t\t</svg>`;\n\t\tsvg=java.base64Encode(svg);\n\t\tsaveTag(String(svg),\"classNum\")\n\t\t\n\t}catch(e){\n\t\tjava.log(e)\n\t}\n}\n\nfunction getFl(){\n\tlet svg=`<svg width=\"1150\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t  <!-- 背景矩形 -->\n\t  <rect width=\"100%\" height=\"100%\" fill=\"#f0f0f0\" />\n\t\n\t  <!-- 标题 -->\n\t  <text x=\"20\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"35\" fill=\"#333\" font-weight=\"bold\">选项（填写需要的序号后，点“✓”确认，如：2,5【默认为9,10】）</text>\n\t\n\t  <!-- 选项列表 -->\n\t  <text x=\"50\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#555\">\n\t    <tspan x=\"150\" dy=\"1.5em\">0. 古代言情</tspan>\n\t    <tspan x=\"400\" dy=\"0\">1. 现代言情</tspan>\n\t    <tspan x=\"650\" dy=\"0\">2. 幻想现言</tspan>\n\t    <tspan x=\"900\" dy=\"0\">3. 古代穿越</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">4. 奇幻言情</tspan>\n\t    <tspan x=\"400\" dy=\"0\">5. 未来游戏悬疑</tspan>\n\t    <tspan x=\"650\" dy=\"0\">6. 都市纯爱</tspan>\n\t    <tspan x=\"900\" dy=\"0\">7. 现代幻纯</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">8. 古代纯爱</tspan>\n\t    <tspan x=\"400\" dy=\"0\">9. 百合</tspan>\n\t    <tspan x=\"650\" dy=\"0\">10. 无CP</tspan>\n\t    <tspan x=\"900\" dy=\"0\">11. 衍生无CP</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">12. 衍生纯爱</tspan>\n\t    <tspan x=\"400\" dy=\"0\">13. 衍生言情</tspan>\n\t    <tspan x=\"650\" dy=\"0\">14. 二次元言情</tspan>\n\t    <tspan x=\"900\" dy=\"0\">15. 多元</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">16. 男主无CP</tspan>\n\t    <tspan x=\"400\" dy=\"0\">17. 女主无CP</tspan>\n\t    <tspan x=\"650\" dy=\"0\">18. 未来幻纯</tspan>\n\t  </text>\n\t</svg>`;\n\tsvg=java.base64Encode(svg);\n\tsaveTag(svg,\"fl\")\n\n}\nfunction getTag(){\n\tlet svg=`<svg width=\"1150\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t  <!-- 背景矩形 -->\n\t  <rect width=\"100%\" height=\"100%\" fill=\"#f0f0f0\" />\n\t\n\t  <!-- 标题 -->\n\t  <text x=\"20\" y=\"40\" font-family=\"Arial, sans-serif\" font-size=\"35\" fill=\"#333\" font-weight=\"bold\">选项（填写需要的序号后，点“✓”确认，如：2【默认为5，只能单选】）</text>\n\t\n\t  <!-- 选项列表 -->\n\t  <text x=\"60\" y=\"60\" font-family=\"Arial, sans-serif\" font-size=\"50\" fill=\"#555\">\n\t    <tspan x=\"150\" dy=\"2.5em\">1. 言情</tspan>\n\t    <tspan x=\"400\" dy=\"0\">2. 纯爱</tspan>\n\t    <tspan x=\"650\" dy=\"0\">3. 百合</tspan>\n\t    <tspan x=\"150\" dy=\"1.5em\">4. 无CP</tspan>\n\t    <tspan x=\"400\" dy=\"0\">5. 多元</tspan>\n\t  </text>\n\t</svg>`;\n\tsvg=java.base64Encode(svg);\n\tsaveTag(svg,\"bq\")\n\n}\n\n\nfunction getloginUrl(){\n\tlet 账号 = result.get(\"账号\");\n\tlet 密码 = result.get(\"密码\");\n\tlet en = encode(密码);\n\tlet id = rd()+\":\"+java.androidId()+\"d4:\";\n\tlet sign = encode(Date.now()+\"_\"+id+\"_\");\n\tlet loginUrl = `https://app.jjwxc.org/androidapi/login?versionCode=401&loginName=${encodeURIComponent(账号)}&encode=1&loginPassword=${encodeURIComponent(en)}&sign=${encodeURIComponent(sign)}&identifiers=${encodeURIComponent(id)}&autologin=1`;\n\treturn loginUrl\n}\n\nfunction getCode(t){\n\ttry{\n\t\tlet 验证码 = result.get(\"验证码\");\n\t\tlet 账号 = result.get(\"账号\");\n\t\tlet 密码 = result.get(\"密码\");\n\t\t\n\t\tif(!/^\\d{4,}/.test(验证码)){\n\t\t\tlet res = \tJSON.parse(java.ajax(getloginUrl()));\n\t\n\t\t\tif(res.code==\"221003\"){\n\t\t\t\tlet url = \"https://app.jjwxc.org//appDevicesecurityAndroid/getDeviceSecurityCode\";\n\t\t\t\tbody = \"versionCode=401&username=\"+encodeURIComponent(账号)+\"&checktype=\"+t;\n\t\t\t\toption = {\n\t\t\t\t\t\"method\":\"POST\",\n\t\t\t\t\t\"body\":String(body)\n\t\t\t\t\t}\n\t\t\t\t\tmsg = JSON.parse(java.ajax(url+\",\"+JSON.stringify(option))).data.message;\n\t\t\t\t\tjava.toast(msg);\n\t\t\t}else{\n\t\t\t\t\tjava.toast(res.message)\n\t\t\t\t}\n\t\t}else{\n\t\t\tlet lurl = getloginUrl()+\"&checktype=\"+t+\"&checkdevicecode=\"+验证码;\n\t\t\thhh = java.ajax(lurl);\n\t\t\tlet token = JSON.parse(hhh).token??JSON.parse(hhh).message;\n\t\t\tjava.longToast(token);\n\t\t\tjava.log(\"获取到的token值: \"+token)\n\t\t\tLoginToken(token)\n\t\t}\n\t}catch(e){\n\t\tjava.log(e)\n\t}\n}\n\nfunction LoginToken(token){\n\tlet Map = source.getLoginInfoMap()??{};\n\tlet LoginMap = source.getLoginHeaderMap()??{};\n\tlet fl = LoginMap[\"fl\"]??\"\";\n\tfl = (fl==\"\"||fl==null)?\"9,10\":fl;\n\n\tlet bq = LoginMap[\"bq\"]??\"\";\n\tbq = (bq==\"\"||bq==null)?\"5\":bq;\n\t\n\tlet at = Map.get(\"作者列表（作者::作者id 注意添加多个用空格分割）\");\n\tat = (at==\"\"||at==null)?\"\":at;\n\tlet classCode = LoginMap[\"classNum\"]??\"\";\n\t\n\tlet option = {\n\t \t\"token\":String(token),\n\t \t\"fl\":String(fl),\n\t \t\"bq\":String(bq),\n\t \t\"at\":java.base64Encode(String(at)),\n\t \t\"classNum\":classCode\n\t \t}\n\tsource.putLoginHeader(JSON.stringify(option))\n}\n\n\nfunction login(){\n\tlet LoginMap = source.getLoginHeaderMap()??{};\n\tLoginMap = JSON.stringify(LoginMap);\n\tlet token;\n\tlet t = source.getLoginInfoMap()[\"抓包token登录\"];\n\tif(/\\{\"token\":\"\\d+_\\w{16,}/.test(LoginMap))token = JSON.parse(LoginMap).token??\"\";\n\tif(t!=\"\"&&t!=null)token = t;\t\n\tLoginToken(token);\n}\n\n</js>",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.authorName",
      "canReName": "1",
      "coverUrl": "{{$.novelCover}}\n<js>\n\nif(/(?:postimg|bmp|alicdn)\\./.test(result)){\n\tjava.setContent(src);\n\tresult = \"https://i9-static.jjwxc.net/novelimage.php?novelid={{$.novelId}}\"\n\t}else{\n\t\tresult = result\n\t\t}\n\t\t\n\t\theader = {\n\t\t\"headers\":{\n\t\t\t\"referer\":result.match(/(^https?:\\/\\/.*?\\/)/)[1]\n\t\t\t}\n\t\t}\nresult = (result +\",\"+ JSON.stringify(header)).replace(/wx\\d+/,'wx2')\n</js>",
      "init": "",
      "intro": "<js>\n//请假条\ntry{\na=JSON.parse(java.ajax('http://app.jjwxc.org/androidapi/getnovelOtherInfo?novelId='+baseUrl.match(/(\\d+)/)[1]+'&type=novelbasicinfo&versionCode=163'));\n\njava.put(\"pv\",a.novelreview)\n\n$=a.novelLeave;\nn='\\n';\nleave=$.leaveContent?'————————•————————'+n+'​'+n+$.leaveDateBack+n+'​'+'​'+'      '+$.leaveContent+n+$.leaveDate.replace(/请假时间：/,'⌚️')+n+$.leaveIntro:'';\njava.put('leave',leave);\njava.put('intro',JSON.parse(result).novelIntro.replace(/\\#/g,'＃'));\nresult}catch(err){\njava.log(err);\njava.put('leave',\"\");\njava.put('intro',\"\");\n}\n</js>\n{{/开启购买/.test(book.getVariable(\"custom\"))?\"&nbsp;&nbsp;💰已开启自动购买下五章，建议删除书籍变量的[开启/关闭购买]文字，避免刷新书籍时反复进行网络请求<br>\\nㅤ<br>\":\"\"}}\n&nbsp;\n📖{{$.novelIntroShort##。$}}📖\n{{'\\nㅤ'}}<br>\n🏆{{$.ranking}}    🍼{{$.nutrition_novel}}    📝{{$.comment_count}}    🔖{{$.novelStyle}}\n◉ 标签：{{$.novelTags##,|\\s##🏷}}<br>\n◉ {{$.protagonist##,|，|；|;##、}}<br>\n◉ {{$.costar##,|，|；|;##、}}<br>\n◉ {{$.other##,|，|；|;##、}}<br>\n◉ 视角：{{$.mainview}}<br>\n◉ 评分：{{java.get(\"pv\")}}<br>\n◉ 收藏：{{$.novelbefavoritedcount}}<br>\n{{String(java.get('intro')).replace(/立意:/,'◎◎ 立意：')}}<br>{{java.get('leave')}}<br>\n{{'\\n'+'​'}}\n添加作者：{{$.authorName}}::{{$.authorId}}\n<js>\nresult=String(result);\nli=result.match(/◎ 立意.*/)?'ㅤ\\n'+result.match(/(◎ 立意.*?<br>)/)[1]:'';\nString(result).replace(/📖📖|📖''📖/,'').replace(/(◉ 收藏.*?<br>)/,'$1\\n'+li+'ㅤ\\n'+'————————•————————\\n').replace(/◎◎ 立意.*<br>/,'').replace(/(?:◉ 标签：|◉ 主角：|◉ 配角：|◉ 其它：|◉ 视角：|◉ 评分：|ㅤ\\n◎ 立意：)<br>/g,'')</js>",
      "kind": "{{step=java.getString('$.novelStep')=='2'?'已完结':'连载中';}},{{$.novelClass}}##-##,",
      "lastChapter": "<js>\ntry{\n\tnid = baseUrl.match(/(\\d+)/)[1];\nlastStr = java.ajax(\"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+nid+\"&more=0&whole=1\");\n\ncache.putFile(\"有卷名Str\"+nid, String(lastStr),60);\nlast=JSON.parse(lastStr).chapterlist;\n\n$=last[last.length-1];\nvip=$.isvip?'🔒':'';\nchapterid=$.chapterid;\nchaptername=$.chaptername;\ndate=$.chapterdate;\nresult = vip+chapterid+'.'+chaptername+'•'+date\n}\ncatch(err){\nresult=\"请刷新或暂无目录\"\n}\n</js>",
      "name": "$.novelName",
      "tocUrl": "@js:\ntoken = Map(\"token\");\nnovelId=baseUrl.match(/novelId=(\\d+)/)[1];\nurl = `token=${token}&novelId=${novelId}`;\nresult = `data:token;base64,${java.base64Encode(url)},{\"type\":\"jjwx\"}`;",
      "wordCount": "$.novelSizeformat||novelsizeformat"
    },
    "ruleContent": {
      "content": "<js>\nfunction decode() {\n\tbaseUrl = `https://app.jjwxc.org/androidapi/chapterContent?versionCode=381&${bDe(baseUrl)}`;\n\t   \n    //let date = \"Mobile \" + Date.now();\n    let response = java.get(baseUrl, {});\n    let content = String(response.body());\n    isPay = !/\"content\"/.test(content);\n    \n    if(isPay){\n    let accesskey = String(response.header(\"accesskey\"));\n    let keyString = String(response.header(\"keystring\"));\n\n    let accesskeyLen = accesskey.length;\n    let v6 = accesskey.charCodeAt(accesskeyLen - 1);\n    let v9 = 0;\nfor (var i = 0; i < accesskey.length; i++) {\n    v9 += accesskey.charCodeAt(i);\n}\n\n    let v15 = v9 % keyString.length;\n    let v17 = Math.floor(v9 / 65);\n    let v18 = keyString.length;\n    let v43 = keyString.substring(v15, v17 + v15 > v18 ? v18 : v17 + v15);\n\n    let v32 = content.length;\n    let [v38, dest] = (v6 & 1) !== 0 ? [content.slice(-12), content.slice(0, -12)] : [content.slice(0, 12), content.slice(12)];\n\n    let key = java.md5Encode(v43 + v38).slice(0, 8);\n    let iv = java.md5Encode(v38).slice(0, 8);\n    content = java.createSymmetricCrypto(\"DES/CBC/PKCS5Padding\", key, iv).decryptStr(dest);\n    }\n    \n    return content\n}\n\nif (/jjwxc|vipContent/.test(baseUrl)) {\n\t  \n    let intro = String(java.get(\"intro1\")).replace(/\\s/g, '');\n    const hasContent = /\"content\"/.test(result);\n    \n    java.setContent(hasContent ? result : decode());\n    intro = intro ? `◎${intro}◎<br>` : '';\n\n    const content = String(java.getString(\"$..content\"));\n    const saybody = java.getString(\"$..sayBody\");\n    const say = /[\\u4e00-\\u9fa5]/.test(saybody) \n                      ? `\\n【📢作者有话说】\\n${saybody}` : '';\n\n    if (/token|vipContent/.test(baseUrl)) {\n    \t   \n        const vipc = content.length > 30\n        ? java.createSymmetricCrypto(\"DES/CBC/PKCS5Padding\", \"KW8Dvm2N\", \"1ae2c94b\").decryptStr(content) \n        : `${java.getString(\"$..message\")}\\n登录后请更新目录，刷新正文`;\n        result = intro + vipc + say;\n    } else {\n        result = intro + content + say;\n    }\n} else {\n    result = \"\";\n}\n\n// 评论处理\nconst bbb = book.getVariable(\"custom\");\nconst sss = source.getVariable();\nif (/评论/.test(bbb) || /评论/.test(sss)) {\n    const commentNum = (/评论(\\d+)/.exec(bbb) || /评论(\\d+)/.exec(sss))[1];\n    const commentUrl = baseUrl.replace(/androidapi/, 'comment').replace(/chapterContent/, 'getCommentList') + `&limit=${commentNum}&offset=0`;\n    const comment = JSON.parse(java.ajax(commentUrl));\n    const cflag = comment.code === \"200\" || comment.code === undefined;\n    let commentb = '';\n    if (cflag) {\n        const commentList = comment.commentList || comment.data?.commentList || [];\n        commentb = commentList.map(b => `@${b.commentAuthor} 🕘${b.commentDate}\\n${b.commentBody}\\n&lrm;\\n`).join('');\n    } else {\n        commentb = comment.message;\n    }\n\n    result += `\\nㅤ\\n最新评论：\\n${commentb.replace(/&lt;br&gt;/g, '\\n')}`;\n}\n\nresult;\n</js>\n##为营造更好的评论环境，近期网站要求发评须进行实名认证，未实名用户评论暂时仅在对应作者后台及发评用户后台可见.*|获取正文失败[\\s\\S]+|◎\\s+?◎|◎undefined◎",
      "imageStyle": "TEXT",
      "nextContentUrl": "",
      "payAction": "baseUrl = bDe(baseUrl);\ncid = baseUrl.match(/chapterId=(\\d+)/)[1];\nnid = baseUrl.match(/novelId=(\\d+)/)[1];\ntoken = Map(\"token\");\n\nenbody = String(Date.now())+\":\"+token+\":\"+nid;\nsign = encode(enbody)\n\nbody = \"versionCode=287&novelId=\"+nid+\"&chapters=\"+cid+\"&orderType=15&isautoBuy=0&autosubscribeStatus=0&notUseBackpoint=&sign=\"+sign;\n\nurl = \"https://android.jjwxc.net/androidapi/buy,\"\npost = {\n\t\"method\":\"POST\",\n\t\"body\":String(body)\n\t}\n a = java.ajax(url+JSON.stringify(post));\n \n if(/购买成功/.test(JSON.parse(a).message)){\n \tjava.longToast(JSON.parse(a).message);\n \tresult  = true\n \t}else{\n \t\tmm = JSON.parse(a).message==\"\"?JSON.parse(a).popupdata.popupmessage+\"\\n❗️进晋江app进行一次验证后❗️才能在阅读app使用购买功能\":JSON.parse(a).message;\n    \n \t\tjava.longToast(mm);\n \t\t\n \t\t}",
      "replaceRegex": "<js>\n//去除章节简介与正文重复\nif(/^◎/.test(result) ){\nchapter = result.match(/◎([\\s\\S]+?)(…)*◎/)[1].replace(/\\s/g,'').replace(/,/g,'，');\n\nchapter2=result.match(/◎[\\s\\S]+?◎([\\s\\S]+)/)[1].replace(/\\s/g,'').replace(/,/g,'，');\n\n//前4个字相同就删除\nnum = 4\nif(chapter.substring(0,num)==chapter2.substring(0,num)){\n\tresult = result.replace(/◎[\\s\\S]+?◎/,'')\n\t}else{result}\n}else{result}\n\n\n/*\n——◎。！？，；：、.?!,;:》 】）”’…~\"')\n如果不是以这些标点符号结尾，里面有一个字符跟章节名相同了就会被删除\n*/\n\tfunction removeDuplicatedParagraphs(text, chapterTitle) {\n    var paragraphs = text.split('\\n');\n    \n    // 检查第一段是否包含特定字符 ◎\n    var firstParagraph = paragraphs[0].trim();\n    var containsSpecialChar = firstParagraph.includes('◎');\n    \n    // 根据是否包含特殊字符决定处理哪一段\n    var targetIndex = containsSpecialChar ? 1 : 0;\n    var targetParagraph = paragraphs[targetIndex].trim();\n    \n    // 检查目标段落结尾是否有标点符号\n    var lastChar = targetParagraph.charAt(targetParagraph.length - 1);\n    var isPunctuation = /[——◎。！？，；：、\\.\\?!,;:》 】）”’…~\"'\\)]/.test(lastChar);\n    \n    if (!isPunctuation) {\n        // 只要有一个字与章节名相同就删除\n        for (var char of chapterTitle) {\n            if (targetParagraph.includes(char)) {\n                if (char === ' ' || char === '☪') continue;\n                java.log(\"删除当前段落：\"+targetParagraph)\n                java.log(\"当前章节名：\"+chapterTitle)\n                java.log(\"相同文字：\"+char)\n                paragraphs.splice(targetIndex, 1);\n                break;\n            }\n        }\n    }\n\n    return paragraphs.join('\\n');\n}\nconst bbb = book.getVariable(\"custom\");\nconst sss = source.getVariable();\nif(/净化/.test(sss)||/净化/.test(bbb))result = removeDuplicatedParagraphs(result, title);\n\nresult.replace(/<br\\/>/g,'\\n')\n</js>",
      "sourceRegex": "",
      "title": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "$.authorName||$.authorname",
      "bookList": "@JSon:$..[?(@.novelName)]&&$..[?(@.novelname)]&&$.massage\n<js>\nif (result) {\n    function remove(indices, array) {\n        indices.sort((a, b) => b - a); // 按降序排序\n        indices.forEach(index => {\n          //  java.log(\"❗️删除序号:\" + index);\n          //  java.log(array[index].channelName);\n            array.splice(index, 1); // 删除元素\n        });\n        \n        return array;\n    }\n\n    if (baseUrl === 'https://app-cdn.jjwxc.net/bookstore/getFullPage?channel=bhxs&version=3' || baseUrl.match(/novelfree/)) {\n        let list = JSON.parse(src);\n\n        // 将 data_random 中的数据合并到 data 中\n        list.forEach(item => {\n            if (item.data_random && item.data_random.data_groups && item.data_random.data_groups.length > 0) {\n                // 取 data_random 中的第一组数据\n                const randomData = item.data_random.data_groups[0];\n                if (item.data) {\n                    // 将 randomData 合并到 data 中\n                    item.data = item.data.concat(randomData);\n                } else {\n                    // 如果 data 不存在，直接赋值\n                    item.data = randomData;\n                }\n                // 删除 data_random，避免重复处理\n                delete item.data_random;\n            }\n        });\n\n        // 修改 channelName\n       list.forEach(item => {\n    let { channelName, data: blist } = item;\n    if (blist) {\n    \t        // 检查 data 数组里是否有 list 数组\r\n        const hasList = blist.some(b => b.list);\r\n        if (hasList) {\r\n            // 如果有 list 数组，只保留 data 数组的第一个元素\r\n            item.data = [blist[0]];\r\n            blist = item.data;\r\n        }​\n        blist.forEach(b => {\n            if (b.list) {\n            \t   lchannelName = b.channelName\n                b.list.forEach(c => c.channelName = b.channelName);\n            }\n            b.channelName = channelName;\n        });\n    } else {\n        item.channelName = channelName;\n    }\n});\n\n        // 根据 URL 删除指定项\n        if (!baseUrl.match(/novelfree/)) {\n            list = remove([0, 6, 11, 12], list);\n        } else {\n            list = remove([1], list);\n        }\n\n        result = JSON.stringify(list);\n    } else if (baseUrl.match(/signin|getSearchForKeyWords/)) {\n        result = `{signIn:[${src}]}`;\n    } else {\n        result = result;\n    }\n} else {\n    result = \"\";\n}\n</js>\n$..[?(@.novelName)]&&$..[?(@.novelname)]&&$.signIn[*]",
      "bookUrl": "http://app-cdn.jjwxc.net/androidapi/novelbasicinfo?novelId={{$.novelid||$.novelId}}@put:{id:$.novelid||$.novelId}",
      "coverUrl": "@JSon:$.cover||$.novelCover||$.ebookurl||$.novel_cover\n<js>\nif(/(?:postimg|bmp|alicdn)\\./.test(result)){\n\tjava.setContent(src);\n\tresult = \"https://i9-static.jjwxc.net/novelimage.php?novelid={{$.novelId}}\"\n\t}else{\n\t\tresult = result\n\t\t}\n\t\theader = {\n\t\t\"headers\":{\n\t\t\t\"referer\":result.match(/(^https?:\\/\\/.*?\\/)/)[1]\n\t\t\t}\n\t\t}\nresult = (result +\",\"+ JSON.stringify(header)).replace(/wx\\d+/,'wx2')\n</js>",
      "intro": "&lrm;\n🏷 {{$.novelClass||$.type}}\n📖 {{$.novelIntroShort||$.novelintroshort}}\n<js>\nfree=\"{{$.freeDate}}\";\nif(free!=\"\"){\nresult=\"\\n限免日期：🗓\"+free+\"\\n\"+result\n}else{\nresult=result\n}\n</js>\n##🏷 \\n",
      "kind": "{{java.getString('$.novelStep||$.novelstep')=='2'?'已完结':'连载中';}},{{$.channelName&&$.tags&&$.className##\\s+##,}}",
      "lastChapter": "第{{$.maxChapterId}}章##第章",
      "name": "$.novelName||$.novelname||$.message",
      "wordCount": "$.novelSizeformat||$.novelSize"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.items[:10]\n<js>\nlet page = java.get(\"page\");\nlet key = java.get(\"key\");\nlet authorUrl = `https://app.jjwxc.org/androidapi/search?versionCode=191&keyword=${key}&type=2&page=${page}&searchType=7&sortMode=DESC`;\nconst authorlist = JSON.parse(java.ajax(authorUrl))?.items;\n\nlet list = authorlist?result.toArray().concat(authorlist):result;\nlet json = [];\nfor(i in list){\n    try{\n    \t   let item = list[i];\n        let id = item?.novelid;\n        let url = `https://www.jjwxc.net/onebook.php?novelid=${id}`;     \n        let html = String(java.ajax(url));\n        java.setContent(html);\n        let J = org.jsoup.Jsoup.parse(html);\n        let authorid = J.select('h1+span>a, h2 a').attr(\"href\").match(/(\\d+)/)[1];\n        let des = String(J.select(\"span[style='color:#F98C4D']\").text())\n            .replace(/立意：/, '◎ ')\n            .replace(/一句话简介：/, '◎ ') + \"◎\" + java.getElement(\"id.novelintro\").text();\n        title = J.select('h1').text();\n        let author = J.select('span[itemprop=\"author\"]').text();\n        let cover = J.select(\".noveldefaultimage\").attr(\"src\");\n\n        if (/(?:postimg|bmp|alicdn)\\./.test(cover)) {\n            cover = `https://i9-static.jjwxc.net/novelimage.php?novelid=${id}`;\n        }\n\n        let header = {\n            headers: {\n                referer: cover.match(/(^https?:\\/\\/.*?\\/)/)[1]\n            }\n        };\n        cover = `${cover},${JSON.stringify(header)}`.replace(/wx\\d+/, 'wx2');\n\n        let cat = String(J.select('a[style=\"text-decoration:none;color: red;\"]').text()).replace(/\\s/g, ',');\n        let status = String(J.select('span[itemprop=\"updataStatus\"]').text());\n        \n        let size = String(J.select('span[itemprop=\"wordCount\"]').text()).replace(/字/, '');\n        let n = String(java.getElement('@@id.oneboolt@tag.tr.-2@span').text())\n            .replace(/\\n/, '•')\n            .replace(/\\*最新更新/, '')\n            .replace(/(.*?)\\[(?:VIP|福利番外)\\]/, '🔒$1');\n        let num = java.getElement('@@id.oneboolt@tag.tr.-2@tag.td.0').text();\n        let genre = J.select('[itemprop=\"genre\"]').text().split('-')[1];\n        let view = html.match(/<span>作品视角：<\\/span>([^<]+)<\\/li>/)[1].replace(/\\s/g, '');\n        \n        json.push({\n            title,\n            author,\n            cat: `${view},${status},${genre},${cat}`,\n            size,\n            url: `https://app-cdn.jjwxc.net/androidapi/novelbasicinfo?novelId=${id}`,\n            des,\n            new: `${num}、${n}`.replace(/(\\d+、)🔒/, '🔒$1').replace(/^章节、|、$/, ''),\n            cover\n        });\n    } catch (e) {\n        java.log(\"搜索列表的错误：\"+e);\n    }\n}\nJSON.stringify(json)\n</js>\n$.[*]",
      "bookUrl": "$.url",
      "checkKeyWord": "穿进刑侦文",
      "coverUrl": "$.cover",
      "intro": "$.des",
      "kind": "$.cat",
      "lastChapter": "$.new",
      "name": "$.title",
      "wordCount": "$.size"
    },
    "ruleToc": {
      "chapterList": "<js>\nbaseUrl = bDe(baseUrl);\nnovelId=getNid(baseUrl);\ntoken = Map(\"token\");\n\n有卷名src = cache.getFile(\"有卷名Str\"+novelId)?cache.getFile(\"有卷名Str\"+novelId):java.ajax(\"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1\");\n\n有卷名src = JSON.parse(有卷名src);\n\nmessage = 有卷名src?.message;\nif(/\\d+_[\\w\\d]{16,}/.test(token)&&!/1058/.test(message)){\n\t\n\ttokenUrl =  \"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1&token=\"+token;\n\t\ntokenSrc = (!cache.getFile(\"tokenSrc\"+novelId)||/登入验证失败/.test(cache.getFile(\"tokenSrc\"+novelId)))?JSON.parse(java.ajax(tokenUrl)):JSON.parse(cache.getFile(\"tokenSrc\"+novelId));\ncache.delete(\"tokenSrc\"+novelId)\ncache.delete(\"有卷名Str\"+novelId)\n\nlet lessData = tokenSrc.chapterlist;\n\nlet moreData = 有卷名src.chapterlist;\n\nfor(let item of lessData) {\n    let match = moreData.find(moreItem => moreItem.chapterid === item.chapterid && moreItem.chaptertype === item.chaptertype);\n    if(match) {\n        Object.assign(match, item);\n    }\n}\nJSON.stringify(moreData)\n}else{\n\tresult = JSON.stringify(有卷名src)\n\t}\n</js>\n$.chapterlist[*]||$.[*]\n\n<js>\nfunction readEncrypt(novelid,flag) {\n\t     token = Map(\"token\");   \n     \tFORUMSIGNTAG = 1;\n       READSIGNTAG = 0;\n\t      strArr = [token,novelid,\"autosubscribe\",flag];       \n\t      sb = new Date().getTime().toString();\n         length = strArr.length;\n        for ( i2 = READSIGNTAG; i2 < length; i2 += FORUMSIGNTAG) {\n            str = strArr[i2];\n            sb+=\":\";\n            sb+=str;\n        }   \n     let option = {\n\t    \t\"method\":\"POST\", \t\"body\":\"versionCode=313&sign=\"+encode(sb)\n\t    \t}\n\t    \nurl = \"https://android.jjwxc.com/androidapi/autoSubscribe,\"+JSON.stringify(option)\n\n java.longToast(JSON.parse(java.ajax(url)).message)\n    }\n    \n if(/(开启|关闭)购买/.test(book.getVariable(\"custom\"))){\n \ta = /关闭购买/.test(book.getVariable(\"custom\"))?\"cancel\":(/开启购买/.test(book.getVariable(\"custom\"))?\"open\":\"cancel\");\n \t\n readEncrypt(result[0].novelid,a)\n \t}\n \t\nresult = result[0]==\"1058\"||result[0]==\"1068\"?JSON.stringify([{\"chaptername\":\"暂无目录\",\"chapterid\":\"\",\"islock\":\"0\"}]):result;\n</js>\n$.[*]",
      "chapterName": "<js>\n$=result;title=$.chaptername;title=String(title).replace(/^\\s+/,'');intro=$.chapterintro;vip=$.isvip!='0';lock=$.islock!='0';type=$.chaptertype=='1'?true:false;num=!type?$.chapterid+\"  ☪ \":'';\n\n\nbbb = book.getVariable(\"custom\");sss = source.getVariable();\nif(/去章节序号/.test(bbb) || /去章节序号/.test(sss)){\nnum=''\n}\nif(/章节名/.test(bbb) || /章节名/.test(sss)){\nnum=!type?\"第\"+$.chapterid+\"章 \":'';\n}\ntitle=type?'📖 '+title+' 📖':title;\nif( (/目录简介/.test(bbb) || /目录简介/.test(sss))&&!/📖/.test(title)){\n\tfu = /目录简介【(.*?)】/.test(bbb)?bbb.match(/目录简介【(.*?)】/)[1]:sss.match(/目录简介【(.*?)】/)[1]\n\ttitle = title +fu+intro\n\t}else{\n\t\tjava.put(\"intro1\",intro);\n\t\t}\nl=lock?'[此章节已锁]':'';\nresult=num+title+l;\n</js>",
      "chapterUrl": "@js:\nbaseUrl = bDe(baseUrl);\nnovelId=getNid(baseUrl);\ntoken = Map(\"token\");\n\n$=result;\nchapterid=$.chapterid;\nvip=$.isvip!='0';\ntype=$.chaptertype=='1';\nif( !type){\nif(!vip){\nresult='https://app.jjwxc.net/androidapi/chapterContent?novelId='+novelId+'&chapterId='+chapterid\n}else{\nurl = `token=${token}&novelId=${novelId}&chapterId=${chapterid}`;\nresult = `data:vipContent;base64,${java.base64Encode(url)},{\"type\":\"jjwx\"}`;\n\t\n\t}\n}else{ result=\"\"}",
      "formatJs": "",
      "isPay": "<js>\npoint=(\"{{$.point}}\"=='0');\nchapterMessage =!/VIP|番外/.test(\"{{$.chapterMessage}}\")\nif(chapterMessage||point){\n\tresult=true\n\t}else{\n\t\tresult=false\n\t\t}\n</js>",
      "isVip": "<js>\nvip = (\"{{$.isvip}}\"!=\"0\");\ntype = (\"{{$.chaptertype}}\"=='1');\nresult = !type?(vip?true:false):false\n</js>",
      "isVolume": "<js>\n\"{{$.chaptertype}}\"=='1'?true:false;\n</js>",
      "preUpdateJs": "tocUrl = bDe(book.tocUrl);\ntoken = getToken(tocUrl);\nnovelId = getNid(tocUrl);\n\ntry{\n\tnewToken = Map(\"token\");\n\tif(!/^\\d+_[\\w\\d]{16,}/.test(newToken) && newToken!=\"\"){\n\t\tsetHead(\"token\",\"\");\n\t\tjava.refreshTocUrl();\n\t\tjava.longToast(\"token不正确，已清除token值，请重新登录\");\n\t}\n\t\t\n\toldToken = token;\n\tif(newToken != oldToken){\n\t    token = newToken\n\t\t}\n\t\nif(/^\\d+_[\\w\\d]{16,}/.test(newToken)){\n\t tocUrl = \"https://android.jjwxc.net/androidapi/chapterList?novelId=\"+novelId+\"&more=0&whole=1&token=\"+token;\n\t \n   let src = java.ajax(tocUrl);\n   cache.putFile(\"tokenSrc\"+novelId, src, 60)\n   \n\t message = JSON.parse(src).message;\n\t if(/登入验证失败/.test(message)){\n\t \t        setHead(\"token\",\"\");  \t  \t      \n\t            java.longToast(\"登录token已失效，已清除token值，请重新登录\");\n\t            java.refreshTocUrl();  \n\t    }else if(newToken != oldToken){\n\t       // \tjava.longToast(\"目录链接更改为新token\");\n\t        \tjava.refreshTocUrl();\n\t    }else{\n\t\t\t    \tcache.putFile(\"tokenSrc\"+novelId, src, 60)\n\t\t}  \n\t}else if(/token=&/.test(tocUrl)){\n\t\t\t  java.refreshTocUrl();\n\t\t\t // java.longToast(\"更新目录链接的token\");\n\t\t\t}  \n\t}catch(e){\n\tjava.log(\"这是错误：\"+e)\n\t}",
      "updateTime": "{{$.chaptersize}}字•{{$.chapterdate}}•{{$.chapterintro##^\\s*}}##^•|0000-00-00.*|^0字•|•$"
    },
    "searchUrl": "https://android.jjwxc.net/androidapi/search?versionCode=191&keyword={{key;java.put(\"key\",key)}}&type=1&page={{page;java.put(\"page\",page)}}&searchType=8&sortMode=DESC",
    "variableComment": "1、书籍变量（当前书）\n填写 [去章节序号] —— 去除章节序号\n填写[章节名]  ——  变为第xx章 章节名\n\n填写 [目录简介【符号】] —— 章节简介放到目录列表，正文不出现 符号：跟章节名连接时中间的符号，如 目录简介【 】，中间将为空格\n\n填写 [评论+评论数量]——如 评论50  则可以显示50条评论，数量必填\n\n填写 [开启购买/关闭购买]  —— 如 开启购买 则会开启自动购买下五章【确认以后点右上角三点刷新才会生效，使用完毕后最好删除，避免重复请求】\n\n填写[净化] —— 这个是用来删除正文第一段是章节名的，可能会误伤。\n\n2、源变量（所有书）\n同书籍变量",
    "weight": 0
  },
  {
    "bookSourceComment": "∥2024.11.27◎GEd520◎",
    "bookSourceGroup": "写源",
    "bookSourceName": "源社区出品-【🧾悠久小说】",
    "bookSourceType": 0,
    "bookSourceUrl": "http://wap.ujxsw.net/",
    "bookUrlPattern": "http:\\/\\/wap\\.ujxsw\\.net\\/book\\/\\d+\\/",
    "customOrder": 398,
    "enabled": false,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "\n[{\"title\":\"全部🏷分类\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n{\"title\":\"玄幻奇幻\",\"url\":\"/xuanhuan/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"仙侠修真\",\"url\":\"/wuxia/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"都市青春\",\"url\":\"/dushi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"历史穿越\",\"url\":\"/lishi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"游戏动漫\",\"url\":\"/youxi/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"科幻灵异\",\"url\":\"/kehuan/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"女生言情\",\"url\":\"/yanqing/{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"全本完结\",\"url\":\"/full/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"排行榜🏷\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},\n{\"title\":\"点击榜\",\"url\":\"/top/allvisit_{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"收藏榜\",\"url\":\"/top/goodnum_{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"推荐榜\",\"url\":\"/top/allvote_{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"最新小说\",\"url\":\"/top/postdate_{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"最近更新\",\"url\":\"/top/lastupdate_{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\n{\"title\":\"字数排行\",\"url\":\"/top/size_{{page}}/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}]",
    "header": "{'User-Agent':'Mozilla/5.0 (Linux; Android 14; V2304A; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/123.0.6312.118 Mobile Safari/537.36',\n\"Referer\":\"http://wap.ujxsw.net/\"}",
    "lastUpdateTime": "1744002858497",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "p.2@text",
      "coverUrl": "img.0@src",
      "kind": "p.3@a@text",
      "lastChapter": "p.7@a@text",
      "name": "h2@a@text",
      "tocUrl": "text.章节目录@href",
      "wordCount": "p.4@text##状态："
    },
    "ruleContent": {
      "content": "#nr1@html",
      "nextContentUrl": "text.下一页@href",
      "replaceRegex": "##最新网址.*|第(.*?)章.*|.*免费小说.*|.*看书不迷路.*|.*方便阅读.*|.*免费下载.*|.*点击下一页.*"
    },
    "ruleExplore": {
      "author": ".author@text",
      "bookList": ".bookbox",
      "bookUrl": "h4@a@href",
      "coverUrl": "img@src",
      "kind": ".intro_line@text##时间：",
      "lastChapter": ".update@a@text",
      "name": "h4@a@text"
    },
    "ruleSearch": {
      "author": ".author@a@text",
      "bookList": ".bookbox",
      "bookUrl": "h4@a@href",
      "coverUrl": "img@src",
      "intro": "",
      "lastChapter": ".intro_line@a@text",
      "name": "h4@a@text",
      "wordCount": ".cat@text##时间："
    },
    "ruleToc": {
      "chapterList": "#chapterList@li",
      "chapterName": "a@text",
      "chapterUrl": "a@href"
    },
    "searchUrl": "/searchbooks.php,{\n \"body\": \"searchkey={{key}}&submit=\",\n \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🔭 其他,🎊 常用,🎨 漫画",
    "bookSourceName": "🎨禁漫天堂💞",
    "bookSourceType": 2,
    "bookSourceUrl": "https://jmcomic.ltd",
    "bookUrlPattern": "https:\\/\\/.*/album\\?id=\\d+",
    "concurrentRate": "10/5000",
    "customOrder": 28,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/exploreUrl.js')));\n</js>",
    "header": "<js>\nvar Proxy = Map('代理：').split(\",\");\nheaders={\n    \"User-Agent\": \"Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Mobile Safari/537.36 EdgA/127.0.0.0\",\n    \"Cookie\": cache.get(java.md5Encode16(Get('url') + \"cookie\")) || cookie.getCookie(Get('url')),\n    \"proxy\": Proxy.some(value => parseInt(value, 10) == parseInt(Get('ci0'), 10)) ? '' : Proxy[0],\n}\ncache.put(java.md5Encode16(Get('url') + \"headers\"),JSON.stringify(headers));\nJSON.stringify(headers);\n</js>",
    "jsLib": "{\"禁漫天堂\":\"https://qyyuapi.com/sy/js/禁漫天堂/jsLib.js\"}",
    "lastUpdateTime": "1744270256222",
    "loginCheckJs": "",
    "loginUi": "[\n  { name: \"代理：\", type: \"text\" },\n  { name: \"账号：\", type: \"text\" },\n  { name: \"密码：\", type: \"password\" },\n  {\n    name: \"💡登录账号💡\",\n    type: \"button\",\n    action: \"Login()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  },\n  { name: \"查看当前\", type: \"button\", action: \"look(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"查看历史\", type: \"button\", action: \"look(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"恢复默认\", type: \"button\", action: \"test(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁体搜索\", type: \"button\", action: \"search_TC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁简转换\", type: \"button\", action: \"TC_to_SC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"目录整理\", type: \"button\", action: \"settle()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换源站  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"①禁漫\", type: \"button\", action: \"$(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"②禁漫\", type: \"button\", action: \"$(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"③禁漫\", type: \"button\", action: \"$(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"④禁漫\", type: \"button\", action: \"$(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"༺ˇ»`ʚ  切换发现类型  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"分类排序\", type: \"button\", action: \"t(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"标签搜索\", type: \"button\", action: \"t(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"༺ˇ»`ʚ  标签分类切换  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"u(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"韩漫\", type: \"button\", action: \"u(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"日语\", type: \"button\", action: \"u(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"汉化\", type: \"button\", action: \"u(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"CG\", type: \"button\", action: \"u(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"短篇\", type: \"button\", action: \"u(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"单本\", type: \"button\", action: \"u(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"3D\", type: \"button\", action: \"u(7)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"COS\", type: \"button\", action: \"u(8)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"美漫\", type: \"button\", action: \"u(9)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"其它\", type: \"button\", action: \"u(10)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  标签排序切换  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"爱心排行\", type: \"button\", action: \"v(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"评论排行\", type: \"button\", action: \"v(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"评分排行\", type: \"button\", action: \"v(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"订阅数量\", type: \"button\", action: \"v(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"图片数量\", type: \"button\", action: \"v(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"最近更新\", type: \"button\", action: \"v(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换日期  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"o(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"本月\", type: \"button\", action: \"o(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"本周\", type: \"button\", action: \"o(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"今日\", type: \"button\", action: \"o(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n\n  { name: \"༺ˇ»`ʚ  点击切换图库  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"图库[1]\", type: \"button\", action: \"p(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"图库[2]\", type: \"button\", action: \"p(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"图库[3]\", type: \"button\", action: \"p(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"图库[4]\", type: \"button\", action: \"p(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"图库[5]\", type: \"button\", action: \"p(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"图库[6]\", type: \"button\", action: \"p(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"页数：\", type: \"text\" },\n\n  {\n    name: \"💡　　 源　　 站　　 打　　 印　　 💡\",\n    type: \"button\",\n    action: \"test()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  }\n]",
    "loginUrl": "eval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/loginUrl.js')));",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "canReName": "reName",
      "coverUrl": "cover",
      "downloadUrls": "durl",
      "init": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/ruleBookInfo.js')));\n</js>",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "tocUrl": "url",
      "wordCount": "word"
    },
    "ruleContent": {
      "content": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/ruleContent.js')));\n</js>",
      "imageDecode": "if (src.search(\"qyyuapi.com\") != -1) {\n    result;\n} else {\n    var Magua = new JavaImporter();\n    Magua.importPackage(Packages.java.io, Packages.android.graphics);\n    with(Magua) {\n        let mac = src.match(/photos\\/(\\d+)?\\/(\\d+)?/);\n        let bookId = mac[1];\n        let imgId = mac[2];\n        if (src.search(\"gif\") != -1 || Number(bookId) < 220980) {\n            result;\n        } else {\n            if (Number(bookId) > 421925) {\n                let md5 = java.md5Encode((bookId + imgId));\n                let ascii = md5.substr( - 1).charCodeAt(0);\n                var num = (ascii % 8 + 1) * 2;\n            } else if (Number(bookId) >= 268850) {\n                let md5 = java.md5Encode((bookId + imgId));\n                let ascii = md5.substr( - 1).charCodeAt(0);\n                var num = (ascii % 10 + 1) * 2;\n            } else {\n                var num = 10;\n            }\n            var img = BitmapFactory.decodeByteArray(result, 0, result.length);\n            var height = img.getHeight();\n            var width = img.getWidth();\n            var y = Math.floor(height / num);\n            var remainder = height % num;\n            var newImg = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n            let canvas = new Canvas(newImg);\n            for (let i = 1; i <= num; i++) {\n                let h = i === num ? remainder: 0;\n                canvas.drawBitmap(Bitmap.createBitmap(img, 0, y * (i - 1), width, y + h), 0, height - y * i - h, null);\n            }\n            var newbit = new ByteArrayOutputStream();\n            newImg.compress(Bitmap.CompressFormat.PNG, 100, newbit);\n            newbit.toByteArray();\n        }\n    }\n}",
      "imageStyle": "FULL",
      "nextContentUrl": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/ruleExplore.js')));\n</js>",
      "bookUrl": "url",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/ruleSearch.js')));\n</js>",
      "bookUrl": "url",
      "checkKeyWord": "秘密",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleToc": {
      "chapterList": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/ruleToc.js')));\n</js>",
      "chapterName": "title",
      "chapterUrl": "link",
      "preUpdateJs": "if (!String(book.bookUrl).includes(Get('url'))) {\n    book.bookUrl = String(book.bookUrl).replace(/.*\\/\\/[^\\/]+/g, Get('url'));\n    book.tocUrl = String(book.tocUrl).replace(/.*\\/\\/[^\\/]+/g, Get('url'));\n    java.refreshTocUrl();\n}",
      "updateTime": ""
    },
    "searchUrl": "<js>\neval(String(Reload('https://qyyuapi.com/sy/js/禁漫天堂/searchUrl.js')));\n</js>",
    "variableComment": "JspHXCgzmq549cSvxZRk3fhn8KDNLrUskaQwLvyq/WruQPm6gkVOfbKqM5kCCPowDXJkiSRSa3npJPxd9vxKh3cMNvD1zWkrw4ju5caIY4nxOyT73azNVhhjJZjyz/ebHvYW8WL3jcWxqxmNG6krxvli7namCa0q6ODFeq24oEdko9o6Qp4abnH7CJftdjfn6wuSjWOHcv24gGCqJw4SAAmrFhFTTu5N1/yBmdA/FoFdXzVCmh2O7QuWCNXEFEvtqz/dxjI8B6IAvPH5ODSHyJK4S1EmxkBS2KulmuqCT2aDz6rJyZNvlzxUKRZTZDpuhW1k7t9LEvq1mTbfzdhHTSUJeKpWwCLeVq0vUQi7hX6pIpxSPMWsKBl+WMzv/puLxTaIYB8le4S26dkr2hV2bGH3pA5YCkYUScdfILxk5JAGQ4QGx6B0jUjw0g1As4m9xlu3aXTAeop8NkfCtnPkaGqBNz5Jy8n9Dsb9YyaTRE01Sq2WGuErTpnYTaYDsFukJL3Oq071kZl65uglkJOlJyI8LMAZfXnykL7kV69T94fNpfR7l5B+PMUuV2leXpXCCpnf/g+EazBuR8T/LtV+2hhbC3WJ4NSmBmaUkg2iTWCSK2h+e7NfC4EW3MMwuRVyyx0zaQn+ISAjDUzWX0Ur7M8EZdnLkuDi1+eZUo69QfZJxsJ8r8KA32ZtRwkY/dGFWKg4m7zvhyYv7rJyry69F7t7JSwXGIuHVQPbQw6QHKdZxLa+ezvVp1Q/61gbbPagg8W9Mu53Yc+pVacX0KwmL1MGkuKr4KO5qms0VgYSa3QFZmAGx8jTD15sEi2/xHL3a6CocecafGqk/wEhOqH7v32Hb1YH5bn3yPu6rS04JuL3BPItX5A7zXS4aYYxAs947WePVDyHzjLiQ3oa0SH1SeSKTmE0iG49y0/Ax/oa7/msubM0ftQ2gT9IsiihS+vryqWEEP+x9CfXCz0774d9ezyd6ADGicvaltCTpkJ7CUWjMM3gn1sAK4L/z8+lO/a/Zt5/8jg8qI5+lGqBM6Qd+TCKa7RtFD4oF4r4Vn0Z5vSojUrnG6fxDrm5Q+aYyIVW9d9o+V0cz3ww0uWW0+q/vV+gkpXhULmCbFjj65LK6/QnnN9sjj9lOhViEgi8k6Oc4HWHnFL11R/wHeUOXRoZIlZjQ5UklSqnjPYCXzPwSuM5ZvHpWHdG/CrlPZ2LsQjuux2W3S1YTD5S+mr+ejszdnaKnnVvrV5HVE2Z+7JzUWoZ3jyq9Sg9og7kjDMEir5fybAExq7TBoyftiE1H+d6VlqXlTAoH2JAwm+d7fYJjw5l6yh9YiPqYd6YxwRg8rlG+ySH4bHziI7jMQ7/GtEwa/cHATbfvgMNjYxWdwg7pHYrexYOn1WpmwmxBjvdQsIaXfE3/XrSeyb4tTFGHgzpEvMxINroaKGsHesZ8PYrJKgB0r+KwfT5g99chGY5r9HzGO/G96mIBgKeJjGjp5Pv3rz3GywYyb2xqR9GYQaYbKK/R4Jb0rqHRAIcBGOOTjvtJTpTMO+XBwjWBvAVIy2F9XEvq/B4AvCZH/8B7KUX4R3yffmKxJpZlU4GmpniIHM3YNNJJdbGHpy5gR/drUQ1wvkh0B1N+BEDu7ET0FoLmAaTQiQBLP29FVDG9gtS/pedKkcUsu+avApZ2bHg8Y3BozcLtdSo596Z6aZALHOevNCqhd9fD70/acNr+2sXMp59B5eEzA+dKeYZCxR88h1vAluNqPm7Y+iB31Vtt8W6Xat5+tZX2z2BVhGl0msaq8gDC+e1/3J2yhbnCdDJw3/1qi1po8OK93KCH+N+DkhFMAZC+zkWcklEU+q2J5zY+VNAK9zior8Mh0RbtUOe452yNc60WMykD1p5jEsnW6JnnJbGCMIxxIrf+EHut6MPlC1zpDuPQRs/H9kFumMPgbiFwS19gDSC1DyX/CRrDCDO/F3cCE8hpZTx23APKTbI4yue+89HkAsAVzscLrrRYu1/fC1dJkoWIRezH5q8S8L6zRJDW62UciLwToswLlKHssUgEphSf0Aqu7b2ZWDzVumi8EqyQ887U15a2Ju2meqp1IbRvzuRImtFCPJvXCJTRLFguKhlhJPZjXM6+DgSutRt06UCMhbO8kRSd5XZLfLXx4SpRqLmPbPDIp7Z+VAzt9IECFrDQzLVjSsAfKETgSNyiimwxwP2S88vsQzRh2YP2Mbk886BLrv9cCBq6z5Co9HSdZyKrKyUqoIkAZM1QityMtpHudPrDm9Wn2UR4YshDfI2BUHw5QUks0QBNocu+jfuCxNjMeNDzOk0a/ZER3ne8qP3wokNIjSKREwHnyiXZQ1K4gl90XkIKDm01NlT9vScSmEbn97ZQtltH5M5c0fAI3++0gjMYnhpX+qUDSJFEEwQfBdJCM48neWFIOypS+hvpQ9gj3ZrdwqpVBwtbTRMaVarK85aoDSOO3nlrbDdeaFNNUTL1kb5KUB80wtlrkds8UgZh9UxUjRfzMvexWNsJYQQ56X666bukqqdUNnQfnHOkDe4gqniLbFbhO0StrLoGh7Kvz7JXw6jb1TsSsM1orS6BysAtr1i98ddiF0qBxo/O9uVEYnOJ8Z2Dyltcl5S05Neu/6jTZFlMx1m0ZEjbPIWTrgYl4MMAPS/4CMtN2I7D537Gzm6RwKU/C3Q2ouH0c2cbjwW8AiQ+ilpmhv9g+tkvIROeesBVHoUXu406WFrtw9VjW7BTsM7KSoJWKXapnOtsddIdJ2kmEX5UVHjHjZaYeq61u5pN0x7zZn5ZF+2maap4AEOgPAvu5u3Mnv0Xu0VRZAZRaeM09n7N2ZrO3NXTpCxrZl2bFIiX+Hpx3qmm6Xi14gCh5YpSvwJfjhW4Kgm2ASAoDqZcwKdeS+lVZdYq+X0TuRGHsvYF5iKMClqg/RtJPt53ke6RyKev4nqifXz4DUevi+q6OfecLFIvBcSBHMFllBRm77sJy64P5FT2CPtdUhfp17J9Aat40v+mELrhZdZCm41/m6J3tDfOzamn0NSABrxI4vnkzp1soOSYmHm5GbSexuL+F78tHXfzgK/kSiz382HPHSiNblLjtaQQAj7k6tY39j9hDD588kXFuRa7bW9n6tIvTW8NnfOOE+5zFHWTY/gAANvfXyw86qcAa8G5AtRlp1LiZJk1uD0Yp9fn+PCRSzMiya+wsDmrWpQcATi1Q/Tib4cElGAujx3N57hDdjdIo1TPTbaArW8dQPoxlOL+iT0E0dxbjHjVoI8KAqRITI1L72LXmWfUXhpScS9YLjJBbCYg164IZnMS/ZZ14folC/fvHPlN3YTPpkjj1nQiEOn1qhHus0Pr7+E4VEJ3XdfBbRze7a427gMtQNZVyL8n24K++1pCIfNszWAquct9/INJXmNUpnedOn2KGNLbWqilS6ARYuFreF7pb8BkSdVAPt25psii7cRtk5EznPGiRGrlP7NHpMljeSV/Lv4bVWBHgVCIZwTsc95puyrL1wwa3cctW0xl1CHqpwBrwbkC1GWnUuJkmTW4PRin1+f48JFLMyLJr7CwOZf2RAY8c1G2R8ip3zT4pHhAtL7y0HjDQboQ36wpp6IpML2xV43DAionFvY9cbJUPd7y3RvvVApJURRhlh48bjHlY5ptojy8xmlIFtdr5b1MnltLJiRitJQhTSSYbiOdmI9xG+JJLDBwkf7nRaNuxzQ/rFDr75L/VlX/6R2SP45pfFIkGb9yi3QFWetSclDI9MDM8HxswOBp5dJ25nY+RtJ9bam5XaahII7ktMGDC0KrcN4wvvub1dTYfikwiYl3Z9d4aB6AI6g2P0X4Pn9N+V4c2obA6bWQygErw71ukcPR4P9sduf5r/KN9NNAFMXRqac/Km2jXlqpbouPL1r0i7FOivLXhQpkJONyW4tOmrTksDd2oipdaZur4JYuTFDx2s0rT5Ek9WCMhn9CTputUnC2Xzk988y1XYBjI+iU0jzPNw0lssuu+RxvXVFQbgg2WRVa4iH4gnjzyrLMtO8N4CsNEeNkwuASEDTewCYI0DKHL67SMs6bNhEO2Lw8oXLCjxtqHkR/ZBi+Mm87rKu4x7RxoQ87TMnQD/WLpkPI6qCRfaaUJfns8v7qXh4lzMAhPU6AcMHuezQVJOVZQosKaXbxjNs62coXNDQTG+tOtCTy8YOiYayV8iTMTAa5DMFUV9YaHTsppCtRuKgpz51iNZv9s5zuMuqtQn5HbFg6HR1N5/e6wdsEZH5fOqX1XDm9a883dq/Vf2u5yTLJ5neXvAsUKL5AULQDCEeKVHs6VL0BJp/KdgpHQHAPDC57Ou4wktbH3kqoL8iLheKC5MwnnsyVIhWq4VFpLz4795SsTOF087VJfCTaowjiedfAbGS43YecpvVIf7doFhM8M2QplDBoOiFvHfs2j8UKqP7bTK/ho5p0prKy6cSvetJ1gY04quOSzjVJ3YlrKrxSj0XYoz0Fk1uZEADkyxt0Rd1phF6KcRc4EUg8CEDBSOERQnQmjl39j4wDdbvNPLWV9UTJcPwYtifKQSXmfciTGEV7PuteVBrQVQarRIZ1myoJNrJZBAsfooMkJJUBSCdWUz1YOlxSHXlkF5csqZHxATBa+BT8lZhgUqjQd+THfn8HtzsEOGPonXeWCPMhYRtpxVfETjxtYQQiZF+DeIrrAGkfAeqDO14sdXSY6NeT1qBecaAeOuVVrRC0HqDIiZthvIGJg0bczxaorqHgJgFYRyiNDBjxMGbLC6R36Nx9q9KGbOZTtLdgtLmt7SmsjRlJd/1VcW4kQJ6YDDH/JM5I5eYD8Iuyq/rPjdwLNCUxSX2WvdP2d6dIdC3/O0o+MGf5UrUNvNA3fl8FuVBDVrYfY1P0RGHPjRnN+SYVT1CPK71S790rd83+lYjj4KXiCMr2NOBj4e49RUmyunsssFg9R4AdODHVEpVdNCpaIqK9uU02Y2HKjctAm+Ci2+epNBEOvp+DhO8Gd97i6D4F9U7tQBExmxVMeFiTwKpZSnXiAhuQ+C5V5S+BiiAviB4HKO4kc6PD29wM1INCcNreFUzbBV5GjhZ+VnOq+kn04NVKwgAme/smcDIUpG603cP7C7KgAOew3gf1IuunO7cRJ68X1ivD5PJhbZVdWWOgHQHkzYNQN5WkBTJ+5hpR0ya9c9vwnsALT/oEPYDJ4EGXMcTZBaMQP0tTbx5vFxDek3XCc7E6HISWIIXyDXJ54CXM0ltRbeDhrrZtcmY7D/FvP4yZWsWeno48a+TgIwNlAnOAIRXoiUlHrvUC/tzpTY44+5Bc5K27KATio4IIVbgge/YDMGzycvI+SLOfCXTCWAeCuSKwcbfEOQ+rxSQQGyxzKfo1hW5ADAikuR2yTNbAqDi3LCJTDZsK08RWIYv53HhNyj0ap8HTZs3+lYjj4KXiCMr2NOBj4e49RUmyunsssFg9R4AdODHVEpVdNCpaIqK9uU02Y2HKjctAm+Ci2+epNBEOvp+DhO8JPDm4RKuEuVHdsFGuX8dTzeo4JaT5dRFR52OqQY0fiVcWFNMaVYsjhkHBaPNzcs+",
    "weight": 0
  },
  {
    "bookSourceComment": "20241104新增指定来源搜索\n20241124新增详情页音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器、音色",
    "bookSourceGroup": "番茄小说,书山",
    "bookSourceName": "📚书山融合",
    "bookSourceType": 0,
    "bookSourceUrl": "http://s3.shushan.xyz:50005\n提示：点击登录切换服务器按钮可进行切换(当前书源为融合版)",
    "bookUrlPattern": "",
    "customOrder": -7,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"大灰狼阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + key,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"search\": \"-1\",\n            \"tone_id\": \"-1\",\n            \"server\": \"http://api.shushan.vip\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "lastUpdateTime": "1743766527758",
    "loginUi": "\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },    {\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前模式\",\n        \"type\": \"button\",\n        \"action\": \"get_search()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎搜小说\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-1','小说搜索')\"\n      },\n      {\n        \"name\": \"🔎搜音频\",\n        \"type\": \"button\",\n        \"action\": \"set_search('0','音频搜索')\"\n      },{\n        \"name\": \"🔎搜漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-2','漫画搜索')\"\n      },\n      {\n        \"name\": \"阅读模式\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('-1','纯净阅读')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n      {\n        \"name\": \"其他音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      }\n    ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    ;\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        }} catch (error) {\n    }\n    ;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';\n}\n\n// 填写密钥\nfunction loginqt() {\n    let key = gets_key()\n    if (key && key != \"\") {\n        java.toast(\"您已填写秘钥:\" + key);\n        return false\n    }\n    java.startBrowserAwait(getArgument('server') + '/check_key', '登录书山小说书源');\n    key = gets_key()\n    if (key) {\n        java.longToast('登录成功，秘钥：' + key);\n        return true\n    } else {\n        java.toast('登录失败！！！！！');\n        return false\n    }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    return getArguments(open_argument, key);\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() {\n    java.startBrowserAwait(getArgument('server') + '/', \"接口文档\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//获取搜索\nfunction get_search() {\n    var search = getArgument('search');\n    var datadist = {\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"0\": \"音频模式\",\n    };\n    var tishi = '\\n\\n当前搜索模式：' + datadist[search]\n    java.toast(tishi);\n    return search\n}\n\n//设置搜索\nfunction set_search(mode, name) {\n    setArgument('search', mode);\n    setArgument('tone_id', mode);\n    java.toast('\\n\\n已切换至' + name);\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\nfunction zr() {\n    let toast = '\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}\n\nfunction mh() {\n    let toast = '\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}",
    "respondTime": 1017,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "thumb_url",
      "init": "",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n</js>",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "last_chapter_title",
      "name": "book_name",
      "tocUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "炙热沦陷",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn '无'\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.chapterListWithVolume[*].*\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nlet genreValue = JSON.parse(java.ajax(book.bookUrl)).genre;\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\nvar ms = String(tone_id)\nif (genreValue === '0' && ms === '-1') {\n\tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n} else if (genreValue === '1') {\n\t  if (device === 'android') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n}else if (genreValue === '4') {\n\t   var ms = '0';\n\t   if (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n} else if (genreValue === '9999'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t }else if (genreValue!='0' && genreValue!='1' && genreValue!='4' && ms === '-1'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t } else {\n\t \tif (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n\t \t};\nresult",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\n\nlet open_argument = source.getVariable();\n\t   \t\t\t   \t\n\t   \t\t\t   \t\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet media;\nif (ms == '0') {\n    media = `${base_url}/searchAudio?title=`+search_title+'&media=喜马拉雅,番茄';\n} else if (ms == '-2') {\n    media = `${base_url}/searchCaricature?title=`+search_title+'&media=番茄';\n} else {\n     media = `${base_url}/searchNovel?title=`+search_title\n}\nkey = '&key=' + key;\n//java.toast(media + key);\nmedia + key",
    "variableComment": "",
    "weight": 63
  },
  {
    "bookSourceComment": "@Suml 原模板\n@情无羁 搜索规则\n@天天的鸟蛋蛋 目录 ",
    "bookSourceGroup": "",
    "bookSourceName": "番茄小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.fanqxsw.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "header": "",
    "lastUpdateTime": "1743595162777",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "class.infoM@tag.dl.0@tag.dd@text",
      "coverUrl": "class.book chapBox@class.picb@class.pic@img@src",
      "init": "<js>\nurl=java.getString(\"text.章节目录@href\",src)\nr=java.ajax(\"https://www.fanqxsw.com\"+url)\nn=java.getString(\"option@value\",r)\nlines = n.split('\\n');\np = lines[lines.length - 1];\njava.put(\"m\",p)\njava.log(p)\n</js>",
      "intro": "",
      "kind": "",
      "lastChapter": "class.infoM@tag.dl.1@tag.dd@text",
      "name": "class.book chapBox@class.txtb@tag.a.0@text",
      "tocUrl": "<js>\nbody=`{\"body\": \"id={{baseUrl.match(/book\\/(.*)\\.html/)[1]}}&page=1\",\"method\": \"POST\"}`\nif (baseUrl.match(/fanqxsw/)){\turl='https://www.fanqxsw.com/index.php?action=loadChapterPage,'\n\tre=url +body;\n\tre\n\t}else if(baseUrl.match(/fanqxsw/)){\turl='https://www.fanqxsw.com/index.php?action=loadChapterPage,'\n\t\tre=url+body;\n\t\tre\n\t\t}\n\t\n</js>",
      "wordCount": "class.txtb@class.about@tag.span.2@text"
    },
    "ruleContent": {
      "content": ".content@html",
      "nextContentUrl": ""
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": ".dlS.0@a@text",
      "bookList": "class.list dList@ul@li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": "class.intro@text",
      "kind": ".dlS.1@a@text",
      "lastChapter": "",
      "name": "a.1@text"
    },
    "ruleToc": {
      "chapterList": "$..data[*]",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js:\nm=java.get(\"m\");\nlist=[]\nif(JSON.parse(result).data.length>0){\n\tfor (i = 2; i <= m; i++){\n\tlist.push(baseUrl.replace(/page=(\\d+)/,'page=' +i))\n\t\t}\n\t\tlist\n\t}"
    },
    "searchUrl": "<js>\ncookie.removeCookie(\"https://www.rrssk.com\")\njava.get('https://www.rrssk.com/?47',{})\nresult=`https://www.rrssk.com/keywords-${key}.html,{\n  \"headers\": {\n  \t\t\"referer\": \"https://www.rrssk.com/?47\",\n    \"Cookie\": \"${cookie.getCookie(\"https://www.rrssk.com\")}\"\n  }\n}`\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "let banben=\"0.0.2\";",
    "bookSourceGroup": "🎶,wyy",
    "bookSourceName": "🌈网易云音乐",
    "bookSourceType": 1,
    "bookSourceUrl": "https://网易云音乐.luoyacheng.ip-ddns.com",
    "concurrentRate": "5/1000",
    "customOrder": 14,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "header": "@js:\n(()=>{\n\treturn gethd();\n})();",
    "jsLib": "s_c_ua = `'Microsoft Edge';v='131', 'Chromium';v='131', 'Not_A Brand';v='24'`;\ns_c_ua_m = '?1';\ns_c_ua_p =  `'Android'`;\ncache_c = 'max-age=0';\na_l = 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7';\n\nfunction gethd(url='',ck='') {\n\tlet u_a=this.java.getWebViewUA();\n\tlet headers = {\n\t\t  \t'User-Agent': u_a,\n\t\t  'sec-ch-ua': s_c_ua,\n    \t 'sec-ch-ua-mobile': s_c_ua_m,\n     \t'sec-ch-ua-platform': s_c_ua_p,\n     \t'cache-control': cache_c,\n     \t'accept-language': a_l\n    \t }\nif (ck!='') headers['cookie']=ck;\nif (url=='') return JSON.stringify(headers);\nelse return url + ',' + JSON.stringify({'headers':headers});\n};\n",
    "lastUpdateTime": "1744277326368",
    "respondTime": 180000,
    "ruleBookInfo": {
      "coverUrl": ""
    },
    "ruleContent": {
      "content": "@js:\nresult = java.hexDecodeToString(result);\nlet url = `https://music.cpp-prog.com/api.php,{\t\"method\": \"post\",\n\t\"body\": \"types=url&id=${result}&source=netease\"\n}`;\nlet rr=java.ajax(url);\njava.getString('$.url',rr)"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "$.artist@js:result.replaceAll('\\n','/')",
      "bookList": "$.[*]",
      "bookUrl": "$.url_id@js:\n`http:data:;base64,${java.base64Encode(result)},{'type':''}`",
      "checkKeyWord": "我记得",
      "coverUrl": "$.pic_id@js:\nlet url=source.get('picu'+result);\nif (url=='') {\nlet r=java.ajax(`https://music.cpp-prog.com/api.php,{\t\"method\": \"post\",\n\t\"body\": \"types=pic&id=${result}&source=netease\"\n}`)\nurl=java.getString('$.url',r);\nsource.put('picu'+result, url);\n}\nurl",
      "intro": "",
      "kind": "$.album&&source",
      "name": "$.name"
    },
    "ruleToc": {
      "chapterList": "@js:\nresult=[{text:book.name}]",
      "chapterName": "text",
      "chapterUrl": ""
    },
    "searchUrl": "https://music.cpp-prog.com/api.php,{\n\t\"method\": \"post\",\n\t\"body\": \"types=search&count=20&source=netease&pages={{page}}&name={{key}}\"\n\t}",
    "weight": 0
  }
]