[
  {
    "bookSourceComment": "┍　　　说明　　　作者：洛娅橙　　┒\n├────────────────┤\n│①书源默认优化正文加载，可能会导│\n│致下载书籍异常，在该登录界面点击│\n│启用下载即可。　　　　　　　　　│\n│②登录界面开启同步书架功能，在详│\n│情页下拉刷新两次或书架刷新，会自│\n│动同步至网站书架。　　　　　　　│\n│③支持屏蔽书籍为黑名单，之后在搜│\n│索和发现不再显示屏蔽后的书籍。误│\n│点时，可再次点击进行恢复。　　　│\n│④输出名单到日志需要在软件其它设│\n│置里开启记录日志功能。　　　　　│\n│⑤正则书名黑名单填写示例：　　　│\n│　/母亲|第\\d+部/　　　　　　　　　│\n│⑥白名单填写示例：　/岳母|御姐/　 │\n│同时符合黑名单与白名单的书籍正常│\n│显示，与单独屏蔽功能独立。　　　│\n│⑦网站选书：在书籍界面直接点击√│\n│会自动跳转详情页。　　　　　　　│\n├────────────────┤\n│　　　　　　　　　　　　　　　　│\n│请使用阅读最新测试版导入该书源　│\n└────────────────┘\n┍　　　　书源作者：洛娅橙　　　　┒\n├───┬────────────┤\n│！免责│本书源只提供代码进行技术│\n│！声明│交流，请于２４小时后删除│\n├───┴────────────┤\n│可在书源登录界面进行登录。　　　│\n│搜索关键词输入示意：　　　　　　│\n│“我的”、“书名：系统”、“作者│\n│：棺材”、“标签：母女”。　　　│\n│书籍变量可用来进行交互，详情查看│\n│相应界面的变量说明　　　　　　　│\n└────────────────┘\n___________________________________________\n八叉发布页：https://8xsk.org\nip地址查看：https://iplark.com",
    "bookSourceGroup": "🙈,八叉",
    "bookSourceName": "🌈八叉书库",
    "bookSourceType": 0,
    "bookSourceUrl": "https://洛娅橙.八叉书库",
    "bookUrlPattern": "https://www.(?:\\d+\\.xyz|8xbook.+)/book/\\d+\\.html",
    "concurrentRate": "1000",
    "coverDecodeJs": "",
    "customOrder": -93912,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.4.7\";\nftsm();\neval(String(source.loginUrl));\nlet surl = `{{String(source.getVariable()).replace(/\\\\/$/,'')}}`;\n\nvar obj = {\n\t最近更: {\n\t\t\"url\": \"/sort/0/{{page}}.html\",\n\t\t\"fg\": 9},\n\t\t'新(肉)':{\n\t\t\"url\": \"/sort/7/{{page}}.html\",\n\t\t\"fg\": 1},\n\t最近入库: {\n\t\t\"url\": \"/top/postdate/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t最近完: {\n\t\t\"url\": \"/modules/article/articlelist.php?fullflag=1&page={{page}}\",\n\t\t\"fg\": 9,\n\t\t\"wrap\": true},\n\t\t'结(肉)':{\n\t\t\"url\": \"/modules/article/articlelist.php?sortid=7&fullflag=1&page={{page}}\",\n\t\t\"fg\": 1},\n\t签约新书: {\n\t\t\"url\": \"/top/signtime/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t字数榜: {\n\t\t\"url\": \"/top/words/{{page}}.html\",\n\t\t\"wb\": true},\n\t收藏榜: {\n\t\t\"url\": \"/top/goodnum/{{page}}.html\"},\n\t新书榜: {\n\t\t\"url\": \"/top/newhot/{{page}}.html\"},\n\t\t\n\t总点击: {\n\t\t\"url\": \"/top/allvisit/{{page}}.html\",\n\t\t\"wb\": true},\n\t月点击: {\n\t\t\"url\": \"/top/monthvisit/{{page}}.html\"},\n\t周点击: {\n\t\t\"url\": \"/top/weekvisit/{{page}}.html\"},\n\t\t\n\t总推荐: {\n\t\t\"url\": \"/top/allvote/{{page}}.html\",\n\t\t\"wb\": true},\n\t月推荐: {\n\t\t\"url\": \"/top/monthvote/{{page}}.html\"},\n\t周推荐: {\n\t\t\"url\": \"/top/weekvote/{{page}}.html\"},\n\t\t搜索: {\n\t\t\turl: \t`{{\n\t\t\t\tlet surl = String(source.getVariable()).replace(/\\\\/$/,'');\n\t\t\t\tif (page == 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\tlet [cb,cf] = colorz();\n\t\t\t\t\tsvg=\\`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"100%\" height=\"150%\" fill=\"#\\${cb}\"/><text fill=\"#\\${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\"><tspan x=\"50%\" dy=\"30%\" font-size=\"100\">请输入搜索关键词</tspan><tspan x=\"50%\" dy=\"50%\" font-size=\"50\">此处搜索不支持完整书名</tspan></text></svg>\\`;\n\tsvg=java.base64Encode(svg);\n\tkeyy=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\n\t\t\t\t\t} catch(err) {keyy='系统';\n\t\t\t\t\tPackages.java.lang.Thread.sleep(500);\n\t\t\t\t\tjava.toast('使用默认关键词“系统”');}\n\t\t\t\t\tsource.put('keyy',keyy);\n\t\t\t\t\t\t}\n\t\t\t\telse keyy = source.get('keyy');\n\t\t\t\turl =\tsurl+'/modules/article/search.php?searchkey='+keyy+'&searchtype=all&page='+page;\n\t\t\t\turl\n\t\t\t}}`,\n\t\t\t\"fb\": 0.3,\n\t\t\t\"wb\": true},\n\t我的书架: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\tlet surl = String(source.getVariable()).replace(/\\\\/$/,'');\n\t\tlet ck = source.getLoginHeader();\n\t\tcookie.replaceCookie(surl,ck);\n\t\tck ? surl+'/modules/article/bookcase.php' : java.longToast('请登录账号');\n\t\t} else 'http://127.0.0.1/';\n\t\t}}`,\n\t\t\"fb\": 0.3}\n\t}\n\nvar sort = [];\npush = (title, url, size, wrap, cc) => sort.push({\n    \"title\": title,\n    \"url\": url.startsWith(\"{{\") ? url : url ? surl + url : \"\",\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: cc || -1,\n      layout_wrapBefore: wrap ? wrap : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\n\n//版本号\npush(\"版本号:\"+banben+\"　点我刷新地址\", `{{if(page==1) {\n\tjava.put(\"bj1\", 0);\n\tcache.put('8xbl1', source.getVariable());\n\tsource.setVariable(''); gengxin();\n\teval(String(source.loginUrl));\n\tif (java.get(\"bj1\")==1) java.longToast('源地址没有更新');;}\n\t'http://127.0.0.1/'+page}}`, 1, true);\npush(\"测速/更新\",`{{eval(String(source.loginUrl));gengxin(); Packages.java.lang.Thread.sleep(100); ceshi(); 'http://127.0.0.1/'}}`, 1);\n\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n   // let ck = source.getLoginHeader() || '';\n    nn = String(source.getVariable());\n    let ck = cookie.getCookie(nn);\n    let headers = {\n    \t'User-Agent': ua,\n    \t'x-requested-with': x_r_w,\n    \t'sec-ch-ua': s_c_u,\n    \t'sec-ch-ua-platform': s_c_u_p,\n    \t'cookie': ck\n    \t };\n    \t return JSON.stringify(headers);\n})();",
    "jsLib": "ua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.2957.129';\nx_r_w = 'com.microsoft.emmx';\ns_c_u_p = 'Android';\ns_c_u = `\"Not(A:Brand\";v=\"99\", \"Android WebView\";v=\"133\", \"Chromium\";v=\"133\"`;\nfunction colorz() {\n\tconst {java, source} = this;\n\tlet cb,cf;\n\ttry {\n\t\tcb = source.getLoginInfoMap().get('封面背景颜色');\n\t\tif (cb=='') throw '空';\n\t\t} catch(err) {cb='151E27';}\n\ttry {\n\t\tcf = source.getLoginInfoMap().get('封面字体颜色');\n\t\tif (cf=='') throw '空';\n\t\t} catch(err) {cf='dddddd';}\nreturn [cb,cf];\n}\n\nfunction hexToInt(e, t) {\n        var r = e.substr(t, 2);\n        return parseInt(r, 16);\n    }\nfunction decodeEmail(n, c) {\n    var o = \"\", a = hexToInt(n, c), i = c + 2;\n    for (i; i < n.length; i += 2) {\n        var l = hexToInt(n, i) ^ a;\n        o += String.fromCharCode(l);\n    }\n        o = decodeURIComponent(escape(o));\n        return o\n}\n\n\nfunction ftsm(){\n\tconst {java, source} = this;\n\tlet nm = source.get('8xftn');\n\tif(nm==''||nm<0) {nm=3;}\nif(nm>0) {\n\tnm--;\n\tsource.put('8xftn',nm);\n\tlet ss = String(source.bookSourceComment).match(/\\n┍[^┘]+┘/)[0];\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);\n\tPackages.java.lang.Thread.sleep(2000);\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);}\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<title>更新</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://gitee.com/lyc486/yuedu2/raw/main/书源/八叉/8x.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/书源/八叉/8x.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'更新');\r\n}\n\nfunction tbshujia(iuu,iid){\nconst {java, source} = this;\nlet iuux=iuu+'/modules/article/addbookcase.php';\nlet iuuy=String(iuu+'/book/'+iid+'.html'); //需要转化否则报错\nlet tm = new Date().getTime();\nlet body = `bid=${iid}&ajax_request=${tm}`;\nlet ck = source.getLoginHeader()||'';\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': iuuy,\n        'cookie': ck\r\n    };\nif (String(ck).includes(\"jieqiUserInfo\") ) {\nlet by = java.post(iuux,body,headers).body();\njava.longToast('\\n'+this.book.name+'：\\n'+by);}\n}\n\nfunction hmdjib(id,name){\nconst {java, source, cache} = this;\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet i=false;\n\ttry {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名黑名单');\n\t\tlet rg = eval(String(rgstr));\n\t\ti=rg.test(name);\n\t\t} catch(err) {}\n\ttry {\n\t\tif (i) {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名白名单');\n\t\tlet rg = eval(String(rgstr));\n\t\t i=!rg.test(name);\n\t\t }\n\t\t} catch(err) {}\n\t\ti = i||(id in hmd);\n\t\treturn i;\n\t}\n\nOranges = `<path d=\"M646.4 763.6c150.1-15.8 267.1-142.7 267.1-297 0-164.9-133.7-298.7-298.7-298.7-154.8 0-282.1 117.8-297.2 268.7\" fill=\"#FA9F23\" p-id=\"5624\"></path><path d=\"M648.6 784.8l-4.5-42.4c67.7-7.1 130.3-39 176.3-89.7 46.3-51.1 71.7-117.2 71.7-186.1 0-74.1-28.8-143.7-81.2-196.1-52.4-52.4-122-81.2-196.1-81.2-69.2 0-135.5 25.6-186.6 72.2-50.8 46.3-82.5 109.2-89.3 177.3l-42.5-4.2c7.8-78.6 44.4-151.2 103-204.6 59-53.7 135.5-83.3 215.4-83.3 85.5 0 165.8 33.3 226.3 93.7 60.4 60.4 93.7 140.8 93.7 226.3 0 79.6-29.4 155.9-82.8 214.8-53 58.3-125.2 95.1-203.4 103.3z\" fill=\"#333333\" p-id=\"5625\"></path><path d=\"M161.5 832.4c116.6 116.6 305.7 116.6 422.4 0s116.6-305.7 0-422.4\" fill=\"#FA9F23\" p-id=\"5626\"></path><path d=\"M372.7 941.2c-85.5 0-165.8-33.3-226.3-93.7l30.2-30.2c52.4 52.4 122 81.2 196.1 81.2s143.7-28.8 196.1-81.2c52.4-52.4 81.2-122 81.2-196.1s-28.8-143.7-81.2-196.1l30.2-30.2c60.4 60.4 93.7 140.8 93.7 226.3S659.4 787 599 847.5c-60.5 60.4-140.8 93.7-226.3 93.7z\" fill=\"#333333\" p-id=\"5627\"></path><path d=\"M161.480941 832.416461a170.7 298.7 44.999 1 0 422.418218-422.432964 170.7 298.7 44.999 1 0-422.418218 422.432964Z\" fill=\"#FBE0C3\" p-id=\"5628\"></path><path d=\"M249.1 885.8c-9.3 0-18.4-0.7-27.2-2-30.5-4.6-55.9-16.8-75.5-36.4-19.6-19.6-31.8-45-36.4-75.5-4.2-28-1.7-59 7.4-92.4 18.1-66.2 60.5-135.2 119.5-194.2S364.9 384 431.1 366c33.3-9.1 64.4-11.6 92.4-7.4 30.5 4.6 55.9 16.8 75.5 36.4s31.8 45 36.4 75.5c4.2 28 1.7 59-7.4 92.4C609.9 629 567.5 698 508.5 757s-128 101.4-194.2 119.5c-22.9 6.2-44.7 9.3-65.2 9.3z m18-370.2c-53.8 53.8-92.4 116.1-108.5 175.2-15 55-8.6 99.9 18 126.5s71.5 33 126.5 18c59.2-16.1 121.4-54.7 175.2-108.5 53.8-53.8 92.4-116.1 108.5-175.2 15-55 8.6-99.9-18-126.5s-71.5-33-126.5-18c-59.1 16.2-121.4 54.7-175.2 108.5z\" fill=\"#333333\" p-id=\"5629\"></path><path d=\"M373.3 641.5h148.4c-16.2 23.8-35.8 47.6-58.5 70.2-28.9 28.9-59.7 52.9-90 71.1l0.1-141.3z m187.1-193.4c27 37.3 15.7 103.4-25.2 172.1H388.3l172.1-172.1zM351.9 656.6v138.2c-61.4 31.7-118.7 38.6-152.4 14.2l152.4-152.4z m-152.5-15.1h137.4L184.6 793.8c-24-33.9-16.9-91.1 14.8-152.3z m173.9-182.6c68.5-40.9 134.5-52.4 172-25.9l-172 172V458.9z m-91.1 71.8c22.5-22.5 46.1-42 69.7-58.1v147.6H211.4c17.6-29.1 40.4-58.6 67.8-86.5l3-3z\" fill=\"#F5A74A\" p-id=\"5630\"></path><path d=\"M625.8 266.5l-13.5 9.9c-1.9 1.4-4.6 1-6-0.9-0.6-0.9-0.9-1.9-0.8-3l1.8-16.7L592 249c-2.2-1-3.1-3.5-2.2-5.6 0.4-1 1.2-1.8 2.2-2.2l15.3-6.8-1.8-16.7c-0.3-2.3 1.4-4.4 3.8-4.7 1.1-0.1 2.1 0.2 3 0.8l13.5 9.9 13.5-9.9c1.9-1.4 4.6-1 6 0.9 0.6 0.9 0.9 1.9 0.8 3l-1.8 16.7 15.3 6.8c2.2 1 3.1 3.5 2.2 5.6-0.4 1-1.2 1.8-2.2 2.2l-15.3 6.8 1.8 16.7c0.3 2.3-1.4 4.4-3.8 4.7-1.1 0.1-2.1-0.2-3-0.8l-13.5-9.9z\" fill=\"#333333\" p-id=\"5631\"></path><path d=\"M799.4 313.5m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5632\"></path><path d=\"M828.4 348.3m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5633\"></path>`;\n\nfunction jinghuafm() {\nconst {java, source} = this;\t\nfunction splitString(str) {\n    const length = str.length;\n    if (length < 15) {\n        return length<9 ? [str] : [\n            str.slice(0, 7),\n            str.slice(7)\n        ].filter(s => s);\n    } else if (length < 20) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13)\n        ].filter(s => s);\n    }  else if (length < 24) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13,18),\n            str.slice(18)\n        ].filter(s => s);\n    } else {\n        return [\n            str.slice(0, 7),\n            str.slice(7, 13),\n            str.slice(13, 18),\n            str.slice(18, 22),\n            str.slice(22)\n        ].filter(s => s);\n    }\n}\nfunction pingString(ss) {\nlet rr='';\nlet l1=ss.length;\nfor (let i1=0; i1<l1; i1++) {\n\tlet c1=ss[i1], l2=c1.length;\n\tfor (let i2=0; i2<l2; i2++) {\n\t\tlet c2=c1.charAt(i2);\n\t\trr += `<tspan x=\"${100+180*ii}\" y=\"${180+170*(i2+i1)}\">${c2}</tspan>`;\n\t\t}\n\t\tii++;\n\t}\n\treturn rr;\n}\n\nlet [cb,cf] = colorz();\n\nlet bknm=String(this.book.name).replace(/\\.{2,}/,'…');\nbknm=bknm.match(/[a-z][a-z\\+一-ꀀ\\d…]+|[一-ꀀ\\da-z]{2,}(?:\\.\\d+[一-ꀀ]*|[…？])?|[一-ꀀ]/gi);\nlet hz='';\nlet ii=0;\n\nfor (char of bknm) {\n\thz += pingString(splitString(char) );\n\t}\n\nsvg = `<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5623\" width=\"100%\" height=\"100%\">\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<g transform=\"scale(0.4) translate(1600,2500)\">${Oranges}</g>\n<text fill=\"#${cf}\" stroke=\"#000000\" stroke-width=\"2\" font-weight=\"bold\" font-size=\"150\" text-anchor=\"middle\" dominant-baseline=\"middle\">\n${hz}\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\nreturn 'data:image/svg+xml;base64,'+svg;\n}\n",
    "lastUpdateTime": "1741451981378",
    "loginCheckJs": "//java.toast('登录检查:'+result);\nlet code = result.code();\nif (code == 403) {\n\tjava.toast('\\n访问被拒绝');\n\t}\nelse if (code == 520) {\n\tjava.toast('\\nIP被拉黑');\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"账号\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    },\n    {\n        name: \"💍注册\",\n        type: \"button\",\n        action: \"web()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"🔺登　录🔺\",\n        type: \"button\",\n        action: \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"♤登出\",\n        type: \"button\",\n        action: \"re()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n    \tname: \"💬说明\",\n    \ttype: \"button\",\n    \taction: \"sm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    \t},\n    \t{\n        name: \"🧾延迟测试\",\n        type: \"button\",\n        action: \"ceshi()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"⏭️启用下载\",\n        type: \"button\",\n        action: \"downl()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐打开本书↓\",\n        type: \"button\",\n        action: \"webb()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"❌屏蔽\",\n        type: \"button\",\n        action: \"hmd()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🧹清理\",\n        type: \"button\",\n        action: \"hmdre()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🆕版本更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"♻️同步书架\",\n        type: \"button\",\n        action: \"shujia()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书架\",\n        type: \"button\",\n        action: \"webbs(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"正则书名黑名单\",\n        type: \"text\"\n    },\n    {\n        name: \"正则书名白名单\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐查看日志\",\n        type: \"button\",\n        action: \"gitee()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"🌐网站选书\",\n        type: \"button\",\n        action: \"webbs(2)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🔁书名\",\n        type: \"button\",\n        action: \"shuming()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🗻净化封面\",\n        type: \"button\",\n        action: \"jhfm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书源介绍\",\n        type: \"button\",\n        action: \"java.startBrowser('https://洛娅橙.duckdns.org/#八叉','介绍');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🤔反馈\",\n        type: \"button\",\n        action: \"java.startBrowser('https://github.com/Luoyacheng/yuedu/issues','8x反馈');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"封面背景颜色\",\n        type: \"text\"\n    },\n    {\n        name: \"封面字体颜色\",\n        type: \"text\"\n    }\n]",
    "loginUrl": "nn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\nlet rr=java.connect('https://www.8xsk.org/');\nlet ur=(rr.body().match(/电脑主站[^\"]+\\\"([^\"]+)\\\"/)||['',''])[1];\nlet x = cache.get('8xbl1');\nif (ur == '') {\n\tjava.longToast(\"书源地址获取失败💔\");\n\tsource.setVariable(x);\n\t}\nelse {\n\tif (ur != x) {\n\t\t\tjava.log(\"八叉源地址更新：\"+ur);\n\t\t\tjava.longToast(\"🎉书源地址已更新\");\n\t\t\tcache.put('8xbl1',ur);}\n\t\telse {java.put(\"bj1\", 1);}\n\t\t\tsource.setVariable(ur);\n\t\t\tnn = ur;\n\t}\n}\n\nfunction login(){}\r\nfunction Login(){\n\tjava.longToast('\\n正在登录...\\n稍等一下');\n\tsource.removeLoginHeader();\n//\tcookie.removeCookie(nn);\n\tlet wbjs=`\n\t\tconst inpt = document.querySelector('input[name=\"checkcode\"]');\n\t\tconst oCode = inpt.getAttribute(\"onfocus\");\n\t\tconst url=oCode.match(/src\\\\s*=\\\\s*[\"']([^\"']+)/)[1];\n\t\turl\n`;\n    let url0=java.webView(null,nn,wbjs);\n    let code=java.getVerificationCode(url0);\n    let ck = cookie.getCookie(nn);\r\n    let url = nn+'/login.php';\r\n    let un = result['账号'];\r\n    let pw = result['密码'];\r\n    let time = new Date().getTime();\n    let body = `username=${un}&password=${pw}&checkcode=${code}&usecookie=1&act=login&jumpreferer=1&t_btnlogin=&ajax_request=${time}`;\n\r\n    let headers = {\r\n        'referer': nn,\n        \t'user-agent': ua,\n        \t'x-requested-with': x_r_w,\n        \t'sec-ch-ua-platform': s_c_u_p,\n        \t'cookie': ck\r\n    };\n    if (un!=''&&pw!='') {\n    let cookie1 = java.post(url,body,headers).cookies();\n    let ck = cookie.mapToCookie(cookie1);\n    //处理cookie格式\r\n    source.putLoginHeader(ck);\n  //  cookie.removeCookie(nn);\n    let i = String(ck).includes(\"jieqiUserInfo\");\n    //会存入登录信息，无需点✓\r\n    if (i) {source.putLoginInfo(JSON.stringify(result));java.toast(\"登录成功，VIP模式💎\");}\r\n    else java.toast(\"登录失败，访客模式🔒\");\n    } else {java.toast(\"💔账号和密码不能为空\");}\n\r\n}\r\n\r\nfunction web(){\r\n    let url = nn.replace('www.','') + '/register.php';\n    cookie.removeCookie(url);\r\n    java.startBrowser(url, '八叉注册');\r\n}\n\nfunction ceshi(){\n\t['　　　','·　　','··　','···'].forEach((_,i) => {java.toast('\\n\\n测试中'+_+'\\n');Packages.java.lang.Thread.sleep((3-i)*100);}); //然并卵的动画(但是好看)\n\ttry {\n  const startTime=new Date().getTime();\n\tjava.head(nn,{\t'user-agent': ua});\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime) / 1000;\n\tspeed = speed.toFixed(2);\n\tjava.toast('\\n\\n延迟：'+speed+'秒\\n');\n\t} catch(err) {java.longToast(err);}\n\r\n}\n\n\r\nfunction re(){\n\t//输出一份数据到日志，以备需\n\tjava.log('\\n账号：'+result['账号']+'\\n密码：'+result['密码']);\n\t//消除相应数据\r\n    cookie.removeCookie(nn);\n    source.removeLoginHeader();\n    result['账号']=result['密码']='';\n    source.putLoginInfo(JSON.stringify(result));\n    cache.deleteMemory('8xid');\n    java.toast(\"回到访客模式🔒\");\r\n}\n\r\nfunction sm(){\nlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\nlet ss = String(source.bookSourceComment).match(/^[^┘]+┘/);\nlet cki = String(source.getLoginHeader()).includes(\"jieqiUserInfo\");\n    let ms= \"访客模式🔒\";\n    if (cki != '') {\r\n        ms = \"VIP模式💎\";\r\n    }\r\nlet tt = `\n网址：${nn}　　 \n模式：${ms}　　　　　　   \n版本：${banben}　　　　　　　　　　\n\n${ss}`;\n    java.longToast(tt);\r\n}\nfunction webck(){\n\tlet nnm=nn.replace('www.','');\n\tlet ck=source.getLoginHeader()||'';\n\tcookie.replaceCookie(nnm,ck);\n\treturn nnm;\n\t}\nfunction webb(){\n\tlet id = cache.getFromMemory('8xid');\n  if (id) {\n  \tid=Object.keys(id)[0];\n  \tlet nnm=webck();\n   java.startBrowser(`${nnm}/book/${id}.html`,'八叉');\n   } else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n}\n\nfunction webbs(x){\n\tlet nnm=webck();\n\tif (x==1) {nnm+='/modules/article/bookcase.php';}\n\tlet wr=java.startBrowserAwait(nnm,'web',false).body();\n\tlet bkid=(wr.match(/https.+\\/book\\/(\\d+).*\\.html/)||['',''])[1];\n\tlet url = \"legado://import/addToBookshelf?src=\"+nn+\"/book/\"+bkid+\".html,{origin:'https://洛娅橙.八叉书库'}\";\n\tif (bkid!='') java.openUrl(url);\n}\n\nfunction hmd(){\n\tlet id = cache.getFromMemory('8xid');\n\tif (id) {\n\tlet hmd = cache.get('8xhmd')||'{}';\n\thmd = JSON.parse(hmd);\n\tlet idd = Object.keys(id)[0];\n\tif (idd in hmd) {\n\t\tdelete hmd[idd];\n\t\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n移除黑名单😅');\n\t\t}\telse {\n\thmd = Object.assign({},hmd,id);\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n加入黑名单😤');}\n\t\n\t} else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n\t\n}\n\nfunction hmdre(){\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet ss=Object.entries(hmd);\nlet [cb,cf] = colorz();\nlet svg=`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n<style>\ntext {\n\twhite-space: pre;\n\tword-wrap: break-word;}\n</style>\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<text fill=\"#${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\">\n<tspan x=\"50%\" dy=\"30%\" font-size=\"100\">\n是否清空黑名单<tspan font-size=\"30\">（${ss.length}）</tspan>\n</tspan>\n<tspan x=\"42%\" dy=\"25%\" font-size=\"60\">输入“确认”进行清空</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入“名单”打印一份名单到日志</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入书籍ID单独移出黑名单<tspan font-size=\"30\">(名单查看)</tspan></tspan>\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\n\ntry {\n//拦截验证码报错\nlet ysr=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\nPackages.java.lang.Thread.sleep(100);\nif (ysr=='确认') {\n\tcache.delete('8xhmd');\n\tjava.toast('\\n已清空');\n}\nelse if (ysr=='名单') {\n\tjava.log('\\n💔8x黑名单：\\n'+ss.join('\\n'));\n\tcache.put('8xbff',source.getLoginInfo());\n\tcache.put('8xbff2',source.getLoginHeader());\n}\nelse if (/\\d{3,}/.test(ysr)) {\n\tif (ysr in hmd) {\n\tjava.toast('\\n已将书籍：'+hmd[ysr]+'\\n移除黑名单');\n\tdelete hmd[ysr];\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t} else {java.toast('移出失败');}\n}\nelse if (ysr=='恢复') {\n\tlet ryr=cache.get('8xbff');\n\tlet ryr2=cache.get('8xbff2');\n\tsource.putLoginInfo(ryr);\n\tsource.putLoginHeader(ryr2);\n}\n\n} catch(err) {}\n}\n\nfunction downl() {\nlet dn = source.get('8xdn');\nif(dn!=1) {source.put('8xdn',1);java.toast('已支持下载');}\nelse {source.put('8xdn',0);java.toast('已优化加载');}\n\t}\nfunction shujia() {\nlet dn = source.get('8xsj');\nif(dn!=1) {source.put('8xsj',1);java.toast('🟢已启用同步网站书架');}\nelse {source.put('8xsj',0);java.toast('⚫已关闭同步网站书架');}\n\t}\nfunction shuming() {\nlet sm = source.get('8xsm');\nif(sm!=1) {source.put('8xsm',1);java.toast('🟢书名跟随更新');}\nelse {source.put('8xsm',0);java.toast('⚫书名保持初始');}\n\t}\nfunction jhfm() {\nlet jhf = source.get('8xjhf');\nif(jhf!=1) {source.put('8xjhf',1);java.toast('😈净化封面');}\nelse {source.put('8xjhf',0);java.toast('😍显示封面');}\n\t}\n\nfunction gitee() {\njava.startBrowser(`https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json,{\n\t\t'headers': {\n\t\t\t'User-Agent': 'Mozilla/5.0 (Linux; Android 14)'}\n\t\t\t}`,'日志');\n}",
    "respondTime": 9789,
    "ruleBookInfo": {
      "author": "",
      "canReName": "",
      "coverUrl": "class.divbox cf@img.0@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "init": "<js>\n//重定向和导入书架处理\nlet i = String(book.bookUrl).includes('https:/');\nif (i) {\n\tbook.bookUrl = `data:;base64,${java.base64Encode(baseUrl.replace(/,{o.+/,''))},{'type':''}`;\n\t}\n\n//告诉目录是由详情来的\njava.put('sx1',1);\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\n//发书评功能\nlet bkbl = book.getVariable(\"custom\");\n//解书籍地址\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet bkid = (mlj.match(/book\\/(\\d+)/)||['',''])[1];\n//↑获取书id\njava.put('bkid',bkid);\n\nif (bkbl=='🔒'||bkbl=='') {\n//带🔒或书籍变量为空会经过这里\n//处理加书架功能\nlet sj=java.get('sj');\nlet sj2=source.get('8xsj'); //启用同步的标识\nif (sj=='2'&&sj2=='1') {java.put('sj',3);tbshujia(nn,bkid);}\nelse if (sj=='1') {java.put('sj',2);}\n\n\t}\nelse if (bkbl=='目录') {\n\t//清空最新章储存强制刷新目录\n\tjava.put('8xzx','');\n\t//清空输入的书籍变量\n\tbook.putCustomVariable('');}\nelse {\nlet pfurl = nn+'/modules/article/rating.php';\nlet plurl = nn+'/modules/article/reviews.php';\nlet ck = source.getLoginHeader()||'';\nlet cki = ck.match(/UserToken%3D([^%]+)/)||['',''];\ntk = cki[1];\n//ck = cookie.getCookie(nn);\n//↑获取链接和tk\n\nif (bkid != '' && tk != '') {\nlet tm = new Date().getTime();\nlet bkfs = (bkbl.match(/^(\\d|10)分$/) || ['','0'])[1];\nlet pfbody = `score=${bkfs}&id=${bkid}&ajax_request=${tm}`;\nlet plbody = `ptitle=&act=newpost&jieqi_token=${tk}&Submit=&pcontent=${bkbl}&aid=${bkid}&ajax_request=${tm}`;\n\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': mlj,\n        'cookie': ck\r\n    };\nif (bkfs != 0) {url=pfurl;body=pfbody;}\nelse {url=plurl;body=plbody;}\n//清空输入的书籍变量\nbook.putCustomVariable('');\nlet by = java.post(url,body,headers).body();\njava.longToast(\"\\n\"+java.htmlFormat(by));\n\t} else if (tk == '') {java.toast('未登录');}\n}\n\n//随机延时0-1秒\nlet tim = Math.floor(Math.random()*1001);\n//java.log('延时'+tim);\nPackages.java.lang.Thread.sleep(tim);\n\n//先发评论再访问刷新\nif (!i) {\n\tlet tt = java.hexDecodeToString(result);\n\t//不能直接访问tt，result无法改动\n\ttt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\n\tconst startTime=new Date().getTime();\n\tresult = java.ajax(nn+tt); //+\",{'webView': true}\"\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) {java.toast('\\n详情页访问延迟过长：'+speed.toFixed()+'秒');}\n\tjava.setContent(result);\n\t}\n\n//内容判断\nlet r = java.getString('@@meta[name=\"keywords\"]@content');\nlet name=String(r).replace(/\\, .+/,'');\nlet author=String(r).replace(/.+\\, /,'');\n\nif (name) {\n\tbook.name=String(book.name)||name;\n\tbook.author=String(book.author)||author;\n//放入书名\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n//放入ID和书名。正式版js语法报错点\ncache.putMemory('8xid',{[bkid]: book.name});\n\tif (book.name!=name) {\n\t\t\tlet sm=source.get('8xsm'),sm1=java.get('sm1');\n\t\t\t//sm功能标记，sm1判断标记\n\t\t\tif (sm1=='') {\n\t\t\t//可能源地址换新了，进行更新\n\t\t\tcache.put('8xbl1', source.getVariable() );\n\t\t\tsource.setVariable('');\n\t\t\tjava.put('sm1',1);\n\t\t\t} else if (sm=='1') {\n\t\t\t\tbook.name=name;\n\t\t\t\tjava.toast(\"已自动更新书名\");\n\t\t\t} else if (sm1=='1') {\n\t\t\t\tjava.longToast(\"详情页获取的书名：\\n《\"+name+\"》\");\n\t\t\t\tjava.log(\"书名：\"+name);\n\t\t\t\tjava.put('sm1',2);\n\t\t\t}\n\t\t\t\n}\telse if (book.author!=author) {java.log(\"获取的作者不同，作者：\"+author);} //仅输出日志\n\t\n\t//书名和作者正常由此过\n\t}\nelse {\n\t//书名加载失败\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\tjava.toast(\"详情页加载失败，请刷新重试\");\n}\n\tresult\n</js>",
      "intro": "{{\n//书名过长时在简介显示\nlet length = 0;\nlet fuhao = ',.?!:;()[]\"';\n\nfor (char of String(book.name)) {\n\tif (fuhao.includes(char) ) length += 0.5;\n\telse length += 1;\n\t}\n//大于18个全角字符\nif (length > 18) '《'+book.name+'》'\nelse '&#10;'\n}}\n{{\nlet zx = java.getString('class.divbox@h3@a@text');\nlet temp=java.getStringList('class.tabcontent@class.tabvalue.1@td[0:3,9,10]@text');\nrr=Object.values(temp);\n//处理rr\n[rr[0], rr[2]] = [rr[2], rr[0]];\nrr[0] = '最新：' + String(zx).replace(/^正文|^\\s+/,'') + String(rr[0]).replace('最后更新：',' ').replaceAll('-','/') + String(rr[1]).replace(/连载状态：(.+)/,' ($1)');\ndelete rr[1];\nrr[2] = String(rr[2]).replace(/作品分类：\\s*/,'分类：') + String(rr[3]).replace(/作品性质：(.+)/,' ($1)');\ndelete rr[3];\nrr[4] = String(rr[4]).replace(/总点击数：\\s*/,'点击：') + String(rr[5]).replace(/本月点击：(.+)/,'　$1 (月)');\ndelete rr[5];\n//评分\nlet pf=java.getString('.ratediv@text');\nlet r0 = rr.join('\\n') + '\\n' + String(pf).replace(/评分：\\s*/,'评分：');\n//简介\nlet r1=java.getString('.tabcontent .tabvalue:eq(0) div@html');\nif (r1==\"\") {r1='';}\nelse {\n r1 = '\\n简介：\\n' + String(r1).replace(/[\\u3000\\u2003]{2}/g,'\\n').replace('「','“').replace('」','”').replace(/\\>\\s*内容简介/,'')\n\t}\n//评论\nlet r2=String(java.getString('#content>.c_row@html'));\nlet xi = book.getVariable(\"custom\")==\"🔒\";\nif (r2==''||xi) {r2='';}\nelse {\n\tr2 = r2.replace(/<div class=\"c_subject\"[\\S\\s]+?div>|<span class=\"fr\"[\\S\\s]+?span>|回复：.+/g,'').replace(/<p[> ].+<\\/p>/g,'﹍');\n\t//java.htmlFormat(r);\n\t}\n\tr0 + r1 + r2\n}}",
      "kind": "b:contains(标签：)~a@text\n<js>\nString(result).slice(1, -1).replace(/[\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "class.divbox@h3@a@text\n<js>\nlet zx = java.get('8xzx');\nif (zx==result) java.put('ww',1);\nelse {java.put('8xzx',result);java.put('ww',0);}\nresult\n</js>",
      "name": "",
      "tocUrl": "<js>\n//清除用户自定义简介\n//book.delete(); //如果更新发生异常会掉书籍信息，目录页取消书架\n//book.upCustomIntro(); //目录页生效\n\n//解书籍url为http\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nif (mlj.includes('search.php') ) {java.toast('书籍地址异常');}\n//转化目录url\nlet mll = mlj.replace('/book/', '/read/');\n`data:;base64,${java.base64Encode(mll)},{'type':''}`;\n</js>",
      "wordCount": ".tabcontent .tabvalue.1@html##全文字数：(\\d+)##$1###"
    },
    "ruleContent": {
      "content": "<js>\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nlet dn = source.get('8xdn');\nlet sleep = Packages.java.lang.Thread.sleep;\n//java.log(chapter.title+'inn：'+inn);\nif ((inn==-4||inn==4)&&dn!=1) {java.longToast('\\n使用下载需要在书源登录界面开启功能\\n建议预下载设定不要大于3');}\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\nlet tim = Math.floor(Math.random()*401);\nlet ii = 1;\n//手动限制并发,下载时(0-40秒随机)\n\nswitch(inn) {\n\tcase 0: break;\n\tcase 1: sleep(1500+tim); break;\n\tcase 2: sleep(4500+tim); break;\n\tcase 3: sleep(7500+tim); break;\n\tcase -1: sleep(3000+tim); break;\n\tcase -2: dn==1 ? sleep(6000+tim) : ii=0;break;\n\tcase -3: dn==1 ? sleep(9000+tim) : ii=0;break;\n\tdefault: dn==1 ? sleep(tim*100) : ii=0;break;\n}\n\n//延时结束\n//java.log(chapter.title+'inn：'+inn+'延时结束');\nlet bkid = java.get('bkid'); //两个putm用\n\nif (inn==0||inn==1) {\n//放入书名和id\ncache.putMemory('8xid',{[bkid]: book.name});\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n}\n\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,nn);\n//java.log('正文地址：'+tt);\nlet ml = String(book.tocUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet ck0 = source.getLoginHeader();\nlet headers0 = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': mlj,\n        'cookie': ck0\r\n    };\n\nlet getr;\nif (ii) {\n//↓第一次访问正文\ntry {\nconst startTime=new Date().getTime();\ngetr = java.get(tt,headers0);\n//java.log(chapter.title+'inn：'+inn+'访问结束');\nconst endTime=new Date().getTime();\n//判断访问情况，错误时把响应内容清除\nif (getr.statusCode() == 200) {\n\tresult = getr.body();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) java.toast('\\n正文页访问延迟过长：'+speed.toFixed()+'秒');\n\t} else {java.toast('\\n正文链接响应码错误，inn='+inn);result='';}\n//复原手机版链接，干掉字数统计\nchapter.url = tt.replace('www.','');\n\n//拦截超时报错\n} catch (e) {if (/timeout/.test(e)) java.toast('正文超时');\njava.log('🍊正文出错：'+e);}\n// if ii 结束\n\t} else {result='';}\n//inn>1时为空，软件会自动重新获取\n\nlet rr = java.getString('class.mt mb@a@text||class.tc mb@a@text',result);\n\n//内容识别\nif (rr.includes(\"登录\") ) {\n\tjava.toast(\"💎请重新登录书源账号\");\n\tresult='';}\nelse if (rr.includes(\"充值\") ) {\nlet url = nn+'/modules/obook/buychapter.php';\nlet ck = source.getLoginHeader();\nlet tk = (ck.match(/UserToken%3D([^%]+)/)||['',''])[1];\nlet cid = tt.match(/cid\\=(\\d+)/)[1];\nlet body = `buytype=1&act=buy&jieqi_token=${tk}&cid=${cid}&submit=`;\nlet headers = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': tt,\n        'cookie': ck\r\n    };\n    \nlet vip = cache.getFromMemory('8xvip'+bkid);\nif (tk && nn&&vip!=1) {\n\t//标识本书准备请求VIP，防其它章节请求\n\tcache.putMemory('8xvip'+bkid,1);\n\tsleep(600-tim);\n\tlet pt = java.post(url,body,headers);\n\tlet lc = pt.header(\"location\");\n//\tjava.toast(\"🔓已购买\");\n\t//重新解析正文\n\tresult = java.ajax(lc);\n\tresult = java.getString('#content,#acontent@html',result);\n\t} else {java.longToast(\"💔VIP内容获取失败\");\n\tresult='';}\n\n}\nelse {\n//无VIP登录，正常直接加载\nresult = java.getString('#content,#acontent@html',result);\n}\n//检查\nif ([39,339].includes(cin)&&Math.abs(inn)<4) gengxin();\nresult\n</js>",
      "imageStyle": "",
      "nextContentUrl": "",
      "payAction": "",
      "replaceRegex": "##八叉书库|八叉~书库|八叉书[,~]库|(?:833330|8xsk)\\.(?:xyz|org)|(?:833330|8xsk|八叉)([^\\.])(?:xyz|yxz|org|书库)|八~叉|书~库##$1",
      "sourceRegex": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "td.2@text||span:contains(作者：)+span@text\n<js>\nif (result == '[email protected]') {\n\tlet hex = java.getString('.__cf_email__.0@data-cfemail');\n\tresult = decodeEmail(String(hex),0);\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.put('sj',3); //标识已经同步了书架，\n\t//我的书架无作者信息，延时让提示先显示\n\t\tPackages.java.lang.Thread.sleep(20);\n\tresult='';}\n\tresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\t\tresult = [];\n}\nelse if (baseUrl.includes('search.php?') ) {\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result = [];}\nelse {result = java.getElement('#jieqi_page_contents>div');}\n\t}\nelse if (baseUrl.includes('/book/') ){\njava.toast('暂不支持重定向结果');\nresult=[];\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t//我的书架\n\tlet ts= java.getString('table@caption@ownText');\n\tts=String(ts).replace(/，(.+)\\s*选择分组.*$/,'，\\n$1');\n\tjava.toast('\\n'+ts);\n\tresult = java.getElement('table tr:has(a)');\n\t}\nelse {\nresult = java.getElements('@@#jieqi_page_contents>tr||#content div[class=\"c_row cf\"]');\n}\nresult\n</js>",
      "bookUrl": "<js>\nif (baseUrl.includes('search.php?') ) {\t\n\trs = java.getString('class.c_subject@a.0@href');\n\t} \n\telse if (baseUrl.includes('/bookcase.php') ) {\n\t\t//我的书架需要转化链接\n\t\trs = java.getString('td.1@a.-1@href');\trs='https://8x/book/'+rs.match(/aid=(\\d+)/)[1]+'.html';}\n\telse {\n\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');\n\t}\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');\n\t}\nrr = String(rs).replace(/https\\:\\/{2}[A-z\\d\\.]+/, nn);\n\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "coverUrl": "<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') img=jinghuafm();\nelse {\n\nif (/articlelist|sort/.test(baseUrl)) {\n\timg = java.getString('img@src');\n\t}\nelse if (baseUrl.includes('search.php?') ) {\n\timg = java.getString(String(source.ruleSearch.coverUrl));\n\t}\nelse{\n\tid = java.getString('td.0@a.-1@href').match(/\\d+(?=\\.html)/);\n\nif (baseUrl.includes('/bookcase.php') ) {id = java.getString('td.1@a.-1@href').match(/aid=(\\d+)/)[1];}\n\n  if (id < 1000) n = 0;\n  else n = String(id).slice(0,-3);\nimg = `https://www.8xbook.com/files/article/image/${n}/${id}/${id}s.jpg`;\n}\n\n}\nimg\n</js>",
      "intro": "td.3@text||class.c_description@text\n<js>\nif (baseUrl.includes(\"top/words\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/goodnum\")) {'⠀\\n收藏数：'+result}\n//新书榜\nelse if (baseUrl.includes(\"top/newhot\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n点击数：'+result}\nelse if (baseUrl.includes(\"top/signtime\")) {\n  let t = parseInt(result)*1000;\n  let time = java.timeFormatUTC(t,\"⠀\\n签约时间：yy/MM/dd HH:mm:ss\",8*60*60*1000);\n  time}\nelse if (baseUrl.includes(\"top/lastupdate\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/postdate\")) {'⠀\\n入库时间：'+result}\nelse if (baseUrl.includes(\"top/allvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n总点击：'+result}\nelse if (baseUrl.includes(\"top/monthvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n月点击：'+result}\nelse if (baseUrl.includes(\"top/weekvisit\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n周点击：'+result}\nelse if (baseUrl.includes(\"top/allvote\")) {'⠀\\n总推荐：'+result}\nelse if (baseUrl.includes(\"top/monthvote\")) {'⠀\\n月推荐：'+result}\nelse if (baseUrl.includes(\"top/weekvote\")) {'⠀\\n周推荐：'+result}\nelse if (/articlelist|sort|search\\.php/.test(baseUrl)) {\n//含简介(搜索会经此)\nresult.replace('「','“').replace('」','”').replace(/\\s+/g,' ')}\nelse {''}\n</js>",
      "kind": "<js>\nif (baseUrl.includes('search.php?') ) {java.getStringList(String(source.ruleSearch.kind));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getStringList('td.4@text');}\nelse {java.getStringList('td[4,5]@text||span:contains(更新：)+span@text||a486@time');}\n</js>",
      "lastChapter": "<js>\nif (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.lastChapter));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getString('td.2@a.-1@text');}\n\telse {java.getString('td.1@a.-1@text||class.c_subject@a.-1@text');}\n</js>",
      "name": "<js>\nif (baseUrl.includes('search.php?') ) {\nresult=String(java.getString('.c_subject@text')).replace(/\\\"/g,'');\n//获取id目的\nrs = java.getString('class.c_subject@a.0@href');\n\t}\n\telse {\n\t\tresult =  java.getString('td.0@a.-1@text||class.c_subject@a.1@text||td.1@a.-1@text');\n\t\t//获取id目的\n\t\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');}\n//||td.0@input@value书架的书不处理屏蔽黑名单，正则黑名单会\n\n//获取id，黑名单时书名为空\nlet id = (rs.match(/book\\/(\\d+)/)||['','lyc'])[1];\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "<js>\nif (/articlelist|sort/.test(baseUrl)) {\n  java.getString('span:contains(字数：)+span@text')\n}\nelse if (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.wordCount));\n\t}\n</js>"
    },
    "ruleSearch": {
      "author": "span:contains(作者：)+span@text",
      "bookList": "<js>\njava.setContent(cache.get('8xss1') );\ncache.delete('8xss1');\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result=[];}\nelse {\n\tresult = java.getElement('#jieqi_page_contents>div');\n}\nresult\n</js>",
      "bookUrl": "class.c_subject@a.0@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`\n</js>",
      "checkKeyWord": "作者：棺材",
      "coverUrl": ".fl img@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "intro": ".c_description@text\n<js>\nresult.replace('「','“').replace('」','”').replace(/\\s/g,' ')\n</js>",
      "kind": "span:contains(更新：)+span@text&&span:contains(关键字：)+span@text\n<js>\nString(result).replace(/[\\[\\]\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "span:contains(最新章节：)+span@text",
      "name": ".c_subject@text\n<js>\n//获取id，黑名单时书名为空\nlet id = java.getString('class.c_subject@a.0@href');\nid = id.match(/book\\/(\\d+)/)[1];\n//java.log(result); //输出书名\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "span:contains(字数：)+span@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\nlet sj=java.get('sj');\nif (sj=='') java.put('sj',1); //书架标识\nlet ww = java.get('ww'),\nlyc = java.get('lyc'),\nsx1 = java.get('sx1'); //ww是否有新章，sx刷新标识从目录来(已在书架才会触发)\njava.put('sx1',0); //还原详情到目录标识\nlet sj2=source.get('8xsj'); //启用同步的标识\nlet bkid=java.get('bkid');\n\nif (sx1!='1') {\n\t let baxtime = cache.getFromMemory('baxtime');\n\t if (baxtime<Date.now()) baxtime=Date.now();\n\t baxtime+=4000;\n\tcache.putMemory('baxtime',baxtime);\n\twhile(Date.now()<baxtime) {\n\tPackages.java.lang.Thread.sleep(4100);}\n\t}\nif (sj!='3'&&sx1!='1'&&sj2=='1'&&bkid!='') {java.put('sj',3);tbshujia(nn,bkid);}\n//不为3未加书架，不为1不过详情，为1开启功能，且参数不为空\nif (ww!='1' || lyc=='' || sx1!='1') {\nlet tim = Math.floor(Math.random()*1501);\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\nPackages.java.lang.Thread.sleep(tim);\nconst startTime=new Date().getTime();\nresult = java.ajax(nn+tt);\nconst endTime=new Date().getTime();\nlet speed = (endTime - startTime)/1000;\nif (speed>39) {java.toast('\\n目录页访问延迟过长：'+speed.toFixed()+'秒');}\n//缩减储存\nresult=java.getString('.index@all',result);\njava.put('lyc',result);\n} else {result=lyc;}\njava.setContent(result);\nresult=java.getElement('.index dd, .index dt');\n</js>",
      "chapterName": "text##八叉书库|833330\\.xyz|八叉书[。·]库|8xsk?[。·]org|八叉~书库|八~叉书~库",
      "chapterUrl": "a@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`;\n</js>",
      "formatJs": "",
      "isPay": "",
      "isVip": "",
      "isVolume": "dt@text",
      "preUpdateJs": "",
      "updateTime": "{{@@dd@a@title##\\d{1,2}\\:\\d{1,2}更新，共(\\d+字).*## $1}}\n{{@@dd@em@text##.+##💎}}"
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\nnn = String(source.getVariable()).replace(/\\/$/,'');\n//cookie.removeCookie(nn);\nlet url = `${nn}/modules/article/search.php`;\ntry {\n\tif (key.startsWith('书名：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=articlename&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('作者：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=author&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('标签：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=keywords&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (page == 1) {\n\t\tftsm();\n\t\tlet body = `searchtype=all&searchkey=${key}&act=search&submit=`;\n\tss = java.post(url,body,{\t'User-Agent': ua});\n\tkey='';\n\t}\n\t\n\telse {\n\t\turl +=\t`?searchkey=${key}&searchtype=all&page=${page}`\n\tss = java.get(url,{\t'user-agent': ua});\n\t}\n\ncode = ss.statusCode();\nif (code == 302) {\n\t//重定向\n\tss.header(\"location\");\n\t}\nelse if (code == 200) {\n\tcache.put('8xss1', ss.body() );\n\t`data:;base64,${java.base64Encode(nn)},{'type':''}`;\n\t}\nelse if (code == 520) {\n\tjava.toast(\"💔IP被拉黑\");\n\t}\nelse {\n\tjava.toast(\"💔搜索响应码异常\");\n\t}\n\n\n} catch(err) {\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\turl\n\t}\n\n</js>",
    "variableComment": "♦源变量：\n　 当前书源使用的网址\n　 可点击发现页版本号手动刷新\n\n♦书籍变量：\n　 ①填写  🔒 并刷新，关闭本书评论显示\n　 ②填写“目录”并刷新，强制刷新目录\n　 ③填写分数并刷新，使用分数进行评分\n　 ④填写其它并刷新，内容作为评论发送\n分数格式示意“1分”“2分”…“10分”\n\n㊟详情页检测到有更新内容时才刷新目录(书架刷新不影响)\n\n！注意区分源变量和书籍变量\n",
    "weight": 0
  },
  {
    "bookSourceComment": "\n\n可下载可在线观看,下载需要改成【文件】\n@天天的鸟蛋蛋：修复搜索\n原来的源只能用【发现】，\n我发现手机版能【搜索】，\n电脑版【搜索】找不到【列表】，\n于是就用手机版的【搜索】顶替电脑版的【搜索】。\n2025/3/5 更新优化搜索加入搜索下一页 优化，发现",
    "bookSourceGroup": "下载,在线,💐 女频,搜索失效",
    "bookSourceName": "💐 爱久久小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.jjjjxsw.com",
    "bookUrlPattern": "http://www.jjjjxs.com/txt/\\d+.html",
    "customOrder": 1203,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\n    \"title\":\"女生\",\n    \"url\":\"/e/action/toplist.php?page={{page-1}}&class=1\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":1\n    }\n  },\n  {\n    \"title\":\"男生\",\n    \"url\":\"/e/action/toplist.php?page={{page-1}}&class=2\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":1\n    }\n  },\n  {\n    \"title\":\"耽美\",\n    \"url\":\"/e/action/toplist.php?page={{page-1}}&class=3\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":1\n    }\n  },{\"title\":\"最新上传\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"现代\",\"url\":\"/txt/young/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/txt/wuxia/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/txt/xuanhuan/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/txt/kongbu/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"架空\",\"url\":\"/txt/lsjs/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"网游\",\"url\":\"/txt/juben/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"总裁\",\"url\":\"/txt/qinggan/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"耽美\",\"url\":\"/txt/dmtr/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/txt/tiexue/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/txt/chuanyue/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"异能\",\"url\":\"/txt/dushi/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"重生\",\"url\":\"/txt/chongshengxiaoshuo/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/txt/tongrenxiaoshuo/<,index_{{page}}.html>\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"人气最高\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"现代\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=9&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=10&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=11&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=12&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"架空\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=14&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"网游\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=16&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"总裁\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=37&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"耽美\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=41&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=42&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=47&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"异能\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=48&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"重生\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=49&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=76&line=10&tempid=3&ph=1&andor=and&orderby=2&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"收藏最多\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"现代\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=9&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=10&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=11&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=12&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"架空\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=14&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"网游\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=16&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"总裁\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=37&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"耽美\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=41&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=42&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"穿越\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=47&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"异能\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=48&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"重生\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=49&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"同人\",\"url\":\"/e/action/ListInfo.php?page={{page-1}}&classid=76&line=10&tempid=3&ph=1&andor=and&orderby=3&myorder=0\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}},{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexBasisPercent\":0.2,\"layout_flexGrow\":1}}]",
    "lastUpdateTime": "1741110379831",
    "respondTime": 188879,
    "ruleBookInfo": {
      "author": ".downInfoRowL@li.0@a@text",
      "coverUrl": ".downInfoRowL@img@src##\\?.*",
      "downloadUrls": ".downAddress_li@a@href\n<js>\nvar url=book.origin+result[0];\nresult=java.ajax(url);\nresult;\n</js>\na.22@href",
      "intro": "{{@@[name=\"description\"]@content##简介:.*|,|，##\n}}\n简介：{{@@#mainSoftIntro@html}}##(^|[。！？]+[”」）】]?)##$1<br>",
      "kind": ".downInfoRowL@.strong.0@text&&.downInfoRowL@li.1:5:6@textNodes##小说",
      "lastChapter": "",
      "name": "id.downInfoArea@h1@text##《|》",
      "tocUrl": ".yuedu@a@href##1\\.html|(?<=read)/\\d+",
      "wordCount": ".downInfoRowL@li.2@textNodes##(.*?) (k|m|K|M)B##$1$2"
    },
    "ruleContent": {
      "content": "#view_content_txt@html",
      "nextContentUrl": "text.下一页@href||text.下一@href",
      "sourceRegex": ".*\\.(txt)",
      "title": ""
    },
    "ruleExplore": {
      "author": ".mainGreen@text##.*作者.|\\s写作.*",
      "bookList": ".listbg",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": "div.1@text",
      "kind": ".mainGreen@text&&.oldDate@text&&.newDate@text##.*进度.|\\s文件.*|\\[|\\]",
      "name": "a.1@text",
      "wordCount": ".mainGreen@text##.*大小.|\\s下载.*|\\s书籍.*"
    },
    "ruleSearch": {
      "author": "span.2@text",
      "bookList": "ul@li@.list_a",
      "bookUrl": "a.1@href@js:##.+\\D((\\d+)\\d{3})\\D##http://www.jjjjxs.com/txt/$1.html###",
      "checkKeyWord": "",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": "span.3@a@text&&",
      "lastChapter": "",
      "name": "a.1@text",
      "wordCount": "span.3@textNodes##\\[\n\\] 大小:(.*) (k|m|K|M)B##$1$2###"
    },
    "ruleToc": {
      "chapterList": ".view_content_list@li@a",
      "chapterName": "text##节##页@js:##{{book.name}}",
      "chapterUrl": "href",
      "formatJs": ""
    },
    "searchUrl": "https://m.jjjxsw.com/e/search/index.php,{\n  \"body\": \"show=writer%2Ctitle&keyboard={{key}}&Submit22=%E6%90%9C%E7%B4%A2\",\n  \"method\": \"POST\"\n}\n@js:\njava.webView(null,baseUrl,null)\nurl=String(result).replace(\"{{key}}\",key);\nso=java.connect(url).raw().request().url();\nString(so).replace(/\\d+.html?$/, \"{{page-1}}.html\");",
    "weight": 0
  },
  {
    "bookSourceComment": "25.3.7\n需要挂梯\n书评有些恶臭，介意的请删掉书评相关代码",
    "bookSourceGroup": "🍒精选❶",
    "bookSourceName": "🍒小说狂人",
    "bookSourceType": 0,
    "bookSourceUrl": "https://czbooks.net/",
    "customOrder": -93912,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\n\nvar sort=[],\npush=(title,surl,size)=>sort.push({\n    title: title,\n    url: surl,\n    style: {\n      layout_flexGrow: 1,\n      layout_flexBasisPercent: size,\n     }\n  });\n\t\npush(\"༺ˇ»`ʚ排行榜ɞ´«ˇ༻\",null,1,1);\n\n[[\"精选日榜\",\"day\"],[\"精选周榜\",\"week\"],[\"精选总榜\",\"total\"]].map([title,uri]=>push(title, `https://czbooks.net/c/normal/${uri}/{{page}}`, 0.25));\n\n[[\"人气日榜\",\"day\"],[\"人气周榜\",\"week\"],[\"人气总榜\",\"total\"]].map([title,uri]=>push(title, `https://czbooks.net/c/all/${uri}/{{page}}`, 0.25));\n\n[[\"收藏日榜\",\"day\"],[\"收藏周榜\",\"week\"],[\"收藏总榜\",\"total\"]].map([title,uri]=>push(title, `https://czbooks.net/c/favorite/${uri}/{{page}}`, 0.25));\n\n[[\"完结日榜\",\"day\"],[\"完结周榜\",\"week\"],[\"完结总榜\",\"total\"]].map([title,uri]=>push(title, `https://czbooks.net/c/finish/${uri}/{{page}}`, 0.25));\n\n[[\"工口日榜\",\"day\"],[\"工口周榜\",\"week\"],[\"工口总榜\",\"total\"]].map([title,uri]=>push(title, `https://czbooks.net/c/hot/${uri}/{{page}}`, 0.25));\n\n[[\"原创最新\",\"new\"],[\"原创日榜\",\"day\"],[\"原创周榜\",\"week\"],[\"原创总榜\",\"total\"],[\"------\",],[\"原创完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/creator/${uri}/{{page}}`, 0.25));\n\n\npush(\"༺ˇ»`ʚ分类ɞ´«ˇ༻\",null,1,1);\n\n\n[[\"玄幻最新\",\"new\"],[\"玄幻日榜\",\"day\"],[\"玄幻周榜\",\"week\"],[\"玄幻总榜\",\"total\"],[\"------\",],[\"玄幻完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/xuanhuan/${uri}/{{page}}`, 0.25));\n\n[[\"言情最新\",\"new\"],[\"言情日榜\",\"day\"],[\"言情周榜\",\"week\"],[\"言情总榜\",\"total\"],[\"------\",],[\"言情完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/yanqing/${uri}/{{page}}`, 0.25));\n\n[[\"仙武最新\",\"new\"],[\"仙武日榜\",\"day\"],[\"仙武周榜\",\"week\"],[\"仙武总榜\",\"total\"],[\"------\",],[\"仙武完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/xianxia/${uri}/{{page}}`, 0.25));\n\n[[\"军史最新\",\"new\"],[\"军史日榜\",\"day\"],[\"军史周榜\",\"week\"],[\"军史总榜\",\"total\"],[\"------\",],[\"军史完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/lishi/${uri}/{{page}}`, 0.25));\n\n[[\"科游最新\",\"new\"],[\"科游日榜\",\"day\"],[\"科游周榜\",\"week\"],[\"科游总榜\",\"total\"],[\"------\",],[\"科游完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/wangyou/${uri}/{{page}}`, 0.25));\n\n[[\"灵异最新\",\"new\"],[\"灵异日榜\",\"day\"],[\"灵异周榜\",\"week\"],[\"灵异总榜\",\"total\"],[\"------\",],[\"灵异完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/lingyi/${uri}/{{page}}`, 0.25));\n\n[[\"女同最新\",\"new\"],[\"女同日榜\",\"day\"],[\"女同周榜\",\"week\"],[\"女同总榜\",\"total\"],[\"------\",],[\"女同完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/tongren/${uri}/{{page}}`, 0.25));\n\n[[\"原同最新\",\"new\"],[\"原同日榜\",\"day\"],[\"原同周榜\",\"week\"],[\"原同总榜\",\"total\"],[\"------\",],[\"原同完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/erciyuan/${uri}/{{page}}`, 0.25));\n\n[[\"耽美最新\",\"new\"],[\"耽美日榜\",\"day\"],[\"耽美周榜\",\"week\"],[\"耽美总榜\",\"total\"],[\"------\",],[\"耽美完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/danmei/${uri}/{{page}}`, 0.25));\n\n[[\"百合最新\",\"new\"],[\"百合日榜\",\"day\"],[\"百合周榜\",\"week\"],[\"百合总榜\",\"total\"],[\"------\",],[\"百合完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/baihe/${uri}/{{page}}`, 0.25));\n\n[[\"日系最新\",\"new\"],[\"日系日榜\",\"day\"],[\"日系周榜\",\"week\"],[\"日系总榜\",\"total\"],[\"------\",],[\"日系完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/japan/${uri}/{{page}}`, 0.25));\n\n[[\"奇冒最新\",\"new\"],[\"奇冒日榜\",\"day\"],[\"奇冒周榜\",\"week\"],[\"奇冒总榜\",\"total\"],[\"------\",],[\"奇冒完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/fanatsy/${uri}/{{page}}`, 0.25));\n\n[[\"电视最新\",\"new\"],[\"电视日榜\",\"day\"],[\"电视周榜\",\"week\"],[\"电视总榜\",\"total\"],[\"------\",],[\"电视完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/drama/${uri}/{{page}}`, 0.25));\n\n[[\"情工最新\",\"new\"],[\"情工日榜\",\"day\"],[\"情工周榜\",\"week\"],[\"情工总榜\",\"total\"],[\"------\",],[\"情工完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/herotic/${uri}/{{page}}`, 0.25));\n\n[[\"耽工最新\",\"new\"],[\"耽工日榜\",\"day\"],[\"耽工周榜\",\"week\"],[\"耽工总榜\",\"total\"],[\"------\",],[\"耽工完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/blerotic/${uri}/{{page}}`, 0.25));\n\n[[\"经典最新\",\"new\"],[\"经典日榜\",\"day\"],[\"经典周榜\",\"week\"],[\"经典总榜\",\"total\"],[\"------\",],[\"经典完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/classicbook/${uri}/{{page}}`, 0.25));\n\n[[\"推理最新\",\"new\"],[\"推理日榜\",\"day\"],[\"推理周榜\",\"week\"],[\"推理总榜\",\"total\"],[\"------\",],[\"推理完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/suspense/${uri}/{{page}}`, 0.25));\n\n[[\"女性最新\",\"new\"],[\"女性日榜\",\"day\"],[\"女性周榜\",\"week\"],[\"女性总榜\",\"total\"],[\"------\",],[\"女性完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/girl/${uri}/{{page}}`, 0.25));\n\n[[\"短篇最新\",\"new\"],[\"短篇日榜\",\"day\"],[\"短篇周榜\",\"week\"],[\"短篇总榜\",\"total\"],[\"------\",],[\"短篇完本\",\"finish\"]].map([title,uri]=>push(title, `https://czbooks.net/c/short/${uri}/{{page}}`, 0.25));\n\n\nJSON.stringify(sort);",
    "jsLib": "function method(result){ const { java, source, cookie } = this ;result=result.replace(/著/g,'着').replace(/仿真/g,'模拟');return java.t2s(result)}",
    "lastUpdateTime": "1741336007279",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "span.author@a@text",
      "coverUrl": ".thumbnail@img@src",
      "init": "<js>method(result)</js>",
      "intro": "&nbsp;🕰  更新：{{@@table@tbody@tr.-2@td.1@text}}\n\n👁  阅读：{{@@table@tbody@tr.2@td.1@text}}\n\n❤️  收藏：{{@@table@tbody@tr.1@td.1@text}}\n\n🏷  标签：{{@@ul.hashtag@li.item[:4]@a@text##\\n##·}}\n\n☘️  最新：{{@@#chapter-list@a.-1@text##正文卷.|正文.|VIP卷.|默认卷.|卷_|VIP章节.|免费章节.|章节目录.|最新章节.|[\\(（【].*?[求含理更谢乐发推票盟补加字].*?[】）\\)]}}\n\n📜  简介：\n{{@@.description@html}}\n\n{{'\\n'+'​'}}\n🍚  书评：\n👤 用户名：{{@@li.comment-item[:4]@text##\\n##<p>👤 用户名：}}\n<js>result\n.replace(/\\s(..)前/g,' \\n⏰ 时间：$1前')\n.replace(/\\s(\\d+)\\s/g,' 👍🏻 点赞：$1 \\n📖 评论：')\n.replace(/\\s・/g,' 📘章节：')\n</js>",
      "kind": "{{@@table@tbody@tr.0@td.1@text}}\n{{@@table@tbody@tr.-1@td.1@text}}\n{{@@table@tbody@tr.-2@td.1@text}}",
      "lastChapter": "{{@@#chapter-list@a.-1@text##正文卷.|正文.|VIP卷.|默认卷.|卷_|VIP章节.|免费章节.|章节目录.|最新章节.|[\\(（【].*?[求含理更谢乐发推票盟补加字].*?[】）\\)]}}•{{@@table@tbody@tr.-2@td.1@text}}\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二两三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "name": "span.title@text##《|》"
    },
    "ruleContent": {
      "content": "<js>method(result)</js>\n.content@html\n@js:result\n \t.replace(/着名/g,'著名')\n\t.replace(/土着/g,'土著')\n\t.replace(/原着/g,'原著')\n\t.replace(/名着/g,'名著')\n\t.replace(/着作/g,'著作')"
    },
    "ruleExplore": {
      "bookList": ""
    },
    "ruleSearch": {
      "author": ".novel-item-author@a@text",
      "bookList": "<js>method(result)</js>\nli.novel-item-wrapper",
      "bookUrl": "a.0@href",
      "checkKeyWord": "诡秘之主",
      "coverUrl": "img@src",
      "intro": "收藏：{{@@.nav@text##\\s.*}}\n观看：{{@@.nav@text##.*\\s}}",
      "kind": ".novel-item-date@text",
      "lastChapter": "{{@@.novel-item-newest-chapter@a@text##正文卷.|正文.|VIP卷.|默认卷.|卷_|VIP章节.|免费章节.|章节目录.|最新章节.|[\\(（【].*?[求含理更谢乐发推票盟补加字].*?[】）\\)]}}•{{@@.novel-item-date@text}}\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二两三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "name": ".novel-item-title@text"
    },
    "ruleToc": {
      "chapterList": "<js>method(result)</js>\n@css:\n.volume,.chapter-list>li\n\n@js:\nlist=[]\n$=result\nfor(i in $){\nif(String($[i]).match(/class=\"volume/)){\n\tt=String($[i].text()).replace(new RegExp(book.name,''),'');\n\t\tlist.push({\n\t\t\t\ttext: \"🏮〖\"+t+\"〗🏮\",\n\t\t\t\tvolume: true\n\t\t\t})\n\t}\nelse{\n\t\t$[i].select(\"a\").forEach(a=>{\n\t\t\t\tlist.push({\n\t\t\t\t\t\ttext: a.text(),\n\t\t\t\t\t\thref: a.attr(\"href\")\n\t\t\t\t\t})\n\t\t\t})\n\t}\n}\nlist",
      "chapterName": "text",
      "chapterUrl": "href",
      "isVolume": "volume"
    },
    "searchUrl": "s/{{key}}?q={{key}}",
    "weight": 0
  },
  {
    "ruleSearch": {
      "checkKeyWord": "我的",
      "bookList": "ul > a:nth-child(n+1)",
      "name": ".name@text",
      "intro": ".desc@text",
      "author": ".author@text",
      "kind": ".type@text",
      "wordCount": ".count@text",
      "coverUrl": ".lazy@src",
      "bookUrl": "ul > a:nth-child(n+1)@href"
    },
    "ruleBookInfo": {
      "name": ".cell > .line_1@text",
      "author": ".author:nth-child(2)@text",
      "kind": ".type > a@text",
      "wordCount": ".award@text",
      "intro": "#in-details@text",
      "lastChapter": "li:nth-child(1) > a > .line_1@text",
      "coverUrl": ".cover > .lazy@src",
      "tocUrl": ".title > a@href"
    },
    "ruleToc": {
      "chapterList": "li:nth-child(n+1)",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "nextTocUrl": ".next@href"
    },
    "ruleContent": {
      "content": "#main@html##小说免费阅读，请收藏　全本免费小说【qbmfxs.com】",
      "nextContentUrl": "a:nth-child(3)@href",
      "replaceRegex": "##.*本章未完|点击.*下一页.*|上一页|目录|下一页|继续阅读\n"
    },
    "ruleReview": [],
    "ruleExplore": [],
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.qbmfxs.com",
    "bookSourceName": "全本免费小说",
    "searchUrl": "search?kw={{key}}",
    "lastUpdateTime": "1741419927869"
  },
  {
    "bookSourceComment": "by天天的鸟蛋蛋\n阅读云（sososhu）搜索系列\n2025/3/5",
    "bookSourceName": "二次元小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.erciyan.com/",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "书库::/fenlei/<,{{page}}/>\n完本::/quanben/fenlei/<,{{page}}/>",
    "lastUpdateTime": "1741157595819",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "intro": "[property$=description]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property$=lastest_chapter_name]@content",
      "name": "[property$=book_name]@content"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "nextContentUrl": "text.下一页@href"
    },
    "ruleExplore": {
      "author": ".s4@text",
      "bookList": ".txt-list@ul@li",
      "bookUrl": "a@href",
      "kind": ".s5@text&&.s1@text##\\[|\\]",
      "lastChapter": ".s3@a@text",
      "name": ".s2@a@text"
    },
    "ruleSearch": {
      "author": "span@text",
      "bookList": "<js>\nif (result.match(/阅读云/)) {\n   u = baseUrl.split(',')[0]\n   cookie.removeCookie(u)\n   // java.startBrowserAwait(u, \"验证\")\n   java.webView(null, u, \"document.cookie\")\n   ck = cookie.getCookie(u)\n   head = JSON.stringify({ headers: { 'Cookie': ck } })\n   url = u + \",\" + head\n   result = java.ajax(url)\n}\nresult\n</js>\n.block > div > div:nth-child(n+1)",
      "bookUrl": "a@href",
      "coverUrl": "img@src",
      "intro": "dd@text",
      "name": "a@text"
    },
    "ruleToc": {
      "chapterList": ".section-list@li@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": "option@value"
    },
    "searchUrl": "https://www.sososhu.com/?site=2cyxswnet&q={{key}},{\n  headers: { \"User-Agent\": \"Mozilla/5.0 (Linux; Android 10; PACM00 Build/QP1A.190711.020) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.79 Mobile Safari/537.36\" }}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🙈",
    "bookSourceName": "🌈pixiv小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://洛娅橙.pixiv小说",
    "bookUrlPattern": "http://localhost/|https://www.pixiv.net/novel/series/\\d{3,}",
    "concurrentRate": "3/2000",
    "coverDecodeJs": "",
    "customOrder": -93825,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.0.1\";\nvar obj = {\n\t动态: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/novel/follow?restrict=public';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`},\n\t推荐: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/novel/recommended?include_privacy_policy=true&filter=for_android&include_ranking_novels=true';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`},\n\t收藏: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\tlet id = source.getLoginInfoMap().get('id');\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/user/bookmarks/novel?user_id='+id+'&restrict=public';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`,\n\t\t\"wb\": 1},\n\t追更: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/watchlist/novel';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl\n\t\t\t}}`}\n\t\n\t}\n\n\nvar sort = [];\npush = (title, url, size, wrap) => sort.push({\n    \"title\": title,\n    \"url\": url,\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: -1,\n      layout_wrapBefore: wrap ? true : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb);\n}\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n\tlet headers = gethd();\n\treturn JSON.stringify(headers);\n})();",
    "jsLib": "//参考自开源项目：pixez-flutter🙏\nsleep = Packages.java.lang.Thread.sleep;\nua = 'PixivAndroidApp/5.0.166 (Android 14; RMX3366)';\nappv = '5.0.166';\na_l = 'zh-CN';\n\nbiaoq = new RegExp('^(?:NTR|NTL|修仙|奇幻|后宫|纯爱|隐奸|乱伦|乱交|母女.?|母子|父女|幼女|姐弟|人妻|正太|足交|口交|肛交|丝袜|催眠|系统|原创|续写|软饭流|修罗场|规则怪谈|女性视角|性开放世界|奸尸|冰恋|.?重口)$','i');\n\nfunction timemd5(time) {\n\tconst {java, source} = this;\nlet salt = '28c1fdd170a5204386cb1313c7077b34f83e4aaf4aa829ce78c231e05b0bae2c';\nlet hash = java.md5Encode(time + salt);\n\treturn hash;\n}\n\n\nfunction gethd() {\n\tconst {java, source} = this;\nlet time = java.timeFormatUTC(Date.now(),\"yyyy-MM-dd'T'HH:mm:ss'+00:00'\",8*60*60*1000);\nlet hash = this.timemd5(time);\nlet atk = source.getLoginHeader()||'';\n\tif (atk) {atk = String('Bearer '+atk);}\n   let headers = {\n    'x-client-time': time,\n    \t'User-Agent': ua,\n    \t'accept-language': a_l,\n    \t'authorization': atk,\n    \t'app-os': 'Android',\n    \t'app-os-version': 'Android 14',\n    \t'app-version': appv,\n    'x-client-hash': hash,\n    'cookie': ''\n    \t }\n    \t return headers;\n}\n\nfunction leng(str) {\n\tlet length = 0;\n\tconst fuhao = ',.?!:;()[]\"';\n\tconst fuhao2 = '📘';\n\tfor (char of str) {\n\t\tif (fuhao.includes(char) ) length += 0.5;\n\t\telse if (fuhao2.includes(char) ) length += 2;\n\t\telse length += 1;\n\t\t}\n\t\treturn length;\n}\n\nconst imgoptions = {\n  headers: {\n    'User-Agent': 'PixivIOSApp/5.8.0',\n    'accept-encoding': 'gzip, br',\n    'referer': 'https://app-api.pixiv.net/',\n    'host': 'i.pximg.net'\n    }\n  };\n \nfunction copy(txt) {\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\nbody {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 60vh;}\n</style>\n</head>\n<body>\n<textarea id=\"copyt\" rows=\"3\">${txt}</textarea>\n<br>\n<button id=\"btn1\" onclick=\"copy()\">复制</button>\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", function () {\nconst textarea = document.getElementById(\"copyt\");\ntextarea.style.height = \"auto\";\ntextarea.style.height = textarea.scrollHeight + \"px\";});\nfunction copy() {\nconst cpt = document.getElementById(\"copyt\");\ncpt.select();\ndocument.execCommand(\"copy\");}\n</script>\n</body></html>`;\nthis.java.startBrowser(htm,'复制');\n\t}\n\n\nfunction lookc(lyc) {\nconst [title,uid,unm,uim,tags,caption,cdate,xh,sc,gk,sTitle,id,ugz] = lyc;\n//\tconst {java, source} = this;\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\twidth: 100%;\n\ttable-layout: fixed;\n\ttext-align: center;\n\tmargin: 0 auto;\n\tword-break: break-all;\n\t}\ntd img {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: contain;\n\t}\n.cap {\n\t text-align: left;\n\t text-indent: 2em;\n\t}\na {text-decoration: none;}\np {margin: 0.2em auto;}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<tr>\n<th colspan=\"6\">标题：<a href=\"https://www.pixiv.net/novel/show.php?id=${id}\">${title}</a></th>\n</tr>\n<tr>\n<td colspan=\"4\">\n作者：<a href=\"https://www.pixiv.net/users/${uid}\">${unm}</a>\n${ugz=='true' ? '<span style=\"font-size: 0.7em;\"> (已关注)</span>' : ''}\n</td>\n<td colspan=\"2\"><img src=\"${uim}\"></td>\n</tr>\n${sTitle!='' ? ('<tr><td colspan=\"6\">小说：《'+sTitle+'》'+'</td></tr>') : ''}\n<tr>\n<td>喜欢</td>\n<td>${xh}</td>\n<td>收藏</td>\n<td>${sc}</td>\n<td>观看</td>\n<td>${gk}</td>\n</tr>\n<tr>\n<td>时间</td>\n<td colspan=\"5\">${cdate}</td>\n</tr>\n<td>标签</td>\n<td colspan=\"5\">${tags}</td>\n</tr>\n${caption!='' ? ('<tr><td>简介</td><td class=\"cap\" colspan=\"5\">'+caption+'</td></tr>') : ''}\n</table>\n<br>\n<script>\n\n</script>\n</body></html>`;\n\nthis.java.startBrowser(htm,'信息');\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/pixiv小说/pixiv.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://github.com/Luoyacheng/yuedu/raw/main/书源/pixiv小说/pixiv.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/书源/pixiv小说/pixiv.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'px更新');\r\n}\nfunction fankui(){\tthis.java.startBrowser('https://github.com/Luoyacheng/yuedu/issues','px反馈');\n}",
    "lastUpdateTime": "1741195166582",
    "loginCheckJs": "//java.toast('登录检查：'+result);\n\nif (result.code() == 400) {\n\tsource.login();\n\tsleep(500);\n\tlet headers = gethd();\n\tresult = java.connect(result.url(),headers);\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"token\",\n        type: \"text\"\n    },\n    {\n        name: \"token说明\",\n        type: \"button\",\n        action: \"java.longToast(`\ntoken说明：\n填写该值后点击右上角√进行登录\n可以通过获取token按钮得到(不需要跳转app)\n阅读正式版无法支持获取token功能`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"获取token\",\n        type: \"button\",\n        action: \"Login()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"id\",\n        type: \"text\"\n    },\n    {\n        name: \"id说明\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：\n登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"搜索说明\",\n        type: \"button\",\n        action: \"java.longToast(`\n搜索说明：\n默认使用关键词搜索\n输入小说id号显示对应的小说\n输入“正文@许斌”搜索正文含许斌的小说\n输入“作者@69559022”搜索指定id作者的书`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n     {\n        name: \"↑追更该书\",\n        type: \"button\",\n        action: \"scz(3)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n     {\n        name: \"复制id\",\n        type: \"button\",\n        action: \"fuzhi(2)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"取消追更\",\n        type: \"button\",\n        action: \"scz(30)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"章节\",\n        type: \"text\"\n    },\n    {\n        name: \"↑收藏该章\",\n        type: \"button\",\n        action: \"scz(1)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n     {\n        name: \"详情\",\n        type: \"button\",\n        action: \"caption()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"取消收藏\",\n        type: \"button\",\n        action: \"scz(10)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"作者\",\n        type: \"text\"\n    },\n    {\n        name: \"↑关注作者\",\n        type: \"button\",\n        action: \"scz(2)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n     {\n        name: \"复制id\",\n        type: \"button\",\n        action: \"fuzhi(1)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"取消关注\",\n        type: \"button\",\n        action: \"scz(20)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"书名添加标识📘\",\n        type: \"button\",\n        action: \"gongcun()\"\n    },\n    \t{\n        name: \"版本更新\",\n        type: \"button\",\n        action: \"gengxin()\"\n    },\n    \t{\n        name: \"反馈\",\n        type: \"button\",\n        action: \"fankui()\"\n    }\n]",
    "loginUrl": "function gongcun() {\nlet gc = source.get('gc');\nif(gc!=1) {source.put('gc',1);java.toast('🟢已开启');}\nelse {source.put('gc',0);java.toast('⚫已关闭');}\n\t}\n\nfunction login() {\nlet time = java.timeFormatUTC(Date.now(),\"yyyy-MM-dd'T'HH:mm:ss'+00:00'\",8*60*60*1000);\nlet hash = timemd5(time);\n\tlet headers = {\n    'User-Agent': 'PixivAndroidApp/5.0.155 (Android 6.0; Pixel C)',\n    'content-type': 'application/x-www-form-urlencoded',\n    'x-client-hash': hash,\n    'accept-language': a_l,\n    'app-version': appv,\n    'app-os-version': 'Android 6.0',\n    'x-client-time': time,\n    'app-os': 'Android'\n  };    \n  let url = 'https://oauth.secure.pixiv.net/auth/token';\n  let Info = source.getLoginInfoMap();\n  \n  try {\n  let tk = Info.token;\n  let body = `client_id=MOBrBDS8blbauoSck0ZfDbtuzpyT&client_secret=lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj&grant_type=refresh_token&refresh_token=${tk}&include_policy=true`;\n\tlet rr = java.post(url,body,headers).body();\n\tlet atk = rr.match(/\"access_token\"[:\\s\"]+([^\"]+)/)[1];\n\tsource.putLoginHeader(atk);\n\tif (Info.id=='') {\n\t\tInfo.id = com.jayway.jsonpath.JsonPath.read(rr, \"$.user.id\");}\n\tsource.putLoginInfo(JSON.stringify(Info));\n\tjava.toast('\\n😆登录成功');\n\t} catch(err) {\n\t\tjava.toast('\\n💔登录失败');\n\t\tjava.log('px登录失败：'+err);\n\t\t}\n  \t//为了显示\n  \tsleep(600);\n\t}\n\nfunction scz(x) {\n\tlet headers = gethd();\n\tlet url = 'https://app-api.pixiv.net/';\n\tlet body,nm,tt,ttt;\n\tif (x==1) {\n\t url += 'v2/novel/bookmark/add';\n\t \tlet id = cache.get('pxid');\n\t \tif (id=='') ttt='请刷新章节';\n\t \tbody = 'novel_id='+id+'&restrict=public';\n\t \tnm = source.getLoginInfoMap().get('章节');\n\t \ttt='收藏';\n\t } else if(x==2) {\n\t \turl += 'v1/user/follow/add';\n\t \tlet uid = cache.get('pxuid');\n\t \tif (uid=='') ttt='请刷新章节或详情页';\n\t \tbody = 'user_id='+uid+'&restrict=public';\n\t \tnm = source.getLoginInfoMap().get('作者');\n\t \ttt='关注';\n\t \t} else if(x==10) {\n\t \turl += 'v1/novel/bookmark/delete';\n\t \tlet id = String(cache.get('pxid'));\n\t \tbody = id ? 'novel_id='+id : '';\n\t \tnm = source.getLoginInfoMap().get('章节');\n\t \ttt='取消收藏😅';\n\t \t} else if(x==20) {\n\t \turl += 'v1/user/follow/delete';\n\t \tlet uid = String(cache.get('pxuid'));\n\t \tbody = uid ? 'user_id='+uid : '';\n\t \tnm = source.getLoginInfoMap().get('作者');\n\t \ttt='取消关注😅';\n\t \t} else if(x==3) {\n\t \turl += 'v1/watchlist/novel/add';\n\t \tlet sid = cache.get('pxsid');\n\t \tif (sid=='') ttt='请刷新详情页';\n\t \tbody = 'series_id='+sid;\n\t \tnm = source.getLoginInfoMap().get('书名');\n\t \ttt='追更';\n\t \t} else if(x==30) {\n\t \turl += 'v1/watchlist/novel/delete';\n\t \tlet sid = String(cache.get('pxsid'));\n\t \tbody = sid ? 'series_id='+sid : '';\n\t \tnm = source.getLoginInfoMap().get('书名');\n\t \ttt='取消追更😅';\n\t \t}\n\n\ttry {\n\t\tif (ttt) {java.longToast(ttt);throw 't空';}\n\t\tif (!body) throw 'b空';\n\t\tlet jg = java.post(url,body,headers).statusCode();\n\t\tif (jg!=200) throw tt+'响应码异常';\n\t\telse java.longToast(`\\n已${tt}：\\n${nm}`);\n\t\t} catch(e) {\n\t\t\tif (!ttt) java.toast(`\\n${tt}失败`);\n\t\t\tjava.log(e);}\n\t}\n\n\nfunction Login() {\nsource.removeLoginHeader();\nlet rkey = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\nlet cv='';\nfor (let i = 0; i < 128; i++) {\n\tlet ra = Math.floor(Math.random()*rkey.length);\n\tcv+=rkey.charAt(ra);\n\t}\n\nlet aly = new JavaImporter(\nPackages.cn.hutool.crypto.digest.Digester,\nPackages.cn.hutool.core.codec.Base64,\nPackages.cn.hutool.crypto.digest.DigestAlgorithm);\nwith (aly) {\n\t//转ASCII数组\n\tlet asBs =  Packages.java.lang.String(cv).getBytes(\"US-ASCII\");\n\t//创建SHA256并计算\n\tlet digester = new Digester(DigestAlgorithm.SHA256);\n\tlet hashBs = digester.digest(asBs);\n\t//Base64URL编码并移除填充\n\tvar codeChallenge  = Base64.encodeUrlSafe(hashBs);\n}\n\nlet urllg =`https://app-api.pixiv.net/web/v1/login?code_challenge=${codeChallenge}&code_challenge_method=S256&client=pixiv-android`;\n\n//cookie.removeCookie('https://app-api.pixiv.net');\n//cookie.removeCookie('https://accounts.pixiv.net'); 异常时还是得手动清除内置浏览器\n\nlet wbua=java.getWebViewUA();\n\nlet bb=java.startBrowserAwait(urllg+`,{\nheaders:{\n\tUser-Agent: \"${wbua}\"\n\t}}`,'登录',false).body();\n\nlet code;\nif (bb.includes('<title>Online com')) {\nsleep(600);\njava.toast('稍等');\nlet over = java.webViewGetOverrideUrl(bb,'https://app-api.pixiv.net/','','pixiv:.*');\ncode = over.match(/code=([^&]+)/);\n}\n\nlet token;\nif (code) {\nlet tkurl = 'https://oauth.secure.pixiv.net/auth/token';\nlet headers = gethd();\nlet body = `code_verifier=${cv}&code=${code[1]}&grant_type=authorization_code&redirect_uri=https://app-api.pixiv.net/web/v1/users/auth/pixiv/callback&client_id=MOBrBDS8blbauoSck0ZfDbtuzpyT&client_secret=lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj&include_policy=true`;\nlet tkr = java.post(tkurl,body,headers);\njava.log(tkr.body())\ntoken = tkr.body().match(/refresh_token\":\"([^\"]+)/);\n}\n\nif (token) {\nlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>\nh2 {\n\ttext-align: center;\n\tline-height: 6;}\ntextarea {\n\tfont-size: 12px;\n\twidth: 96%;\n\tmargin: 10px 2%;\n\tpadding: 6px;}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;}\nbutton {\n\tbackground-color: rgb(76,175,80);\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\ttransition: font-size 0.3s;\n\tfont-size: 16px;}\n.an-s {\n\tfont-size: 12px;}\n.alert-overlay {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0, 0, 0, 0.6);\n\tdisplay: none;\n\tjustify-content: center;\n\talign-items: center;\n\tz-index: 9999;}\n/* 对话框主体 */\n.alert-box {\n\tbackground: rgb(232,234,246);\n\tpadding: 10px;\n\tborder-radius: 12px;\n\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n\tmin-width: 100px;\n\ttext-align: center;}\n</style></head>\n<body>\n<div class=\"alert-overlay\" id=\"alertO\">\n <div class=\"alert-box\">\n  <p>已复制到剪贴板：</p>\n  <p id=\"alertM\" style=\"font-size: 12px;\"></p>\n </div>\n</div>\n<h2>Token获取成功🥳</h2>\n<textarea readonly id=\"copyt\" rows=\"3\">${token[1]}</textarea>\n<p style=\"font-size: 12px;\">请复制粘贴到登录界面的token框，然后点击√进行登录</p>\n<div class=\"ann\">\n<button id=\"btn1\" onclick=\"copy()\">复制</button>\n</div>\n<script>\nfunction showAlert(txt, time) {\nconst overlay = document.getElementById('alertO');\nconst message = document.getElementById('alertM');\nmessage.textContent = txt;\noverlay.style.display = 'flex';\nif (time > 0) {\n\tsetTimeout(() => {\n\t\toverlay.style.display = 'none';\n\t\t}, time);\n\t}\n}\nfunction copy() {\nconst btn = document.getElementById('btn1');\nbtn.classList.add('an-s');\nconst cpt = document.getElementById(\"copyt\");\ncpt.select();\ntry {\n    const cpy = document.execCommand(\"copy\");\n    if (cpy.length<9) throw '异常';\n    showAlert(cpt.value, 1000);\n  } catch (e) {alert(\"复制失败，请手动复制\");}\nsetTimeout(() => {\n\tbtn.classList.remove('an-s');\n\t}, 450);\n}\n</script>\n</body></html>`;\n\njava.startBrowser(htm,'获取token');\njava.log(token[1]); //留一份到日志\t\n\t} else {sleep(700);java.toast('获取失败😭');}\n}\n\nfunction fuzhi(x) {\n\tif (x==1) {\n\tlet uid = cache.get('pxuid');\n\tcopy(uid);}\n\tif (x==2) {\n\tlet sid = cache.get('pxsid');\n\tcopy(sid);}\n\t}\n\nfunction caption() {\n\tlet lyc=cache.getFromMemory('pxcjj');\n\tif (lyc) lookc(lyc);\n\telse java.longToast('请刷新正文');\n\t}",
    "respondTime": 229699,
    "ruleBookInfo": {
      "author": "$.novel_series_detail.user.name\n<js>\nlet uid = java.get('uid');\nlet auth = result || String(book.author).replace(/[\\u200b]+/,'')\nif (uid == '') {uid = java.getString('$.novel_series_detail.user.id');}\nlet Info=source.getLoginInfoMap();\nInfo['作者'] = auth;\ncache.put('pxuid',uid);\nsource.putLoginInfo(JSON.stringify(Info));\n'\\u200b' + auth\n</js>",
      "canReName": "1",
      "init": "<js>\nvar sid = java.get('sid');\nlet i = String(book.bookUrl).includes('https:/');\nif (i) { sid = String(book.bookUrl).match(/\\d{3,}$/);}\n\ncache.deleteMemory('pxcjj'); //仅通过正文打开详情，防错\nif (sid == '🇨🇳') {\n\tlet Info=source.getLoginInfoMap();\n\tlet bkn = String(book.name);\n\tlet id = java.hexDecodeToString(result).match(/\\d+$/)[0];\n\tInfo['书名'] = '';\n\tcache.put('pxsid','');\n\tInfo['章节'] = bkn;\n\tcache.put('pxid',id);\n\tsource.putLoginInfo(JSON.stringify(Info));\n\tlet length = leng(bkn);\n\t\tif (length > 18) book.intro= '《'+book.name+'》\\n'+ java.get('jianjie');\n\t\t\n\trr='1';\n\t}\n\nelse {\nlet url = 'https://app-api.pixiv.net/v2/novel/series?series_id=' + sid;\n//修正bookurl\nbook.bookUrl = `data:;base64,${java.base64Encode(url)},{'type':''}`;\n\ntry {\n\nlet headers = gethd();\njg = java.connect(url, headers);\nrr = jg.body();\nif (jg.code() == 400) {\n\tsource.login();\n\tPackages.java.lang.Thread.sleep(500);\n\tlet headers = gethd();\n\trr = java.get(url, headers).body();\n\t}\n\n} catch(err) {\n\trr={};\n\tjava.toast('详情页链接加载失败'+sid);\n\t}\n\n//设置解析结果\njava.setContent(rr);\n\n\n//更新更新时间\ntry {\nlet tm = java.getString('$.novel_series_latest_novel.create_date');\nlet d = new Date(tm);\nd = java.timeFormatUTC(d,'yy/MM/dd',8*60*60*1000);\nbook.kind = String(book.kind).replace(/\\d+\\/\\d+\\/\\d+|$/,d).replace('null','');\n} catch(err) {java.toast('详情页内容错误');}\n\n//获取书名并净化\nlet bkn = String(java.getString('$.novel_series_detail.title')).replace(/^《(.+)》$/,'$1');\nbook.name = bkn.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'');\n\n//java.log('┌获取书名\\n[99:99.999] └'+book.name);\n\n//获取书名失败\nif (book.name == '') {\n\t//效果，unicode转字符\n\t// let ee = JSON.stringify(JSON.parse(rr) );\n\tlet txte = java.getString('$..user_message',rr);\n\t//弹出提示，sid相应序列不存在\n\tjava.longToast('\\n未获取到书名\\n'+txte);\n\t} else {\n\t\n\t//放入书名\n\tlet Info=source.getLoginInfoMap();\n\tInfo['书名'] = book.name;\n\tcache.put('pxsid',sid);\n\tInfo['章节'] = '';\n\tcache.put('pxid','');\n\tsource.putLoginInfo(JSON.stringify(Info));\n\t\n\t//同名共存\n\tif (source.get('gc') == 1) book.name='📘'+book.name;\n\t}\n\n//补充封面链接\nif (book.coverUrl == null) {\n\tlet img = java.getString('$.novel_series_latest_novel.image_urls.large');\n\tbook.coverUrl = img+','+JSON.stringify(imgoptions);\n\t\n//java.log('┌获取封面\\n[99:99.999] └'+book.coverUrl);\n}\n\n//计算书名长度\nlet length = leng(String(book.name));\n//大于18个全角字符\nif (length > 18) length= '《'+String(book.name).replace(/^📘/,'')+'》\\n';\nelse length = '';\n\nlet jianjie = java.getString('$.novel_series_detail.caption');\nbook.intro = length+java.get('jianjie');\njava.put('jianjie',jianjie);\njava.put('bookr',rr);\n}\n\n\trr\n</js>",
      "intro": "",
      "lastChapter": "$.novel_series_latest_novel.title##【?{{book.name}}】?",
      "name": "",
      "tocUrl": "{{book.bookUrl.replace(\"pe':'\",\"pe':'ml\")}}",
      "wordCount": "$.novel_series_detail.total_character_count"
    },
    "ruleContent": {
      "content": "script.0@html\n<js>\nlet rr = result.match(/novel:\\s*({.+})/)[1];\nlet id = String(chapter.url).match(/\\d+$/)[0];\n\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nif (inn==0) {\nlet rra = result.match(/authorDetails:\\s*({.+})/)[1];\n//作者信息\nlet uid = java.getString('$..userId',rra);\nlet unm = java.getString('$..userName',rra);\nlet uim = java.getString('$..url',rra);\nuim = uim.replace('i.pximg.net','pximg.hakurei.cc');\nlet ugz = java.getString('$..isFollowed',rra);\n//作品信息\nlet tags = java.getStringList('$..tags[*]',rr);\ntags = Array.from(tags).map(x => `＃${x}`).join(' ');\nlet caption = String(java.getString('$..caption',rr));\ncaption = caption ? '<p>'+caption.replace(/(?:<br \\/>)+/g, '</p><p>')+'</p>' : '';\nlet cdate = java.getString('$..cdate',rr);\nlet xh = java.getString('$..rating.like',rr);\nlet sc = java.getString('$..rating.bookmark',rr);\nlet gk = java.getString('$..rating.view',rr);\nlet title = java.getString('$.title',rr);\nlet sTitle = java.getString('$.seriesTitle',rr);\n//放入信息\ncache.putMemory('pxcjj',[title,uid,unm,uim,tags,caption,cdate,xh,sc,gk,sTitle,id,ugz]);\ncache.put('pxuid',uid);\ncache.put('pxid',id);\nlet Info=source.getLoginInfoMap();\n\nlet sid = java.get('sid');\nif (sid != '🇨🇳') {\n\tInfo['书名']=String(book.name).replace(/^📘/,'');\n\tcache.put('pxsid',sid);} else {\n\tInfo['书名']='';\n\tcache.put('pxsid','');}\n\nInfo['章节'] = chapter.title;\nInfo['作者'] = book.author.replace('\\u200b','');\n//放入UI界面\nsource.putLoginInfo(JSON.stringify(Info));\n}\n\nlet urls = java.getString('$..urls',rr);\nlet tt = String(java.getString('$.text',rr));\nlet img1 = tt.match(/\\[uploadedimage\\:\\d+\\]/g)||'';\nlet img2 = tt.match(/\\[pixivimage\\:[\\d\\-]+\\]/g)||'';\nfor (x of img1) {\n\tlet id = x.match(/\\d+/)[0];\n\tlet url = java.getString('$..'+id+'.urls.original',rr);\n\tlet re = new RegExp('\\\\[uploadedimage\\\\:'+id+'\\\\]');\n\tlet hd = ','+JSON.stringify(imgoptions);\n\ttt = tt.replace(re,'<img src=\"'+url+hd+'\"/>');\n\t}\nfor (x of img2) {\n\tlet id = x.match(/[\\d\\-]+/)[0];\n\tlet url = java.getString('$..'+id+'..images.original',rr);\n\tif (url=='null') url = java.getString('$..'+id+'..images.medium',rr);\n\tlet re = new RegExp('\\\\[pixivimage\\\\:'+id+'\\\\]');\n\tlet hd = ','+JSON.stringify(imgoptions);\n\ttt = tt.replace(re,'<img src=\"'+url+hd+'\"/>');\n\t}\ntt.replaceAll('[newpage]','\\n—换页符—\\n').replace(/\\[\\[jumpuri\\:(.+)\\>.+\\]\\]/,'🖇️$1🖇️')\n</js>",
      "imageStyle": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "$.user.name\n<js>\nlet uid = java.getString('$.user.id');\njava.put('uid',uid);\nresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\trr = [{}];\n\t} else {\nlet nurl = java.getString('$.next_url');\nif (nurl == '') {\n\tjava.toast('发现页到底了');\n\tsource.put('nurl','http://127.0.0.1');\n\t}\nelse {\n\tsource.put('nurl',nurl);\n\t}\nif (baseUrl.includes('/watchlist/novel') ) {\n\trr = java.getElement(\"$.series\");\n\t} else { rr = java.getElement(\"$.novels\");}\n\n}\nrr\n</js>",
      "bookUrl": "<js>\nlet id = java.getString('$.id');\nlet sid = java.getString('$.series.id');\nlet rr = 'https://app-api.pixiv.net/webview/v2/novel?id=' + id;\n\nif (baseUrl.includes('/watchlist/novel') ) {\n\tsid = id;\n\tif (source.get('gc')=='1') book.name='📘'+book.name;\n}\nelse if (sid=='') {sid='🇨🇳';}\nelse {\n\tlet jj = java.get('jianjie');\n\tjava.put('jianjie',book.name+'\\n'+jj);\n}\njava.put('sid',sid);\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "coverUrl": "<js>\nif (baseUrl.includes('/watchlist/novel') ) {url = java.getString('$.url');}\nelse {url = java.getString('$.image_urls.large');}\n\nurl+','+JSON.stringify(imgoptions);\n</js>",
      "intro": "<js>\nlet jj = java.get('jianjie');\nlet rr = '\\n' + java.getString('$.caption');\nlet rs = java.htmlFormat(rr);\njava.put('jianjie',rs);\njj + rs\n</js>",
      "kind": "@js:\nif (baseUrl.includes('/watchlist/novel') ) {\n\trrr = '';\n\ttm = java.getString('$.last_published_content_datetime');\n\t} else {\n\t\tlet tags = java.getStringList('$.tags..name');\n\t\t//将list数组处理为js正常数组，并且保证了元素值为js字符串\n\t\trr=String(tags).slice(1,-1).split(', ');\n\t\t//下面方式会复杂了点，但能保证元素也能含逗号\n\t\t//rr = Array.from(tags);rr=rr.join().split(',');\n\t\trrr = rr.filter(i => biaoq.test(i) );\n\t\trr.forEach(x=>{\n\t\t\tif (x=='萝莉') {\n\t\t\t\tif (!rrr.includes('幼女')) rrr.unshift(x);}\n\t\t\telse if (['熟女','淫妻'].includes(x)) {\n\t\t\t\tif (!rrr.includes('人妻')) rrr.unshift(x);}\n\t\t\telse if (['仙侠','古风','武侠'].includes(x) && !rrr.some(y=>/[修仙古风武侠]{2}/.test(y))) {\n\t\t\t\t\trrr.unshift(x);}\n\n\n\t});\n\t\ttm = java.getString('$.create_date');\n}\nlet d=new Date(tm);\nd=java.timeFormatUTC(d,'yy/MM/dd',8*60*60*1000);\n\nrrr.toString()+','+d",
      "lastChapter": "",
      "name": "$.title\n<js>\nlet bookn = String(java.getString('$.series.title')).replace(/^《(.+)》$/,'$1');\nif (bookn != '') {\n\tjava.put('jianjie', '《'+bookn+'》\\n');\n\tresult = result.replace(bookn,'♸').replace(/[《【]?♸[】》]?/,'')||result;\n\t}\nresult = result.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'').replace(/《(.+)》/,'$1');\nresult\n</js>",
      "wordCount": "$.text_length"
    },
    "ruleSearch": {
      "author": "$.user.name\n<js>\nlet uid = java.getString('$.user.id');\njava.put('uid',uid);\nresult\n</js>",
      "bookList": "<js>\npage=cache.getFromMemory('pxpage');\ncache.deleteMemory('pxpage');\nif (baseUrl.startsWith('http://127.')) {rr = [{}];}\n\nelse {\nrr = java.getElement('$.novels');\nnurl = java.getString('$.next_url');\nif (rr.length<6&&page==1&&nurl!='') {\n\t//处理不触发下一页且有nurl的情况\n\tsleep(500);\n\trs = java.ajax(nurl);\n\tjava.setContent(rs)\n\trrr = java.getElement('$.novels');\n\t//合并对象函数，可直接用\n\trr.addAll(rrr);\n\tnurl = java.getString('$.next_url');\n}\n\nif (nurl == '') {\n\tjava.toast('搜索页到底了');\n\tsource.put('nurls','http://127.0.0.1');\n\t} else {source.put('nurls',nurl);}\n\n}\nrr\n</js>",
      "bookUrl": "<js>\nlet id = java.getString('$.id');\nlet sid = java.getString('$.series.id');\nif (sid=='') {\n\tsid='🇨🇳';\n\t} else {\n\tlet jj = java.get('jianjie');\n\tjava.put('jianjie',book.name+'\\n'+jj);\n\t}\nlet rr = 'https://app-api.pixiv.net/webview/v2/novel?id=' + id;\njava.put('sid',sid);\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "checkKeyWord": "",
      "coverUrl": "$.image_urls.large\n<js>\nresult+','+JSON.stringify(imgoptions);\n</js>",
      "intro": "<js>\nlet jj = java.get('jianjie');\nlet rr = '\\n' + java.getString('$.caption');\nlet rs = java.htmlFormat(rr);\njava.put('jianjie',rs);\njj + rs\n</js>",
      "kind": "<js>\n{{(source.ruleExplore.kind).replace('@js:','')}}\n</js>",
      "name": "$.title\n<js>\nlet bookn = String(java.getString('$.series.title')).replace(/^《(.+)》$/,'$1');\nif (bookn != '') {\n\tjava.put('jianjie', '《'+bookn+'》\\n');\n\tresult = result.replace(bookn,'♸').replace(/[《【]?♸[】》]?/,'')||result;\n\t}\nresult = result.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'').replace(/《(.+)》/,'$1');\nresult\n</js>",
      "wordCount": "$.text_length"
    },
    "ruleToc": {
      "chapterList": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {rr=[result];}\nelse {\n\tlet i = java.get('i');\n\tif (i==0) {\n\t\tjava.setContent(java.get('bookr'));\n\t\t}\nrr = java.getElement('$.novels');\n}\nrr\n</js>",
      "chapterName": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {cc=book.name;}\nelse {\nlet title = java.getString('$.title');\ntitle = String(title).replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'');\nlet bkn=String(book.name).replace(/^📘|[。？！]+$/g,'');\n//消除后不剩字则不消除\ncc = title.replace(bkn,'♸').replace(/[《【]♸[。？！]*[】》]\\s*|♸[。？！\\s]*/,'')||title;\n\t}\n\tcc\n</js>",
      "chapterUrl": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {\n\t\tuu=java.hexDecodeToString(result);\n\t\tbook.putCustomVariable('这是单贴，链接：'+uu);\n\t}\nelse {\nlet id = java.getString('$.id');\nuu='https://app-api.pixiv.net/webview/v2/novel?id=' + id\n}\nuu\n</js>",
      "isPay": "",
      "nextTocUrl": "$.next_url\n<js>\nif (result) {\njava.put('i',1);\n}\nresult\n</js>",
      "preUpdateJs": "java.refreshTocUrl();\njava.put('i',0);",
      "updateTime": "$.create_date\n<js>\nif (result) {\nlet d=new Date(result);\nupt=java.timeFormatUTC(d,\"yyyy/MM/dd HH:mm\",8*60*60*1000);\n}\nelse '';\n</js>"
    },
    "searchUrl": "<js>\nlet url = 'http://127.0.0.1/';\ntry {\nlet urlStr='https://www.pixiv.net';\nlet aly = new JavaImporter(\nPackages.org.jsoup.Jsoup,\nPackages.org.jsoup.Connection);\nwith (aly) {\nJsoup.connect(urlStr)\n.timeout(3000)\n.ignoreContentType(true)\n.followRedirects(false)\n.method(Connection.Method.HEAD)\n.execute()\n\t}\n\nif (page == 1) {\ncache.putMemory('pxpage',page);\n\t\tif (/^\\u200b/.test(key)) {\n\t\t\tlet uid = cache.getFromMemory('pxuid');\n\t\t\tif (uid=='') java.longToast('\\n请刷新书籍');\n\t\t\telse url = 'https://app-api.pixiv.net/v1/user/novels?filter=for_android&user_id=' + uid;}\n\t\telse if (key.startsWith('作者@')) {\n\t\t\tlet uid = key.slice(3);\n\t\t\tif (!/^\\d{3,}$/.test(uid)) java.longToast('\\n请输入正确的id');\n\t\t\telse url = 'https://app-api.pixiv.net/v1/user/novels?filter=for_android&user_id='+uid;\t}\n\t\telse if (/\\d{5,}$/.test(key) ) {\n\t\t\tlet sid = key.match(/\\d+$/)[0];\n\t\t\tjava.put('sid',sid);\n\t\t\tif (key.startsWith('作者')) java.longToast('\\n请输入正确的搜索格式');\n\t\t\telse url = `data:;base64,${java.base64Encode(sid)},{'type':''}`;}\n\t\telse if (key.startsWith('正文@')) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/search/novel?filter=for_android&merge_plain_keyword_results=true&sort=date_desc&search_target=text&word='+key.slice(3);}\n\t\telse { url = 'https://app-api.pixiv.net/v1/search/novel?filter=for_android&merge_plain_keyword_results=true&word='+key;}\nsource.put('nurls','http://127.0.0.1'); //重置储存的下一页\n\n} else {url = source.get('nurls');}\n\n} catch(err) {\nerr.message.includes('SocketTimeout') ? \njava.longToast('\\n当前网络不支持访问pixiv') : \njava.log('lyc-px搜索错误：'+err);}\n\n\turl\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "//By情无羁25.02.12",
    "bookSourceName": "22笔趣阁",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.22biqu.net",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[\n{\n    \"title\": \"♕ 分类 ♕\",\n    \"url\": \"\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"title\": \"玄幻魔法\",\n    \"url\": \"/fenlei/1_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"武侠修真\",\n    \"url\": \"/fenlei/2_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"都市言情\",\n    \"url\": \"/fenlei/3_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"历史军事\",\n    \"url\": \"/fenlei/4_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"科幻灵异\",\n    \"url\": \"/fenlei/6_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"游戏竞技\",\n    \"url\": \"/fenlei/5_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"女生耽美\",\n    \"url\": \"/fenlei/7_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"其他类型\",\n    \"url\": \"/fenlei/8_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"♕ 排行榜 ♕\",\n    \"url\": \"\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"title\": \"总排行榜\",\n    \"url\": \"/rank/allvisit/\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"月排行榜\",\n    \"url\": \"/rank/monthvisit/\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"周排行榜\",\n    \"url\": \"/rank/weekvisit/\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"收 藏 榜\",\n    \"url\": \"/rank/goodnum/\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"♕ 全本 ♕\",\n    \"url\": \"\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"title\": \"玄幻魔法\",\n    \"url\": \"/quanben/fenlei/1_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"武侠修真\",\n    \"url\": \"/quanben/fenlei/2_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"都市言情\",\n    \"url\": \"/quanben/fenlei/3_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"历史军事\",\n    \"url\": \"/quanben/fenlei/4_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"科幻灵异\",\n    \"url\": \"/quanben/fenlei/6_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"游戏竞技\",\n    \"url\": \"/quanben/fenlei/5_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"女生耽美\",\n    \"url\": \"/quanben/fenlei/7_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"其他类型\",\n    \"url\": \"/quanben/fenlei/8_{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  }\n]",
    "header": "{\n  \"User-Agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; MI 5s Plus Build/OPR1.170623.032; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/71.0.3578.99 Mobile Safari/537.36\"\n}",
    "lastUpdateTime": "1741222141503",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "[property=\"og:description\"]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property~=las?test_chapter_name]@content",
      "name": "[property=\"og:novel:book_name\"]@content",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "#chaptercontent@p@html##本章未完.*",
      "nextContentUrl": "#pt_next@href"
    },
    "ruleExplore": {
      "author": ".author@text##作者：|（\\d.*）",
      "bookList": ".hot_sale",
      "bookUrl": "a@href",
      "coverUrl": "a.0@href##.+\\D((\\d+)\\d{3})\\D##https://img.22biqu.com/$2/$1/$1s.jpg###",
      "intro": ".review@text",
      "name": ".title@text##^\\d+\\."
    },
    "ruleSearch": {
      "author": ".author.0@text##作者：",
      "bookList": ".bookbox",
      "bookUrl": "a.0@href",
      "coverUrl": "a.0@img@src",
      "kind": ".author.1@text##类型：",
      "lastChapter": ".update@a@text",
      "name": ".bookname@text"
    },
    "ruleToc": {
      "chapterList": ".directoryArea.1@p@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": "option@value"
    },
    "searchUrl": "{{cookie.removeCookie(source.key)}}/ss/,{\n  \"body\": \"searchkey={{key}}&submit=\",\n  \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🍿 日常,🎊 常用,🎨 漫画",
    "bookSourceName": "🎨漫画柜💞✈️",
    "bookSourceType": 2,
    "bookSourceUrl": "https://www.manhuagui.com",
    "bookUrlPattern": "https://.*/manhua/.*/",
    "concurrentRate": "",
    "customOrder": 111,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "<js>\neval(String(source.loginUrl));\nvar exploreUrl = [];\ntitle = '✣　　　　　  ✣  榜　　单  ✣  　　　　　✣';\nexploreUrl.push(explore(title, '', 1, 1, false));\ntitle = [\n    '最近更新',\n    '连载漫画',\n    '完结漫画'\n];\ntype = [\n    '/update/d30.html',\n    '/list/lianzai/index_p{{page}}.html',\n    '/list/wanjie/index_p{{page}}.html'\n];\nfor (i in title) {\n    url = `{{Get('url')}}${type[i]}`;\n    exploreUrl.push(explore(title[i], url, 1, 0.25, false));\n}\ntitle = [\n    '日排行',\n    '周排行',\n    '月排行',\n    '总排行'\n];\nrank = [\n    '/rank/',\n    '/rank/week.html',\n    '/rank/month.html',\n    '/rank/total.html'\n];\nfor (i in title) {\n    url = `{{Get('url')}}${rank[i]}`;\n    exploreUrl.push(explore(title[i], url, 1, 0.2, false));\n}\ntitle = '✣　　　　　  ✣  标　　签  ✣  　　　　　✣';\nexploreUrl.push(explore(title, '', 1, 1, false));\nvar Url = Get('url') + '/list/';\nvar J = org.jsoup.Jsoup.parse(java.ajax(Url));\nvar list = J.select('.genre') ? J.select('.genre').select('li') : [];\nO1 = `\\${get('o1',Get('o'))}`;\nP1 = `\\${get('p1',Get('p'))}`;\nQ1 = `\\${get('q1',Get('q'))}`;\nR1 = `{{get('r1',Get('r'))}}`;\nS1 = `\\${get('s1',Get('s'))}`;\nT1 = `\\${get('t1',Get('s'))}`;\nfor (i in list) {\n    var kind = String(list[i].select('a').attr('href')).replace(/\\/list\\/|\\/$/g, '');\n    var Filter = `{{String(\\`${P1}_${kind}_${O1}_${T1}_${S1}_${Q1}/\\`).replace(/_+/g,'_').replace(/_\\\\//g,'\\/').replace(/^_|^\\\\//g,'')}}`;\n    url = `{{Get('url')}}/list/${Filter}${R1}_p{{page}}.html`;\n    exploreUrl.push(explore(list[i].text(), url, 1, 0.25, false));\n}\nBID = (kind % 3) < 1 ? 0 : (3 - (kind % 3));\nfor (i = 0; i < BID; i++) {\n   exploreUrl.push(explore('', '', 1, 0.25, false)); \n}\nJSON.stringify(exploreUrl);\n</js>",
    "header": "<js>\nvar Proxy = Map('代理：').split(\",\");\nheaders={\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36 Edg/127.0.0.0\",\n    \"proxy\": Proxy.some(value => parseInt(value, 10) == parseInt(Get('ci0'), 10)) ? '' : Proxy[0],\n}\ncache.put(java.md5Encode16(Get('url') + \"headers\"),JSON.stringify(headers));\nJSON.stringify(headers);\n</js>",
    "jsLib": "function get(tag,num) {\n    so = [\n        '',\n        '_o2',\n        '_o1',\n        '_o3'\n    ];\n    o1 = [\n        '',\n        'shaonv',\n        'shaonian',\n        'qingnian',\n        'ertong',\n        'tongyong'\n    ];\n    p1 = [\n        '',\n        'japan',\n        'china',\n        'hongkong',\n        'europe',\n        'korea',\n        'other'\n    ];\n    q1 = [\n        '',\n        'lianzai',\n        'wanjie'\n    ];\n    r1 = [\n        'update',\n        'index',\n        'view',\n        'rate'\n    ];\n    s1 = [\n        '',\n        'a',\n        'b',\n        'c',\n        'd',\n        'e',\n        'f',\n        'g',\n        'h',\n        'i',\n        'j',\n        'k',\n        'l',\n        'm',\n        'n',\n        'o',\n        'p',\n        'q',\n        'r',\n        's',\n        't',\n        'u',\n        'v',\n        'w',\n        'x',\n        'y',\n        'z',\n        '0-9'\n    ];\n    t1 = [\n        '',\n        '197x',\n        '198x',\n        '199x',\n        '200x',\n        '2010',\n        '2011',\n        '2012',\n        '2013',\n        '2014',\n        '2015',\n        '2016',\n        '2017',\n        '2018',\n        '2019',\n        '2020',\n        '2021',\n        '2022',\n        '2023',\n        '2024',\n        '2025'\n    ];\n    var e = eval(tag + '[' + num + ']');\n    return e;\n}\nfunction explore(title, url, Grow, Basis, bool) {\n    style = {\n        title:title,\n        url:url,\n        style:{\n            layout_flexGrow:Grow,\n            layout_flexBasisPercent:Basis,\n            layout_wrapBefore: bool\n        }\n    };\n    return style;\n}\nfunction Get(e) {\n    const { java, source, cookie, cache } = this;\n    var Variable = String(source.getVariable()).length > 0 ? source.getVariable() : '{}';\n    var get = JSON.parse(Variable);\n    return get[e];\n}\nfunction Put(data) {\n    const { java, source, cookie, cache } = this;\n    var Variable = String(source.getVariable()).length > 0 ? source.getVariable() : '{}';\n    var get = JSON.parse(Variable);\n    data = get['TC_to_SC'] == true ? java.t2s(data) : data;\n    return JSON.parse(data);\n}\nfunction Map(e) {\n    const { java, source, cookie, cache } = this;\n    var infomap = source.getLoginInfoMap();\n    var map = (infomap !== null && infomap.get(e) && String(infomap.get(e)).length > 0) ? infomap.get(e) : '';\n    return String(map);\n}\nfunction Num(e) {\n    e = String(e);\n    var num = e.length > 8 ? (e.substring(0, e.length - 8) + \"亿\") : (e.length > 4 ? (e.substring(0, e.length - 4) + \"万\") : e);\n    return num;\n}\nfunction sleep(milliseconds) {\n    var start = new Date().getTime();\n    while (new Date().getTime() - start < milliseconds) {\n    }\n}\nfunction Checkwait(e) {\n    while (e == '') {\n        sleep(10000);\n        return true;\n    }\n    return e;\n}\nfunction calculateRating(data) {\n    const { s1, s2, s3, s4, s5 } = data;\n    const total = s1 + s2 + s3 + s4 + s5;\n    const weightedTotal = s1 * 2 + s2 * 4 + s3 * 6 + s4 * 8 + s5 * 10;\n    const average = weightedTotal / total;\n    return Math.round(average * 10) / 10;\n}",
    "lastUpdateTime": "1741087422161",
    "loginCheckJs": "",
    "loginUi": "[\n  { name: \"代理：\", type: \"text\" },\n  { name: \"查看当前\", type: \"button\", action: \"look(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"查看历史\", type: \"button\", action: \"look(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"恢复默认\", type: \"button\", action: \"test(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁体搜索\", type: \"button\", action: \"search_TC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"繁简转换\", type: \"button\", action: \"TC_to_SC()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"目录整理\", type: \"button\", action: \"settle()\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换源站  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"①漫画柜❶\", type: \"button\", action: \"$(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n  { name: \"②漫画柜❷\", type: \"button\", action: \"$(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.45} },\n\n  { name: \"༺ˇ»`ʚ  点击切换线路  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"自动\", type: \"button\", action: \"u(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"电信\", type: \"button\", action: \"u(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"联通\", type: \"button\", action: \"u(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换受众  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"o(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"少女\", type: \"button\", action: \"o(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"少年\", type: \"button\", action: \"o(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"青年\", type: \"button\", action: \"o(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"儿童\", type: \"button\", action: \"o(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"通用\", type: \"button\", action: \"o(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换地区  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"p(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"日本\", type: \"button\", action: \"p(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"国产\", type: \"button\", action: \"p(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"港台\", type: \"button\", action: \"p(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"欧美\", type: \"button\", action: \"p(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"韩国\", type: \"button\", action: \"p(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"其它\", type: \"button\", action: \"p(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n\n  { name: \"༺ˇ»`ʚ  点击切换进度  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"q(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"连载\", type: \"button\", action: \"q(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"完结\", type: \"button\", action: \"q(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  { name: \"༺ˇ»`ʚ  点击切换排序  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"更新\", type: \"button\", action: \"r(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"发布\", type: \"button\", action: \"r(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"最热\", type: \"button\", action: \"r(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n  { name: \"评分\", type: \"button\", action: \"r(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.2} },\n\n  { name: \"༺ˇ»`ʚ  点击字母筛选  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全\", type: \"button\", action: \"s(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"A\", type: \"button\", action: \"s(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"B\", type: \"button\", action: \"s(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"C\", type: \"button\", action: \"s(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"D\", type: \"button\", action: \"s(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"E\", type: \"button\", action: \"s(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"F\", type: \"button\", action: \"s(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"G\", type: \"button\", action: \"s(7)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"H\", type: \"button\", action: \"s(8)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"I\", type: \"button\", action: \"s(9)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"J\", type: \"button\", action: \"s(10)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"K\", type: \"button\", action: \"s(11)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"L\", type: \"button\", action: \"s(12)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"M\", type: \"button\", action: \"s(13)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"N\", type: \"button\", action: \"s(14)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"O\", type: \"button\", action: \"s(15)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"P\", type: \"button\", action: \"s(16)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"Q\", type: \"button\", action: \"s(17)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"R\", type: \"button\", action: \"s(18)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"S\", type: \"button\", action: \"s(19)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"T\", type: \"button\", action: \"s(120\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"U\", type: \"button\", action: \"s(21)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"V\", type: \"button\", action: \"s(22)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"W\", type: \"button\", action: \"s(23)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"X\", type: \"button\", action: \"s(24)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"Y\", type: \"button\", action: \"s(25)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"Z\", type: \"button\", action: \"s(26)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"0-9\", type: \"button\", action: \"s(27)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n  { name: \"\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.15} },\n\n  { name: \"༺ˇ»`ʚ  点击切换年份  ɞ´«ˇ༻\", type: \"button\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 1} },\n  { name: \"全部\", type: \"button\", action: \"t(0)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2025\", type: \"button\", action: \"t(20)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2024\", type: \"button\", action: \"t(19)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2023\", type: \"button\", action: \"t(18)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2022\", type: \"button\", action: \"t(17)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2021\", type: \"button\", action: \"t(16)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2020\", type: \"button\", action: \"t(15)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2019\", type: \"button\", action: \"t(14)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2018\", type: \"button\", action: \"t(13)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2017\", type: \"button\", action: \"t(12)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2016\", type: \"button\", action: \"t(11)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2015\", type: \"button\", action: \"t(10)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2014\", type: \"button\", action: \"t(9)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2013\", type: \"button\", action: \"t(8)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2012\", type: \"button\", action: \"t(7)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2011\", type: \"button\", action: \"t(6)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"2010\", type: \"button\", action: \"t(5)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"00年代\", type: \"button\", action: \"t(4)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"90年代\", type: \"button\", action: \"t(3)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"80年代\", type: \"button\", action: \"t(2)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n  { name: \"更早\", type: \"button\", action: \"t(1)\", style: {layout_flexGrow: 1, layout_flexBasisPercent: 0.25} },\n\n  {\n    name: \"💡　　 源　　 站　　 打　　 印　　 💡\",\n    type: \"button\",\n    action: \"test()\",\n    style: {layout_flexGrow: 1, layout_flexBasisPercent: 1}\n  }\n]",
    "loginUrl": "var fburl = '';\noriginal = {\n    'ci0': 0,\n    'ci1': 0,\n    'ci2': 0,\n    'ci3': 0,\n    'o': 0,\n    'p': 0,\n    'q': 0,\n    'r': 0,\n    's': 0,\n    't': 0,\n    'u': 0,\n    'search_TC': false,\n    'TC_to_SC': true,\n    'settle': false,\n    'url': 'https://www.manhuagui.com',\n    'urls': [\n        'https://www.manhuagui.com',\n        'https://www.manhuagui.com',\n        'https://tw.manhuagui.com'\n    ]\n};\ntry {\n    $$$ = JSON.parse(source.getVariable());\n    if ($$$ == null) {\n        error;\n    } else {\n        '';\n    };\n} catch (e) {\n    $$$ = original;\n    put($$$);\n}\nx = '⓪①②③④⑤⑥⑦⑧⑨⑩';\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nfunction test(e) {\n    if (e == undefined) {\n        return java.log('\\n' + JSON.stringify($$$['urls'], null, '\\t')) + login('【源站输出提示】' + n(2) + '源站已打印完毕，请到日志查看');\n    }\n    if (e == 0) {\n        login('【初始化提示】' + n(2) + '已恢复默认设置');\n        return put(original);\n    }\n    date1 = new Date().getTime();\n    html = java.ajax($$$.urls[e] + ',' + JSON.stringify(Option));\n    date2 = new Date().getTime();\n    t = date2 - date1;\n    time = t / 1000 + 's';\n    c = String(html).indexOf('漫画');\n    logTime = '【' + name(e) + '】\\n┋┋\\n' + '解析时间：' + time;\n    if (c == -1 || t > 30000) {\n        return login('【访问失败提示】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♣️源站已失效(可能被墙)♣️\\n┋┋\\n请更新网址/切换源站/切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else if (t < 1000) {\n        return login('【网络环境优良】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n❤️延迟低，推荐使用此站❤️\\n┋┋\\n网络环境优良，请继续保持状态\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else if (t >= 1000 && t < 2000) {\n        return login('【网络环境一般】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♦️延迟一般，勉强可使用♦️\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else if (t >= 2000 && t < 30000) {\n        return login('【网络环境堪忧】' + n(2) + '┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♠延迟过高，不建议使用♠\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    }\n}\nfunction put(data) {\n    return source.setVariable(JSON.stringify(data, null, '\\t'));\n}\nfunction update() {\n    $$$['urls'].splice(4);\n    time = new Date().getTime();\n    host = java.get(fburl + '?t=' + time, Headers).header('location');\n    host = java.get(host, Headers).header('location');\n    host = String(host).replace(/\\/[^\\/]*$/, '');\n    if (String($$$['urls']).indexOf(host) === -1) {\n        java.log('\\n✅已添加源站：\\n' + host);\n        $$$['urls'].unshift(host);\n        put($$$);\n        $(0);\n    } else {\n        return test(1);\n    }\n}\nfunction name(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return x[e] + $$$.urls[e];\n}\nfunction login(e) {\n    if (e == undefined) {\n        return;\n    }\n    java.longToast(e);\n}\nfunction n(e) {\n    n = '\\n';\n    for (m = 1; m < e; m++) {\n        n = n + '\\n';\n    }\n    return n;\n}\nfunction k(e) {\n    k = ' ';\n    for (q = 1; q < e; q++) {\n        k = k + ' ';\n    }\n    return k;\n}\nfunction l(e) {\n    l = '';\n    for (o = 1; o < e; o++) {\n        l = l + '';\n    }\n    return l;\n}\nfunction look(e) {\n    if (e == 0) {\n        return login('【查看当前源站】\\n\\n┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋' + ('\\n ' + '📌' + name($$$.ci0)) + '\\n┋┋' + ('\\n' + '🧭当前线路：' + typeU($$$.u)) + '\\n┋┋' + ('\\n' + '🎯受众分类：' + typeO($$$.o)) + '\\n┋┋' + ('\\n' + '🗺当前地区：' + typeP($$$.p)) + '\\n┋┋' + ('\\n' + '⏲️漫画进度：' + typeQ($$$.q)) + '\\n┋┋' + ('\\n' + '📚标签排序：' + typeR($$$.r)) + '\\n┋┋' + ('\\n' + '📘字母筛选：' + typeS($$$.s)) + '\\n┋┋' + ('\\n' + '📅当前年份：' + typeT($$$.t)) + '\\n┋┋' + ('\\n🔍繁体搜索：' + ($$$.search_TC == true ? '开启' : '关闭')) + '\\n┋┋' + ('\\n📑繁简转换：' + ($$$.TC_to_SC == false ? '关闭' : '开启')) + '\\n┋┋' + ('\\n🗃目录整理：' + ($$$.settle == false ? '关闭' : '开启')) + '\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    } else {\n        return login('【查看历史接口】\\n\\n┏┅━┅━┅━┅━┅━┅━┅━┅━┅┓\\n┋┋' + ('\\n ci1：' + name($$$.ci1)) + '\\n┋┋' + ('\\n ci2：' + name($$$.ci2)) + '\\n┋┋' + ('\\n ci3：' + name($$$.ci3)) + '\\n┋┋' + '\\n┗┅━┅━┅━┅━┅━┅━┅━┅━┅┛');\n    }\n}\nfunction $(e) {\n    if (e == undefined) {\n        e = result['序号：'];\n        e = e > 0 ? e : '0';\n    }\n    if (/^ci[123]$/.test(e)) {\n        eval('i=$$$.' + e);\n    }\n    if (/\\D|^$/.test(e) || e < 0 || e >= $$$['urls'].length) {\n        return login('【源站错误提示】' + n(2) + '已选择的源站无效，请重新选择');\n    }\n    $$$['url'] = $$$['urls'][e];\n    $$$['ci3'] = $$$['ci2'];\n    $$$['ci2'] = $$$['ci1'];\n    $$$['ci1'] = $$$['ci0'];\n    $$$['ci0'] = e;\n    put($$$);\n    test(e);\n}\nO = ['全部','少女','少年','青年','儿童','通用'];\nfunction typeO(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return O[e];\n}\nfunction o(e) {\n    if (o == undefined) {\n        o = result.o;\n    }\n    if (e == $$$.o) {\n        return login('【受众切换提示】' + n(2) + '已经选择此受众，无需更换');\n    }\n    login('【受众切换提示】' + n(2) + '已经切换到[' + typeO(e) + ']受众');\n    $$$.o = e;\n    return put($$$);\n}\nP = ['全部','日本','国产','港台','欧美','韩国','其它'];\nfunction typeP(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return P[e];\n}\nfunction p(e) {\n    if (p == undefined) {\n        p = result.p;\n    }\n    if (e == $$$.p) {\n        return login('【地区切换提示】' + n(2) + '已经选择此地区，无需更换');\n    }\n    login('【地区切换提示】' + n(2) + '已经切换到[' + typeP(e) + ']地区');\n    $$$.p = e;\n    return put($$$);\n}\nQ = ['全部','连载','完结'];\nfunction typeQ(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return Q[e];\n}\nfunction q(e) {\n    if (q == undefined) {\n        q = result.q;\n    }\n    if (e == $$$.q) {\n        return login('【进度切换提示】' + n(2) + '已经选择此进度，无需更换');\n    }\n    login('【进度切换提示】' + n(2) + '已经切换到[' + typeQ(e) + ']进度');\n    $$$.q = e;\n    return put($$$);\n}\nR = ['更新','发布','最热','评分'];\nfunction typeR(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return R[e];\n}\nfunction r(e) {\n    if (r == undefined) {\n        r = result.r;\n    }\n    if (e == $$$.r) {\n        return login('【排序切换提示】' + n(2) + '已经选择此排序，无需更换');\n    }\n    login('【排序切换提示】' + n(2) + '已经切换到[' + typeR(e) + ']排序');\n    $$$.r = e;\n    return put($$$);\n}\nS = ['全部','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0-9'];\nfunction typeS(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return S[e];\n}\nfunction s(e) {\n    if (s == undefined) {\n        s = result.s;\n    }\n    if (e == $$$.s) {\n        return login('【筛选切换提示】' + n(2) + '已经选择此筛选，无需更换');\n    }\n    login('【筛选切换提示】' + n(2) + '已经切换到[' + typeS(e) + ']筛选');\n    $$$.s = e;\n    return put($$$);\n}\nT = ['全部','更早','80年代','90年代','00年代','2010年','2011年','2012年','2013年','2014年','2015年','2016年','2017年','2018年','2019年','2020年','2021年','2022年','2023年','2024年','2025年'];\nfunction typeT(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return T[e];\n}\nfunction t(e) {\n    if (t == undefined) {\n        t = result.t;\n    }\n    if (e == $$$.t) {\n        return login('【年份切换提示】' + n(2) + '已经选择此年份，无需更换');\n    }\n    login('【年份切换提示】' + n(2) + '已经切换到[' + typeT(e) + ']');\n    $$$.t = e;\n    return put($$$);\n}\nU = ['自动','电信','联通'];\nfunction typeU(e) {\n    if (e == undefined) {\n        e = 0;\n    }\n    return U[e];\n}\nfunction u(e) {\n    if (u == undefined) {\n        u = result.u;\n    }\n    if (e == $$$.u) {\n        return login('【线路切换提示】' + n(2) + '已经选择此线路，无需更换');\n    }\n    login('【线路切换提示】' + n(2) + '已经切换到[' + typeU(e) + ']线路');\n    $$$.u = e;\n    return put($$$);\n}\nfunction search_TC() {\n    if (search_TC == undefined) {\n        search_TC = true;\n    }\n    if ($$$.search_TC == true) {\n        login('【繁体搜索提示】' + n(2) + '已关闭繁体搜索，请重新搜索');\n        $$$.search_TC = false;\n        put($$$);\n    } else {\n        login('【繁体搜索提示】' + n(2) + '已开启繁体搜索，请重新搜索');\n        $$$.search_TC = true;\n        put($$$);\n    }\n}\nfunction TC_to_SC() {\n    if (TC_to_SC == undefined) {\n        TC_to_SC = true;\n    }\n    if ($$$.TC_to_SC == true) {\n        login('【简繁转换提示】' + n(2) + '已关闭繁体转换，请刷新书籍');\n        $$$.TC_to_SC = false;\n        put($$$);\n    } else {\n        login('【简繁转换提示】' + n(2) + '已开启繁体转换，请刷新书籍');\n        $$$.TC_to_SC = true;\n        put($$$);\n    }\n}\nfunction settle() {\n    if (settle == undefined) {\n        settle = true;\n    }\n    if ($$$.settle == true) {\n        login('【目录整理提示】' + n(2) + '已关闭目录整理，请刷新目录');\n        $$$.settle = false;\n        put($$$);\n    } else {\n        login('【目录整理提示】' + n(2) + '已开启目录整理，请刷新目录');\n        $$$.settle = true;\n        put($$$);\n    }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "canReName": "reName",
      "coverUrl": "cover",
      "downloadUrls": "durl",
      "init": "<js>\neval(String(source.loginUrl));\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nif (String(book['author']) !== \"xiaohan231\") {\n    var J = org.jsoup.Jsoup.parse(result);\n    var $2 = element => String(java.getElements(element).text());\n    var $3 = element => String(J.select(element).attr('src'));\n    url = baseUrl;\n    {{java.importScript(\"https://gcore.jsdelivr.net/npm/lz-string@1.4.4/libs/lz-string.min.js\")}}\n    var VIEWSTATE = String(java.getElements('#__VIEWSTATE') ? LZString.decompressFromBase64(String(java.getElements('#__VIEWSTATE').attr('value')).replace(/\\s/g, '')) : '');\n    java.put('VIEWSTATE',VIEWSTATE);\n    var others = [];\n    var others1 = [];\n    var chapter = VIEWSTATE.length > 5 ? org.jsoup.Jsoup.parse(VIEWSTATE) : java.getElements('.chapter');\n    var klist = chapter.select('.chapter-list');\n    var vlist = chapter.select('h4');\n    for (i in vlist) {\n        others.push(String('\\n[' + i + ']' + vlist[i].text() + '〔' + klist[i].select('li').length + '章〕'));\n        others1.push(vlist[i].text());\n    }\n    other = others.length > 1 ? ('📋全部目录：' + others.join(' ') + '\\nㅤ\\n') : '';\n    var index = book.getVariable(\"custom\") > 0 ? book.getVariable(\"custom\") : '0';\n    s = '';\n    var data = JSON.parse(java.ajax(Get('url') + '/tools/vote.ashx?act=get&bid=' + baseUrl.match(/comic\\/(\\d+)\\//)[1])).data;\n    var num = data.s1 + data.s2 + data.s3 + data.s4 + data.s5;\n    k = '★ ' + calculateRating(data) + '(' + num + ')' + ',' + $2('span:contains(漫画状态：) span.0').replace(/[中已]/, '') + ',' + $2('span:contains(出品年代：) a.0') + ',' + $2('span:contains(漫画地区：) a.0') + ',' + $2('span:contains(漫画剧情：)').replace(/漫画剧情：/, '').replace(/\\s*\\,\\s*/g, ',');\n    t = $2('span:contains(漫画状态：) span.1');\n    l = $2('span:contains(漫画状态：) a');\n    l = String(l);\n    l = Get('settle') == true ? l.replace(/\\s-\\s|-/g, ' ').replace(/\\s+/, ' ').replace(/.*第(\\d+)[话話章回期](|\\s)第.*?[话話章回期]/, '$1').replace(/.*第(\\d+)[话話章回期][^\\s]/, '$1 ').replace(/.*第(\\d+)[话話章回期]\\s\\d+/, '$1').replace(/.*第.*(\\d+).*?[话話章回期]/, '$1').replace(/(\\d+)/, l.match(/\\d+/) ? l.match(/(\\d+)/)[1].padStart(3, '0') : '$1') : l;\n    Setting = '\\n📌当前源站：' + (Get('ci1') == 0 ? '〖默认〗' : '〖更新〗') + x[Get('ci0')] + (Get('url').length > 26 ? Get('url').substring(0, 26) + \"<br>\" + Get('url').substring(26) : Get('url')) + ('\\n🧭当前线路：〖' + (Get('u') == 0 ? '默认' : '自选') + '〗' + U[Get('u')]) + ('\\n🎯受众分类：〖' + (Get('o') == 0 ? '默认' : '自选') + '〗' + O[Get('o')]) + ('\\n🗺当前地区：〖' + (Get('p') == 0 ? '默认' : '自选') + '〗' + P[Get('p')]) + ('\\n⏲️漫画进度：〖' + (Get('q') == 0 ? '默认' : '自选') + '〗' + Q[Get('q')]) + ('\\n📚标签排序：〖' + (Get('r') == 0 ? '默认' : '自选') + '〗' + R[Get('r')]) + ('\\n📘字母筛选：〖' + (Get('s') == 0 ? '默认' : '自选') + '〗' + S[Get('s')]) + ('\\n📅当前年份：〖' + (Get('t') == 0 ? '默认' : '自选') + '〗' + T[Get('t')]) + ('\\n📒当前目录：〖' + (index == 0 ? '默认' : '自选') + '〗' + others1[index]) + ('\\n🔍繁体搜索：' + (Get('search_TC') == true ? '〖自选〗开启' : '〖默认〗关闭')) + ('\\n📑繁简转换：' + (Get('TC_to_SC') == true ? '〖默认〗开启' : '〖自选〗关闭')) + ('\\n🗃目录整理：' + (Get('settle') == true ? '〖自选〗开启' : '〖默认〗关闭'));\n    changeLog = '\\nㅤ\\nㅤ\\n' + Setting + '\\nㅤ\\n';\n    book = JSON.stringify({\n        'name': $2('h1'),\n        'author': $2('span:contains(漫画作者：)').replace(/漫画作者：/, '').replace(/\\s*\\,\\s*/g, '/'),\n        'kind': s + ',' + k,\n        'word': '',\n        'latest': l + '〔' + t + '〕',\n        'intro': (t != '' ? ('更新时间：' + t + '\\nㅤ\\n') : '') + other + '\\n' + $2('#intro-all p').replace(/.*(介绍|简介|漫画).*[:：]/, '').replace(/(^)/g, '$1<br>') + changeLog,\n        'cover': $3('.hcover img').replace(/.*\\/\\//, 'https://'),\n        'url': url,\n        'durl': '',\n        'reName': true\n    });\n} else {\n    (function Book() {\n        apiBaseUrl = cache.get(java.md5Encode16('cache_api_' + Get('url')));\n        json = java.ajax(apiBaseUrl);\n        Title = JSON.parse(json)['title'];\n        Intro = cache.get(java.md5Encode16('User' + Get('url'))) == 'y' ? JSON.parse(json)['intro1'] : JSON.parse(json)['intro'];\n        return { Title: Title, Intro: Intro };\n    }());\n    book = JSON.stringify({\n        'kind': book['kind'],\n        'latest': Title[Title.length - 1],\n        'intro': Intro[0]\n    });\n}\nPut(book);\n</js>",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "tocUrl": "url",
      "wordCount": "word"
    },
    "ruleContent": {
      "content": "<js>\nif (String(book['author']) !== \"xiaohan231\") {\n    {{java.importScript(\"https://gcore.jsdelivr.net/npm/lz-string@1.4.4/libs/lz-string.min.js\")}}\n    String.prototype.splic = function (f) {\n        return LZString.decompressFromBase64(this).split(f)\n    };\n    var jsp = String(java.getElement(\"body > script:not([src]).-1\").html()).replace(/window.*?\\]/,'');\n    var data = String(eval(String(jsp))).match(/\\((.*?)\\)\\./)[1];\n    var res = JSON.parse(data);\n    var list = res.files;\n    var h = ['eu1','eu2','us'];\n    var result='';\n    for (i in list) {\n        var imgurl = 'https://' + h[Get('u')] + '.hamreus.com' + res.path + list[i] + '?e=' + res.sl.e + '&m=' + res.sl.m;\n        result +='<img src=\"' + imgurl + ',{\"headers\":{\"Referer\":\"' + Get('url') + '/\"}}\">\\n';\n    }\n} else {\n    if (baseUrl.includes('/yc/')) {\n        '<br><img src=\"https://qyyuapi.com/j-img/' + title.replace(/〔.*$/, \"\") + '.jpg\">';\n    } else {\n        '<br><img src=\"https://qyyuapi.com/img/' + title.replace(/〔.*$/, \"\") + '.jpg\">';\n    }\n}\n</js>",
      "imageStyle": "FULL",
      "nextContentUrl": "",
      "replaceRegex": "",
      "sourceRegex": ""
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "<js>\nvar _0x4742=[\"YWVzQmFzZTY0RGVjb2RlVG9TdHJpbmc=\",\"dmFyaWFibGVDb21tZW50\",\"IyMjI3hpYW8taGFuJiYmJg==\",\"QUVTL0VDQi9QS0NTN1BhZGRpbmc=\"],_0xc7ef=function(_0x474281,_0xc7ef55){_0x474281=_0x474281-0x0;var _0x1db329=_0x4742[_0x474281];if(_0xc7ef.xhTBFx===void 0x0){(function(){var _0x1c36ea=function(){var _0x2bf78c;try{_0x2bf78c=Function(\"return (function() {}.constructor(\\\"return this\\\")( ));\")()}catch(_0xcfd8ec){_0x2bf78c=window}return _0x2bf78c},_0xfc2bd5=_0x1c36ea(),_0x336b66=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";_0xfc2bd5.atob||(_0xfc2bd5.atob=function(_0x53f773){var _0x31bc68=String(_0x53f773).replace(new RegExp(\"=+$\",\"\"),\"\"),_0x393f6b=\"\";for(var _0x2aec0d=0x0,_0x2d3c6f,_0x1587ad,_0x4c8021=0x0;_0x1587ad=_0x31bc68.charAt(_0x4c8021++);~_0x1587ad&&(_0x2d3c6f=_0x2aec0d%0x4?_0x2d3c6f*0x40+_0x1587ad:_0x1587ad,_0x2aec0d++%0x4)?_0x393f6b+=String.fromCharCode(0xff&_0x2d3c6f>>(-0x2*_0x2aec0d&0x6)):0x0)_0x1587ad=_0x336b66.indexOf(_0x1587ad);return _0x393f6b})})();_0xc7ef.ylPppH=function(_0x1cf9a9){var _0x1bdc89=atob(_0x1cf9a9),_0x3d0935=[];for(var _0x58ca16=0x0,_0x45cb33=_0x1bdc89.length;_0x58ca16<_0x45cb33;_0x58ca16++)_0x3d0935+=\"%\"+(\"00\"+_0x1bdc89.charCodeAt(_0x58ca16).toString(0x10)).slice(-0x2);return decodeURIComponent(_0x3d0935)};_0xc7ef.WMElMN={};_0xc7ef.xhTBFx=!0x0}var _0x191547=_0xc7ef.WMElMN[_0x474281];_0x191547===void 0x0?(_0x1db329=_0xc7ef.ylPppH(_0x1db329),_0xc7ef.WMElMN[_0x474281]=_0x1db329):_0x1db329=_0x191547;return _0x1db329};eval(String(java[_0xc7ef(\"0x0\")](source[_0xc7ef(\"0x1\")],_0xc7ef(\"0x2\"),_0xc7ef(\"0x3\"),\"\")));\nvar User = '';\nvar Title = '';\nvar Link = '';\nvar Intro = '';\nuser_Check();\nvar data = [];\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nUser = Checkwait(User);\nif (User == true) {\n    if (baseUrl.includes('/d30')) {\n        var list =  java.getElements('.latest-list li');\n        for (i in list) {\n            name = list[i].select('.ell').text();\n            kind = /\"sl\"/.test(list[i]) ? '连载' : '完结';\n            latest = String(list[i].select('.tt').text()).replace(/更新至|^共/, '') + String('〔' + String(list[i].select('.dt').text()) + '〕').replace(/〔〕/, '');\n            data.push({\n                'name': name,\n                'author': '',\n                'kind': kind,\n                'word': '',\n                'latest': latest,\n                'intro': '',\n                'cover': String(list[i].select('.ell a').attr('href')).replace(/\\/comic/, 'https:////cf.mhgui.com/cpic/b').replace(/\\/$/, '.jpg'),\n                'url': Get('url') + list[i].select('.ell a').attr('href')\n            });\n        }\n        Data();\n    }\n    if (baseUrl.includes('/rank/')) {\n        var list =  java.getElements('tbody tr');\n        for (i in list) {\n            name = list[i].select('h5').text();\n            author = list[i].select('.rank-author').text();\n            kind = list[i].select('.rank-score').text() + ',' + list[i].select('.cRed').text() + ',NO:' + list[i].select('.rank-no').text() + ',' + (/\"trend-up\"/.test(list[i]) ? '🔺' : '🔻');\n            latest = String(list[i].select('.rank-update').text()) + String('〔' + String(list[i].select('.rank-time').text()) + '〕').replace(/〔〕/, '');\n            data.push({\n                'name': name,\n                'author': author,\n                'kind': kind,\n                'word': '',\n                'latest': latest,\n                'intro': '',\n                'cover': String(list[i].select('h5 a').attr('href')).replace(/\\/comic/, 'https:////cf.mhgui.com/cpic/b').replace(/\\/$/, '.jpg'),\n                'url': Get('url') + list[i].select('h5 a').attr('href')\n            });\n        }\n        Data();\n    }\n    if (baseUrl.includes('/list/')) {\n        var list =  java.getElements('#contList li');\n        for (i in list) {\n            name = list[i].select('.ell').text();\n            kind = list[i].select('.updateon em').text() + ',' + (/\"sl\"/.test(list[i]) ? '连载' : '完结');\n            latest = String(list[i].select('.tt').text()).replace(/更新至|^共/, '') + String('〔' + String(list[i].select('.updateon').text()).replace(/更新于：/, '').replace(/(\\d{4}-\\d{2}-\\d{2}).*/, '$1') + '〕').replace(/〔〕/, '');\n            data.push({\n                'name': name,\n                'author': '',\n                'kind': kind,\n                'word': '',\n                'latest': latest,\n                'intro': '',\n                'cover': String(list[i].select('.ell a').attr('href')).replace(/\\/comic/, 'https:////cf.mhgui.com/cpic/b').replace(/\\/$/, '.jpg'),\n                'url': Get('url') + list[i].select('.ell a').attr('href')\n            });\n        }\n        var next = java.ajax(baseUrl.replace(/_p(\\d+)/, function(match, p1) {return '_p' + (parseInt(p1) + 1);}) + ',' + JSON.stringify(Option));\n        var next_1 = org.jsoup.Jsoup.parse(next);\n        if (!list[0] || next_1.select('#contList li')[0]) {\n            Data();\n        }\n    }\n    data = JSON.stringify(data);\n} else {\n    data = Data();\n}\nPut(data);\n</js>",
      "bookUrl": "url",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "<js>\nvar _0x4742=[\"YWVzQmFzZTY0RGVjb2RlVG9TdHJpbmc=\",\"dmFyaWFibGVDb21tZW50\",\"IyMjI3hpYW8taGFuJiYmJg==\",\"QUVTL0VDQi9QS0NTN1BhZGRpbmc=\"],_0xc7ef=function(_0x474281,_0xc7ef55){_0x474281=_0x474281-0x0;var _0x1db329=_0x4742[_0x474281];if(_0xc7ef.xhTBFx===void 0x0){(function(){var _0x1c36ea=function(){var _0x2bf78c;try{_0x2bf78c=Function(\"return (function() {}.constructor(\\\"return this\\\")( ));\")()}catch(_0xcfd8ec){_0x2bf78c=window}return _0x2bf78c},_0xfc2bd5=_0x1c36ea(),_0x336b66=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";_0xfc2bd5.atob||(_0xfc2bd5.atob=function(_0x53f773){var _0x31bc68=String(_0x53f773).replace(new RegExp(\"=+$\",\"\"),\"\"),_0x393f6b=\"\";for(var _0x2aec0d=0x0,_0x2d3c6f,_0x1587ad,_0x4c8021=0x0;_0x1587ad=_0x31bc68.charAt(_0x4c8021++);~_0x1587ad&&(_0x2d3c6f=_0x2aec0d%0x4?_0x2d3c6f*0x40+_0x1587ad:_0x1587ad,_0x2aec0d++%0x4)?_0x393f6b+=String.fromCharCode(0xff&_0x2d3c6f>>(-0x2*_0x2aec0d&0x6)):0x0)_0x1587ad=_0x336b66.indexOf(_0x1587ad);return _0x393f6b})})();_0xc7ef.ylPppH=function(_0x1cf9a9){var _0x1bdc89=atob(_0x1cf9a9),_0x3d0935=[];for(var _0x58ca16=0x0,_0x45cb33=_0x1bdc89.length;_0x58ca16<_0x45cb33;_0x58ca16++)_0x3d0935+=\"%\"+(\"00\"+_0x1bdc89.charCodeAt(_0x58ca16).toString(0x10)).slice(-0x2);return decodeURIComponent(_0x3d0935)};_0xc7ef.WMElMN={};_0xc7ef.xhTBFx=!0x0}var _0x191547=_0xc7ef.WMElMN[_0x474281];_0x191547===void 0x0?(_0x1db329=_0xc7ef.ylPppH(_0x1db329),_0xc7ef.WMElMN[_0x474281]=_0x1db329):_0x1db329=_0x191547;return _0x1db329};eval(String(java[_0xc7ef(\"0x0\")](source[_0xc7ef(\"0x1\")],_0xc7ef(\"0x2\"),_0xc7ef(\"0x3\"),\"\")));\nvar User = '';\nvar Title = '';\nvar Link = '';\nvar Intro = '';\nuser_Check();\nvar data = [];\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nUser = Checkwait(User);\nif (User == true) {\n    var list =  java.getElements('.book-result li');\n    for (i in list) {\n        name = list[i].select('dt').text();\n        kind = '★ ' + list[i].select('.score-avg strong').text() + '(' + list[i].select('.score-num strong').text() + ')' + ',' + String(list[i].select('span:contains(状态：)').select('span')[1].text()).replace(/[中已]/, '') + ',' + String(list[i].select('span:contains(年份：)').text()).replace(/年份：/, '') + ',' + String(list[i].select('span:contains(地区：)').text()).replace(/地区：/, '') + ',' + String(list[i].select('span:contains(类型：)').text()).replace(/类型：/, '');\n        latest = list[i].select('.blue').text() + '〔' + list[i].select('span:contains(状态：)').select('span')[2].text() + '〕';\n        data.push({\n            'name': name,\n            'author': String(list[i].select('.tags:contains(作者：)').text()).replace(/作者：/, '').replace(/\\,/g, '/'),\n            'kind': kind,\n            'word': '',\n            'latest': latest,\n            'intro': String(list[i].select('.intro').text()).replace(/简介：|\\[详情\\]/g, ''),\n            'cover': list[i].select('.bcover img').attr('src'),\n            'url': Get('url') + list[i].select('.bcover').attr('href')\n        });\n    }\n    var next = java.ajax(baseUrl.replace(/_p(\\d+)/, function(match, p1) {return '_p' + (parseInt(p1) + 1);}) + ',' + JSON.stringify(Option));\n    var next_1 = org.jsoup.Jsoup.parse(next);\n    var searchkey = java.get(java.md5Encode16(Get('url') + \"searchkey\"));\n    if (!list[0] || !next_1.select('.book-result li')[0] || /书源|使用|说明|書源|說明/.test(searchkey)) {\n        Data();\n    }\n    data = JSON.stringify(data);\n} else {\n    data = Data();\n}\nPut(data);\n</js>",
      "bookUrl": "url",
      "checkKeyWord": "我的",
      "coverUrl": "cover",
      "intro": "intro",
      "kind": "kind",
      "lastChapter": "latest",
      "name": "name",
      "wordCount": "word"
    },
    "ruleToc": {
      "chapterList": "<js>\nvar _0x4742=[\"YWVzQmFzZTY0RGVjb2RlVG9TdHJpbmc=\",\"dmFyaWFibGVDb21tZW50\",\"IyMjI3hpYW8taGFuJiYmJg==\",\"QUVTL0VDQi9QS0NTN1BhZGRpbmc=\"],_0xc7ef=function(_0x474281,_0xc7ef55){_0x474281=_0x474281-0x0;var _0x1db329=_0x4742[_0x474281];if(_0xc7ef.xhTBFx===void 0x0){(function(){var _0x1c36ea=function(){var _0x2bf78c;try{_0x2bf78c=Function(\"return (function() {}.constructor(\\\"return this\\\")( ));\")()}catch(_0xcfd8ec){_0x2bf78c=window}return _0x2bf78c},_0xfc2bd5=_0x1c36ea(),_0x336b66=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";_0xfc2bd5.atob||(_0xfc2bd5.atob=function(_0x53f773){var _0x31bc68=String(_0x53f773).replace(new RegExp(\"=+$\",\"\"),\"\"),_0x393f6b=\"\";for(var _0x2aec0d=0x0,_0x2d3c6f,_0x1587ad,_0x4c8021=0x0;_0x1587ad=_0x31bc68.charAt(_0x4c8021++);~_0x1587ad&&(_0x2d3c6f=_0x2aec0d%0x4?_0x2d3c6f*0x40+_0x1587ad:_0x1587ad,_0x2aec0d++%0x4)?_0x393f6b+=String.fromCharCode(0xff&_0x2d3c6f>>(-0x2*_0x2aec0d&0x6)):0x0)_0x1587ad=_0x336b66.indexOf(_0x1587ad);return _0x393f6b})})();_0xc7ef.ylPppH=function(_0x1cf9a9){var _0x1bdc89=atob(_0x1cf9a9),_0x3d0935=[];for(var _0x58ca16=0x0,_0x45cb33=_0x1bdc89.length;_0x58ca16<_0x45cb33;_0x58ca16++)_0x3d0935+=\"%\"+(\"00\"+_0x1bdc89.charCodeAt(_0x58ca16).toString(0x10)).slice(-0x2);return decodeURIComponent(_0x3d0935)};_0xc7ef.WMElMN={};_0xc7ef.xhTBFx=!0x0}var _0x191547=_0xc7ef.WMElMN[_0x474281];_0x191547===void 0x0?(_0x1db329=_0xc7ef.ylPppH(_0x1db329),_0xc7ef.WMElMN[_0x474281]=_0x1db329):_0x1db329=_0x191547;return _0x1db329};eval(String(java[_0xc7ef(\"0x0\")](source[_0xc7ef(\"0x1\")],_0xc7ef(\"0x2\"),_0xc7ef(\"0x3\"),\"\")));\nvar User = '';\nvar Title = '';\nvar Link = '';\nvar Intro = '';\nuser_Check();\nvar data = [];\nvar Headers = JSON.parse(cache.get(java.md5Encode16(Get('url') + \"headers\")).replace(Get('url'), baseUrl));\nvar Option = {\n    \"method\": \"GET\",\n    \"headers\": Headers\n};\nif (String(book['author']) !== \"xiaohan231\") {\n    var index = book.getVariable(\"custom\") > 0 ? book.getVariable(\"custom\") : '0';\n    var date = java.getElements('span:contains(漫画状态：) span.1').text();\n    var newtitle = java.getElements('span:contains(漫画状态：) a').text();\n    var VIEWSTATE = String(java.get('VIEWSTATE'));\n    var chapter = VIEWSTATE.length > 5 ? org.jsoup.Jsoup.parse(VIEWSTATE) : java.getElements('.chapter');\n    var klist = chapter.select('.chapter-list')[index];\n    var list0 = klist.select('ul');\n    for (h in list0) {\n        var list = Array.from(list0[h].select('li a')).reverse();\n        for (i in list) {\n            title = list[i].attr('title') + String(list[i].text()).replace(/.*?(\\d+p)$/,'($1)');\n            title0 = title;\n            order = title.match(/(\\d+)/);\n            title = Get('settle') == true ? String(title).replace(/(-|_|\\s-\\s)/g, ' ').replace(/\\s-\\s|-/g, ' ').replace(/\\s+/, ' ').replace(/.*第(\\d+)[话話章回期](|\\s)第.*?[话話章回期]/, '$1').replace(/.*第(\\d+)[话話章回期][^\\s]/, '$1 ').replace(/.*第(\\d+)[话話章回期]\\s\\d+/, '$1').replace(/.*第.*(\\d+).*?[话話章回期]/, '$1').replace(/(\\d+)/, title.match(/\\d+/) ? order[1].padStart(3, '0') : '$1') : title;\n            data.push({\n                'title': title0.includes(newtitle) ? title + '〔' + date + '〕' : title,\n                'link': Get('url') + list[i].attr('href')\n            });\n        }\n    }\n    data = JSON.stringify(data);\n} else {\n    data = Data1();\n}\nPut(data);\n</js>",
      "chapterName": "title",
      "chapterUrl": "link",
      "preUpdateJs": "if (!String(book.bookUrl).includes(Get('url'))) {\n    book.bookUrl = String(book.bookUrl).replace(/.*\\/\\/[^\\/]+/g, Get('url'));\n    book.tocUrl = String(book.tocUrl).replace(/.*\\/\\/[^\\/]+/g, Get('url'));\n    java.refreshTocUrl();\n}",
      "updateTime": ""
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\n(function (e) {\n    if (Get('search_TC') == true || e.indexOf('TC') > -1) {\n        e = String(java.s2t(e)).replace(/TC/, '');\n    }\n    java.put(java.md5Encode16(Get('url') + \"searchkey\"), e);\n    return Get('url') + '/s/' + e + get('so',Get('r')) + '_p{{page}}.html';\n}(key));\n</js>",
    "variableComment": "JspHXCgzmq549cSvxZRk3TFvhaW9HojWoPMEl7El6t/uQPm6gkVOfbKqM5kCCPowDXJkiSRSa3npJPxd9vxKh3cMNvD1zWkrw4ju5caIY4nxOyT73azNVhhjJZjyz/ebHvYW8WL3jcWxqxmNG6krxvli7namCa0q6ODFeq24oEdko9o6Qp4abnH7CJftdjfn6wuSjWOHcv24gGCqJw4SAAmrFhFTTu5N1/yBmdA/FoFdXzVCmh2O7QuWCNXEFEvtqz/dxjI8B6IAvPH5ODSHyJK4S1EmxkBS2KulmuqCT2aDz6rJyZNvlzxUKRZTZDpuhW1k7t9LEvq1mTbfzdhHTSUJeKpWwCLeVq0vUQi7hX6pIpxSPMWsKBl+WMzv/puLxTaIYB8le4S26dkr2hV2bGH3pA5YCkYUScdfILxk5JAGQ4QGx6B0jUjw0g1As4m9xlu3aXTAeop8NkfCtnPkaGqBNz5Jy8n9Dsb9YyaTRE01Sq2WGuErTpnYTaYDsFukJL3Oq071kZl65uglkJOlJyI8LMAZfXnykL7kV69T94fNpfR7l5B+PMUuV2leXpXCCpnf/g+EazBuR8T/LtV+2hhbC3WJ4NSmBmaUkg2iTWCSK2h+e7NfC4EW3MMwuRVyyx0zaQn+ISAjDUzWX0Ur7M8EZdnLkuDi1+eZUo69QfZJxsJ8r8KA32ZtRwkY/dGFWKg4m7zvhyYv7rJyry69F7t7JSwXGIuHVQPbQw6QHKdZxLa+ezvVp1Q/61gbbPagg8W9Mu53Yc+pVacX0KwmLxZNbmRAA5MsbdEXdaYReimDQJf9aMqBceAx1wODVnxPPJ3oAMaJy9qW0JOmQnsJRaMwzeCfWwArgv/Pz6U79r9m3n/yODyojn6UaoEzpB35MIprtG0UPigXivhWfRnm9KiNSucbp/EOublD5pjIhVb132j5XRzPfDDS5ZbT6r+9X6CSleFQuYJsWOPrksrr9Cec32yOP2U6FWISCLyTo5zgdYecUvXVH/Ad5Q5dGhkiVmNDlSSVKqeM9gJfM/BK4zlm8elYd0b8KuU9nYuxCO67HZbdLVhMPlL6av56OzN2doqedW+tXkdUTZn7snNRahnePKr1KD2iDuSMMwSKvl/JsATGrtMGjJ+2ITUf53pWWpeVMCgfYkDCb53t9gmPDmXrKH1iI+ph3pjHBGDyuUb7JIfhsfOIjuMxDv8a0TBr9wcBNt++Aw2NjFZ3CDukdit7Fg6fVambCbEGO91Cwhpd8Tf9etJ7Jvi1MUYeDOkS8zEg2uhooawd6xnw9iskqAHSv4rB9PmD31yEZjmv0fMY78b3qYgGAp4mMaOnk+/evPcbLBjJvbGpH0ZhBphsor9HglvSuodEAhwEY45OO+0lOlMw75cHCNYG8BUjLYX1cS+r8HgC8Jkf/wHspRfhHfJ9+YrEmlmVTgaameIgczdg00kl1sYenLmBH92tRDXC+SHQHU34EQO7sRPQWguYBpNCJAEs/b0VUMb2C1L+l50qRxSy75q8ClnZseDxjcGjNwu11Kjn3pnppkAsc5680KqF318PvT9pw2v7axcynn0Hl4TMD50p5hkLFHzyHW8CW42o+btj6IHfVW23xbpdq3n61lfbPYFWEaXSaxqryAML57X/cnbKFucJ0MnDf/WqLWmjw4r3coIf434OSEUwBkL7ORZySURT6rYnnNj5U0Ar3OKivwyHRFu1Q57jnbI1zrRYzKQPWnmMSydbomeclsYIwjHEit/4Qe63ow+ULXOkO49BGz8f2QW6Yw+BuIXBLX2ANILUPJf8JGsMIM78XdwITyGllPHbcA8pNsjjK577z0eQCwBXOxwuutFi7X98LV0mShYhF7MfmrxLwvrNEkNbrZRyIvBOizAuUoeyxSASmFJ/QCq7tvZlYPNW6aLwSrJDzztTXlrYm7aZ6qnUhtG/O5Eia0UI8m9cIlNEsWC4qGWEk9mNczr4OBK61G3TpQIyFs7yRFJ3ldkt8tfHhKlGouY9s8Mintn5UDO30gQIWsNDMtWNKwB8oROBI3KKKbDHA/ZLzy+xDNGHZg/YxuTzzoEuu/1wIGrrPkKj0dJ1nIqsrJSqgiQBkzVCK3Iy2ke50+sOb1afZRHhiyEN8jYFQfDlBSSzRAE2hy76N+4LE2Mx40PM6TRr9kRHed7yo/fCiQ0iNIpETAefKJdlDUriCX3ReQgoObTU2VP29JxKYRuf3tlC2W0fkzlzR8Ajf77SCMxieGlf6pQNIkUQTBB8F0kIzjyd5YUg7KlL6G+lD2CPdmt3CqlUHC1tNExpVqsrzlqgNI47eeWtsN15oU01RMvWRvkpQHzTC2WuR2zxSBmH1TFSNF/My97FY2wlhBDnpfrrpu6Sqp1Q2dB+cc6QN7iCqeItsVuE7RK2sugaHsq/PslfDqNvVOxKwzWitLoHKwC2vWL3x12IXSoHGj8725URic4nxnYPKW1yXlLTk167/qNNkWUzHWbRkSNs8hZOuBiXgwwA9L/gIy03YjsPnfsbObpHApT8LdDai4fRzZxuPBbwCJD6KWmaG/2D62S8hE556wFUehRe7jTpYWu3D1WNbsFOwzspKglYpdqmc62x10h0naSYRflRUeMeNlph6rrW7mk3THvNmflkX7aZpqngAQ6A8C+7m7cye/Re7RVFkBlFp4zT2fs3Zms7c1dOkLGtmXZsUiJf4enHeqabpeLXiAKHlilK/Al+OFbgqCbYBICgOplzAp15L6VVl1ir5fRO5EYey9gXmIowKWqD9G0k+3neR7pHIp6/ieqJ9fPgNR6+L6ro595wsUi8FxIEcwWWUFGbvuwnLrg/kVPYI+11SF+nXsn0Bq3jS/6YQuuFl1kKbjX+bone0N87NqafQ1IAGvEji+eTOnWyg5JiYebkZtJ7G4v4Xvy0dd/OAr+RKLPfzYc8dKI1uUuO1pBACPuTq1jf2P2EMPnzyRcW5Frttb2fq0i9Nbw2d844T7nMUdZNj+AAA299fLDzqpwBrwbkC1GWnUuJkmTW4PRin1+f48JFLMyLJr7CwOatalBwBOLVD9OJvhwSUYC6PHc3nuEN2N0ijVM9NtoCtbx1A+jGU4v6JPQTR3FuMeNWgjwoCpEhMjUvvYteZZ9ReGlJxL1guMkFsJiDXrghmcxL9lnXh+iUL9+8c+U3dhM+mSOPWdCIQ6fWqEe6zQ+vv4ThUQndd18FtHN7trjbuAy1A1lXIvyfbgr77WkIh82zNYCq5y338g0leY1Smd506fYoY0ttaqKVLoBFi4Wt4XulvwGRJ1UA+3bmmyKLtxG2TkTOc8aJEauU/s0ekyWN5JX8u/htVYEeBUIhnBOxz3mm7KsvXDBrdxy1bTGXUIeqnAGvBuQLUZadS4mSZNbg9GKfX5/jwkUszIsmvsLA5l/ZEBjxzUbZHyKnfNPikeEC0vvLQeMNBuhDfrCmnoikwvbFXjcMCKicW9j1xslQ93vLdG+9UCklRFGGWHjxuMeVjmm2iPLzGaUgW12vlvUyeW0smJGK0lCFNJJhuI52Yj3Eb4kksMHCR/udFo27HND+sUOvvkv9WVf/pHZI/jml8UiQZv3KLdAVZ61JyUMj0wMzwfGzA4Gnl0nbmdj5G0n1tqbldpqEgjuS0wYMLQqtw3jC++5vV1Nh+KTCJiXdn13hoHoAjqDY/Rfg+f035XhzahsDptZDKASvDvW6Rw9Hg/2x25/mv8o3000AUxdGppz8qbaNeWqlui48vWvSLsU6K8teFCmQk43Jbi06atOSwN3aiKl1pm6vgli5MUPHazStPkST1YIyGf0JOm61ScLZfOT3zzLVdgGMj6JTSPM89PH9XnVW9AyOa6JqFWtb4oWSC0kOORRHZ82I/WwJlIZdtCNqMzaR1h22dFV2hMzx9z2E4jPS6JyYgL8diZGhr+IrGpDYsd7iN1e/EABnzxYyDV0H/1q2N52g7jzkbSPhRgRKzBWzHPd0LZFODCFrOL+qh1F5TztWxoXVU6UEyBtzahsDptZDKASvDvW6Rw9HvMf/HjRUNyJtdag/72LEsumFFFRk0QYh5EYYJ9S2uD7zPxewprA5oHs7eqBP5ElIu+BdDrJ5y5puzGpi/rR4tknE3C53ZHHWNDGxDeG30ZVEB5//TRbeXe3nme/eQu1OVrv3vLVjcJ70vVc+a9tQMdSg6wypcMyVsvt5qGzm1i8wAr18PI7kybtCmSz+hPwcna0+e1R1lxTjPWsgFsapyMb6T5o7Go+MnxwSMvPUaOFkHBMry8wDZHiugrRUFsneB4jX1jx9hkdTDrW7geiuVhl4ikKOo03528mGxIpGQ/P+4pMv0j3T+kewn2SAtCu2uzLoRQoNWdrs9WNfMZJfYPuALYtchCfl8DY5sJyIQ3mTz038BCTYiDTfkEnJgYyQX3UwYVl1YNAUebGR48pm5TjtEFTljwjS5O55EOvuKqu2VXVljoB0B5M2DUDeVpAUP5IePn8+yXX6VXjwTH1hzMwrCUW3mlGZHqD5mOqFVfKB4ClqFuy5rLopfScTb+AU20ps123dYZePcjuzObYiNlgouhIN6I39YXCEje7daewKGkpbTcIzy+hK950IyUXKNhtvJN2OKYfZ+XL/kHJR+n4HSjNP7BfpUPFED/0+QHsHixtJdMH6jiFT8lGpIF5ffqnsQ8D/QZ1RK9Ti0a17NQ==",
    "weight": 0
  },
  {
    "bookSourceComment": "无法搜索，只能用发现。\nby天天的鸟蛋蛋 2025/3/3",
    "bookSourceGroup": "发现源",
    "bookSourceName": "386小说",
    "bookSourceType": 0,
    "bookSourceUrl": "http://m.xs386.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[\n  {\n    \"title\":\"都市言情\",\n    \"url\":\"/class/1_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  },\n  {\n    \"title\":\"历史军事\",\n    \"url\":\"/class/2_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  },\n  {\n    \"title\":\"玄幻奇幻\",\n    \"url\":\"/class/3_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  },\n  {\n    \"title\":\"武侠修真\",\n    \"url\":\"/class/4_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  },\n  {\n    \"title\":\"女生纯爱\",\n    \"url\":\"/class/11_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  },\n  {\n    \"title\":\"科幻网游\",\n    \"url\":\"/class/7_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  },\n  {\n    \"title\":\"悬疑灵异\",\n    \"url\":\"/class/9_{{page}}/\",\n    \"style\":{\n      \"layout_flexGrow\":1,\n      \"layout_flexBasisPercent\":0.4\n    }\n  }\n]",
    "lastUpdateTime": "1741019344177",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "ul:nth-child(1) > li:nth-child(3)@text",
      "coverUrl": "img@src",
      "intro": ".jianjie@text",
      "kind": "ul:nth-child(1) > li:nth-child(2)@text&&ul:nth-child(1) > li:nth-child(4)@text&&##.*：",
      "lastChapter": "ul:nth-child(1) a@text",
      "name": "ul:nth-child(1) > li:nth-child(1)@text",
      "tocUrl": "text.查看全部章节@href"
    },
    "ruleContent": {
      "content": "#nr@html",
      "nextContentUrl": "text.下一@href"
    },
    "ruleExplore": {
      "author": "a.2@text",
      "bookList": "ul@li",
      "bookUrl": "a.1@href",
      "kind": "a.0@text##\\[|\\]",
      "name": "a.1@text"
    },
    "ruleSearch": [],
    "ruleToc": {
      "chapterList": "li:nth-child(n+1)>a!-1",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": "span:nth-child(2)@text\n@js:\nid=baseUrl.match(/https\\:\\/\\/m\\.xs386\\.com\\/(\\d+)\\_1/)[1];\nvar resultStr = result && result.length > 0 ? result[0] : \"\";\nvar match = resultStr.match(/\\d+\\/(\\d+)/);\nvar n = match && match[1] ? parseInt(match[1], 10) : 1; \nvar list = [];\nfor (var i = 1; i <= n; i++) {\n    list.push(\"https://m.xs386.com/\"+id+\"_\"+ i+\"/\" ); \n}\nlist;"
    },
    "weight": 0
  },
  {
    "bookSourceComment": "by幕惜&by天天的鸟蛋蛋",
    "bookSourceName": "无限小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://wuxianbook.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "lastUpdateTime": "1741511201894",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "init": "<js>\nid=src.match(/data\\-bookid\\=\\\"(\\d+)\\\"/)[1]\njava.log(id)\njava.put(\"id\",id)\n</js>",
      "intro": "[property$=description]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "[property$=book_name]@content",
      "tocUrl": "<js>\nid=java.get(\"id\");\njava.log(id)\nurl=\"https://wuxianbook.com/e/extend/bookpage/pages.php?id=\"+id+\"&pageNum=0&dz=asc\"\nurl;\n</js>"
    },
    "ruleContent": {
      "content": "#text@html"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": ".book-author@text",
      "bookList": ".s-nv-list@ul@li",
      "bookUrl": "a@href",
      "checkKeyWord": "",
      "coverUrl": "img@src",
      "intro": "p@text",
      "name": ".title@text"
    },
    "ruleToc": {
      "chapterList": ".list[*]",
      "chapterName": ".title",
      "chapterUrl": "{{book.bookUrl}}{{$.pic}}",
      "nextTocUrl": ".totalPage\n<js>\nid=java.get(\"id\");\njava.log(id)\nmatch=String(result).match(/(\\d+)/)\nn=match[1]\nlist=[]\nfor(var i=1; i<=n; i++){\n\n        list.push(\"https://wuxianbook.com/e/extend/bookpage/pages.php?id=\"+id+\"&pageNum=\"+i+\"&dz=asc\")\n\n        }\n\nlist;\n</js>"
    },
    "searchUrl": "https://wuxianbook.com/e/search/index.php,{\n  \"body\": \"tbname=bookname&show=title&tempid=1&keyboard={{key}}\",\n  \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "需登录\n25.03.06 增加登录ui、源站切换、连接检测\n//练习之作，bug致歉\n//原源来自源社区，新增部分参考了很多大佬的源，特此说明并致谢",
    "bookSourceGroup": "✔,z★正版",
    "bookSourceName": "🏷海棠文学城",
    "bookSourceType": 0,
    "bookSourceUrl": "🏷海棠文学城",
    "bookUrlPattern": "",
    "concurrentRate": "",
    "customOrder": 5,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nsort = [];\npush = (title, url, type) => sort.push ({\n  title: java.t2s(title),\n  url: `{{getUrl()}}`+url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type,\n  },\n});\npush('点击签到', `signinset.php`, .4);\npush('我的书柜', `?act=managemybookcase&pages={{page}}`, .4);\npush('• 长篇作品 •', null, 1);\n[[\"5万~10万字作品\",\"c\"], [\"10万~20万字作品\",\"b\"], [\"20万字以上作品\",\"a\"]]\n.map(\n  [title, t] => {\n    push(\n      title,\n      `?act=highcapacitybook&mngtypes=${t}&pages={{page}}`,\n      null\n    );\n  },\n);\npush('• 榜单控专用 •',null,1);\nX=org.jsoup.Jsoup.parse(java.ajax(`{{getUrl()}}?act=rankingall`)).select('option[value*=rankingall]');\nfor(i = 0; i < X.length; i++){\n  push(X[i].text(), X[i].attr('value'), null)\n};\nJSON.stringify(sort);",
    "header": "",
    "jsLib": "var urls = [\t\n\t\"https://ebook.longmabook.com/\",\n\t\"https://www.longmabookcn.com/\",\n\t\"https://ebook.lmbooks.com/\",\n\t\"https://www.lmebooks.com/\",\n\t\"https://www.haitbook.com/\",\n\t\"https://www.htwhbook.com/\",\n\t\"https://www.myhtebook.com/\",\n\t\"https://www.lovehtbooks.com/\",\n\t\"https://www.myhtebooks.com/\",\n\t\"https://www.myhtlmebook.com/\",\n\t\"https://jp.myhtebook.com/\",\n\t\"https://jp.myhtlmebook.com/\",\n\t\"https://ebook.urhtbooks.com/\",\n\t\"https://www.urhtbooks.com/\",\n\t\"https://www.newhtbook.com/\",\n\t\"https://www.lvhtebook.com/\",\n\t\"https://jp.lvhtebook.com/\",\n\t\"https://www.htlvbooks.com/\",\n\t\"https://www.htnewbooks.com/\"\n]\n\nfunction getUrl(_) {\n  const { java, source } =_|| this\n  let v = String(source.getVariable())\n  if(v.length < 1){\n    source.setVariable(\"0\")\n    v = v.match(/^\\d+$/) ? v : 0\n  }\n  return urls[v]\n}\n\nfunction getIndex(a){\n\ti=urls.indexOf(a)+1\n\treturn i\n\t}",
    "lastUpdateTime": "1741349368473",
    "loginUi": "[{name:\"用户名\",type:\"text\"},\n{name:\"密码\",type:\"password\"},\n{name:\"登录\",type:\"button\",action:\"getLogin()\"},\n{name:\"退出\",type:\"button\",action:\"logOut()\"},\n{name:\"查看当前\",type:\"button\",action:\"current()\"},\n//{name:\"查看cookie\",type:\"button\",action:\"getC()\"},\n{name:\"——————————选择源站——————————\",type:\"button\"},\n{name:\"一站\",type:\"button\",action:\"select(0)\"},\n{name:\"二站\",type:\"button\",action:\"select(1)\"},\n{name:\"三站\",type:\"button\",action:\"select(2)\"},\n{name:\"四站\",type:\"button\",action:\"select(3)\"},\n{name:\"五站\",type:\"button\",action:\"select(4)\"},\n{name:\"六站\",type:\"button\",action:\"select(5)\"},\n{name:\"七站\",type:\"button\",action:\"select(6)\"},\n{name:\"八站\",type:\"button\",action:\"select(7)\"},\n{name:\"九站\",type:\"button\",action:\"select(8)\"},\n{name:\"十站\",type:\"button\",action:\"select(9)\"},\n{name:\"十一站\",type:\"button\",action:\"select(10)\"},\n{name:\"十二站\",type:\"button\",action:\"select(11)\"},\n{name:\"十三站\",type:\"button\",action:\"select(12)\"},\n{name:\"十四站\",type:\"button\",action:\"select(13)\"},\n{name:\"十五站\",type:\"button\",action:\"select(14)\"},\n{name:\"十六站\",type:\"button\",action:\"select(15)\"},\n{name:\"十七站\",type:\"button\",action:\"select(16)\"},\n{name:\"十八站\",type:\"button\",action:\"select(17)\"},\n{name:\"十九站\",type:\"button\",action:\"select(18)\"}]",
    "loginUrl": "select = (x) => {\n\tsource.setVariable(x)\n\tindex=x+1\n\turl = getUrl()\n\tjava.toast('成功设置接口【' +index+ '】' + ' \\n' + url)\n\tlet date1 = new Date().getTime()\n\tlet html = java.ajax(url)\n\tlet date2 = new Date().getTime()\n\tlet t = date2 - date1\n\tlet time = t / 1000 + 's'\n\tlet logTime = '【' + url + '】\\n┋┋\\n' + '解析时间：' + time\n    if ( t > 5000) {\n        java.longToast('【' + index + '站：访问失败提示】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♣️源站已失效(可能被墙)♣️\\n┋┋\\n请更新网址/切换源站/切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t < 1000) {\n        java.longToast('【' + index + '站：网络环境优良】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n❤️延迟低，推荐使用此站❤️\\n┋┋\\n网络环境优良，请继续保持状态\\n┋┋' + '\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t >= 1000 && t < 2000) {\n        java.longToast('【' + index + '站：网络环境一般】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♦️延迟一般，勉强可使用♦️\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } else if (t >= 2000 && t < 5000) {\n        java.longToast('【' + index + '站：网络环境堪忧】\\n' + '┏┅━┅━┅━┅━┅┅━┅━┅┓\\n┋┋\\n' + logTime + '\\n┋┋\\n♠延迟过高，不建议使用♠\\n┋┋\\n请切换其他源站或切换网络环境\\n┋┋' + '\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    }\n}\n\ncurrent = () => {\n   \turl=getUrl()\n   \tindex=getIndex(url)\n    ck = java.getCookie(url)\n    c = String(ck).indexOf('nick=')\n    k = String(ck).indexOf('nick=deleted')\n    if (c == -1||k!=-1) {\n    \tjava.longToast('\\n┏┅━┅━┅━┅━┅┅━┅━┅┓\\n【' + index+'站】\\n┋┋\\n'+getUrl()+ '\\n┋┋\\n✘未登录✘' + '\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } \n\telse {\n\t\t java.longToast('\\n┏┅━┅━┅━┅━┅┅━┅━┅┓\\n【' + index+'站】\\n┋┋\\n'+ getUrl()+ '\\n┋┋\\n⭕已登录⭕' + '\\n┗┅━┅━┅━┅━┅┅━┅━┅┛')\n    } \n}\n\nfunction getLogin() {\n    url=getUrl()\n    index=getIndex(url)\n    username=result.get(\"用户名\")\n    psw=result.get(\"密码\")\n    ck = java.getCookie(url)\n    c = String(ck).indexOf('nick=')\n    k = String(ck).indexOf('nick=deleted')\n    if(c!=-1&&k==-1){\n        java.toast(\"【\" + index + \"】站\\n\" + \"\\n已登录，请勿重复登录！\")\n    }else{\n        if(username==\"\" || psw==\"\"){\n            java.toast(\"用户名或密码为空！\")\n        }else{\n            code = java.getVerificationCode(url+ 'captcha/code.php')\n            request = JSON.stringify({\n                'body': \"Username=\" + username + \"&password=\" + psw + \"&captcha_code=\" + code + \"&loginbtm=\",\n                'method': 'POST'\n            })\n            java.ajax(url + 'login.php,' + request)\n            cckk = java.getCookie(url)\n            cc = String(cckk).indexOf('nick=')\n            kk = String(cckk).indexOf('nick=deleted')\n            if (cc!=-1&&kk==-1) {\n                java.toast(\"⭕【\" + index + \"】站登录成功！\")\n            }else if(cc=-1&&kk=-1){\n                java.longToast(\"验证码错误！\")\n    \t        //java.longToast(\"cckk\"+cckk+\"cc\"+cc+\"kk\"+kk+\"验证码错误！\")\n            }else{\n                java.longToast(\"用户名或密码错误！错误三次将暂时无法登陆一小时！\")\n                //java.longToast(\"cckk\"+cckk+\"cc\"+cc+\"kk\"+kk+\"用户名或密码错误！错误三次将暂时无法登陆一小时！\")\n            }\n        }\n    }\n}\n\nfunction logOut() {\n    url=getUrl()\n    index=getIndex(url)\n    cookie.removeCookie(url)\n    java.toast(\"【\" + index + \"】站\\n\" + \"已退出当前域名登录！\")\n}\n\nfunction getC(){\n\turl=getUrl()\n\tc=java.getCookie(url)\n\tjava.toast(c)\n\t}\n\nfunction login() {}",
    "respondTime": 195515,
    "ruleBookInfo": {
      "author": "",
      "canReName": "1",
      "coverUrl": "class.uk-card.1@img@src",
      "init": "",
      "intro": "class.uk-card.0@textNodes##【作品編號.*\\s.|作家共有\\d+個專欄：[\\s\\S]+",
      "kind": "class.uk-card.1@tag.font.4@text&&class.uk-label@text##(.)攻(.)受##$1$2\n<js>\nstr = String(result);\nresult = str.replace(/原創/g, '原创')\n.replace(/\\//g, ',')\n.replace(/\\[/g, '')\n.replace(/\\]/g, '')\n.replace(/強/g, '强')\n.replace(/.未設置./g, '')\n.replace(/強/g, '强')\n.replace(/現/g, '现')\n.replace(/劇/g, '剧')\n.replace(/結/g, '结')\n.replace(/連載中/g, '连载')\n.replace(/纖細/g, '纤细')\n.replace(/輕/g, '轻')\n.replace(/鬆/g, '松')\n.replace(/馬/g, '马')\n.replace(/園/g, '园')\n.replace(/溫/g, '温')\n.replace(/懸/g, '悬')\n.replace(/職場/g, '职场')\n.replace(/靈異/g, '灵异')\n.replace(/種/g, '种')\n.replace(/網遊/g, '网游')\n.replace(/勵/g, '励')\n.replace(/宮/g, '宫')\n.replace(/會/g, '会')\n.replace(/運動/g, '运动')\n.replace(/話/g, '话')\n.replace(/俠/g, '侠')\n.replace(/羅/g, '罗')\n.replace(/視/g, '视')\n.replace(/帥/g, '帅');\n</js>",
      "lastChapter": "",
      "name": "class.uk-card.0@tag.h4.0@text",
      "tocUrl": "+<js>\nvar str = baseUrl; \nvar id = str.replace(/(.*)bookid=(.*?)&(.*)/, '$2');\nvar body = \"ebookid=\" + id + \"&pages=1&showbooklisttype=1\";\nvar option = {\n         \"method\": \"POST\",\n         \"body\": String(body)\n     }; \"{{getUrl()}}showbooklist.php,\" + JSON.stringify(option)\n </js>"
    },
    "ruleContent": {
      "content": "<js>\npaperid=baseUrl.match(/paperid=(\\d+)/)[1];\ncode=result.match(/vercodechk.*?'[^']+'/)?result.match(/vercodechk.*?'([^']+)'/)[1]:'';\nurl='{{getUrl()}}showpapercolor.php,';\nbody='paperid='+paperid+'&vercodechk='+code;\noption={\n\"method\":\"POST\",\n\"body\":String(body)\n}\nresult=java.ajax(url+JSON.stringify(option));\n\neggs=java.getString('@@class.uk-placeholder.-1@html');\nif(!eggs.match(/【作家想說的話：】|加載中.../) && eggs!=\"\"){\neggs=\"【彩蛋内容：】\"+eggs\n}else{eggs=''}\nwrite=java.getString('@@id.colorpanelwritersay@html');\nresult=result+write+eggs;\nif(!String(result).match(/[\\u4e00-\\u9fa5]/) && !(String(result).match(/login\\.php/))){\nresult=\"此章节需要购买\\n💰\"+java.getString('@@class.uk-card.0@class.uk-list.0@tag.li.10@text&&class.uk-alert-danger@html')\n}else{result=result}\nString(result).match(/login.php/)?'请登录后刷新正文阅读':result\n</js>\n##<.*?mages/fullcolor.png.*?>",
      "imageStyle": "",
      "nextContentUrl": "@js:\nif(result.match(/下方留下評論後可完成敲蛋/)){\nvar id = result.match(/paperid: '\\d+' ,bookwritercode: '([^']+)' ,bookid: '\\d+'/);\ncode=result.match(/vercodechk.*?'[^']+'/)?result.match(/vercodechk.*?'([^']+)'/)[1]:'';\n\nvar id = id[0].replace(/: '/g, '=').replace(/' ,/g,'&').replace(/'/g,'');\nvar body = id + \"&repapergbookid=0&papergbookpage=1&repostmsgtxt=敲&vercodechk=\" + code + \"&postmode=1&giftid=0\";\n\nvar option = {\n         \"method\": \"POST\",\n         \"body\": String(body)\n     };\n\nresult=[\"/papergbookresave.php,\" + JSON.stringify(option), \"/showpapereggs.php,\" + JSON.stringify(option)]\n}",
      "replaceRegex": "##此章节需要购买[\\s\\S]+?💰[\\s\\S]+?此章节需要购买[\\s\\S]+?💰##请刷新正文看彩蛋",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "@js:\nif(baseUrl.indexOf('managemybookcase')>-1){\nresult='{{@@tag.a.0@text}}'\n}else{result='{{@@tag.a.2@text||tag.a.1@text}}'}",
      "bookList": "tag.tbody.0@tag.tr||html",
      "bookUrl": "@js:\nif(baseUrl.indexOf('managemybookcase')>-1){\nresult='{{@@tag.a.1@href}}'\n}else{result='{{@@tag.a.0@href}}'}\njava.put('a',result)",
      "coverUrl": "",
      "intro": "<js>\nif(baseUrl.indexOf('managemybookcase')==-1){\nresult=java.getString('@@text')\n}</js>##.*連載中|.*完結|\\s*",
      "kind": "<js>\nif(baseUrl.indexOf('managemybookcase')==-1){\nresult=java.getString('@@tag.font.2@text&&tag.font.-1@text',false)\n}</js>##/##,@js:result.replace(/原創/g, '')\n.replace(/\\//g, ',')\n.replace(/\\*/g, '')\n.replace(/\\[/g, '')\n.replace(/\\]/g, '')\n.replace(/.未設置./g, '')\n.replace(/男男/g, '')\n.replace(/強/g, '强')\n.replace(/來/g, '来')\n.replace(/現/g, '现')\n.replace(/劇/g, '剧')\n.replace(/結/g, '结')\n.replace(/連載中/g, '连载')\n.replace(/纖細/g, '纤细')\n.replace(/輕/g, '轻')\n.replace(/鬆/g, '松')\n.replace(/馬/g, '马')\n.replace(/園/g, '园')\n.replace(/溫/g, '温')\n.replace(/懸/g, '悬')\n.replace(/職場/g, '职场')\n.replace(/靈異/g, '灵异')\n.replace(/種/g, '种')\n.replace(/網遊/g, '网游')\n.replace(/勵/g, '励')\n.replace(/宮/g, '宫')\n.replace(/會/g, '会')\n.replace(/運動/g, '运动')\n.replace(/話/g, '话')\n.replace(/俠/g, '侠')\n.replace(/羅/g, '罗')\n.replace(/視/g, '视')\n.replace(/帥/g, '帅')",
      "lastChapter": "@js:\nif(baseUrl.indexOf('managemybookcase')>-1){\nresult='{{@@tag.a.2@text}}'\n}",
      "name": "@js:\nif(baseUrl.indexOf('managemybookcase')>-1){\nresult='{{@@tag.a.1@text}}'\n}else{result='{{@@tag.a.0@text||text##原創.*}}'}"
    },
    "ruleSearch": {
      "author": "tag.a.2@text",
      "bookList": "tag.tbody.0@tag.tr!0",
      "bookUrl": "tag.a.0@href<js>java.put('a',result)</js>",
      "coverUrl": "",
      "intro": "td@textNodes",
      "kind": "tag.font.-2@text&&tag.font.2@text##(.)攻(.)受##$1$2\n<js>\nstr = String(result);\nresult = str.replace(/原創/g, '')\n.replace(/\\//g, ',')\n.replace(/\\[/g, '')\n.replace(/\\]/g, '')\n.replace(/.未設置./g, '')\n.replace(/來/g, '来')\n.replace(/男男/g, '')\n.replace(/強/g, '强')\n.replace(/現/g, '现')\n.replace(/劇/g, '剧')\n.replace(/結/g, '结')\n.replace(/連載中/g, '连载')\n.replace(/纖細/g, '纤细')\n.replace(/輕/g, '轻')\n.replace(/鬆/g, '松')\n.replace(/馬/g, '马')\n.replace(/園/g, '园')\n.replace(/溫/g, '温')\n.replace(/帥/g, '帅')\n.replace(/職場/g, '职场')\n.replace(/靈異/g, '灵异')\n.replace(/種/g, '种')\n.replace(/網遊/g, '网游')\n.replace(/勵/g, '励')\n.replace(/宮/g, '宫')\n.replace(/會/g, '会')\n.replace(/運動/g, '运动')\n.replace(/話/g, '话')\n.replace(/俠/g, '侠')\n.replace(/羅/g, '罗')\n.replace(/視/g, '视')\n.replace(/懸/g, '悬')\n</js>",
      "lastChapter": "",
      "name": "tag.a.0@text##《(.*?)》##$1",
      "wordCount": "tag.font.-1@text"
    },
    "ruleToc": {
      "chapterList": "@js:\nlist=result.match(/href=\"([^\"]+)\">(.*?)<[\\s\\S]*?font>(.*?)<[\\s\\S]*?font>(.*?)<[\\s\\S]*?font>(.*?)</g);\narr=[];\nnumber =Number(baseUrl.match(/pages=(\\d+)/)[1]); number = 50*(number-1);\nfor(i in list){\n\ta=list[i].match(/href=\"([^\"]+)\">(.*?)<[\\s\\S]*?font>(.*?)<[\\s\\S]*?font>(.*?)<[\\s\\S]*?font>(.*?)</);\n\tchapternum = (Number(number)+(Number(i)+1))\n\tindex=\"第\"+chapternum+\"章 \";\n\tbv = book.getVariable(\"custom\");\n if(/dl/.test(bv)){index=''}\n\tarr.push({\n\t\t\"name\": index+a[2].replace(/.*(重复|废废弃)章.*|^\\d+[\\.、]/g,''),\n\t\t\"url\":a[1],\n\t\t\"info\":\"刊登时间：\"+a[3]+\"•字数：\"+a[4]+\"•价格：\"+a[5]\n\t\t})\n\t\n\t}\narr",
      "chapterName": "name",
      "chapterUrl": "url",
      "isVolume": "",
      "nextTocUrl": "a@onclick##.*?(\\d+).*?(\\d+).*##/showbooklist.php,{\n         \"method\": \"POST\",\n         \"body\": \"ebookid=$1&pages=$2&showbooklisttype=1\"\n     }",
      "updateTime": "info"
    },
    "searchUrl": "{{getUrl()}}?act=searchlist&searchmode=author&selbooktype=all&searchkeyword={{key}}&selbooktypeb=all&selsexytype=all&selages=all&selstylesa=all&selstylesb=all&selbookpoststats=all&searchkpage={{page}}&fixlangsnd=FsedAjjT6&fixlangact=edit",
    "variableComment": "dl—删除第一个章节序号",
    "weight": 0
  },
  {
    "bookSourceComment": "支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说等\n\n每天限制100章阅读，想要阅读更多请注册密钥后使用，注册密钥是免费自主注册，请提防第三方买卖密钥的行为",
    "bookSourceGroup": "番茄小说",
    "bookSourceName": "IOS软件兼容书源",
    "bookSourceType": 0,
    "bookSourceUrl": "http://110.40.38.4:5008",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐榜单\",\"url\":\"/discover?page={{page}}&side_type=10\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"完结榜单\",\"url\":\"/discover?page={{page}}&side_type=11\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热搜榜单\",\"url\":\"/discover?page={{page}}&side_type=12\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"黑马榜单\",\"url\":\"/discover?page={{page}}&side_type=13\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"爆更榜单\",\"url\":\"/discover?page={{page}}&side_type=15\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"巅峰榜单\",\"url\":\"/discover?page={{page}}&type=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"男频精选\",\"url\":\"/discover?page={{page}}&type=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"女频精选\",\"url\":\"/discover?page={{page}}&type=3\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"每周推荐\",\"url\":\"/discover?page={{page}}&type=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"❦ 男生频道 ❧\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"༺༴ 玄幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=7&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=7&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=7&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=1&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=1&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=1&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 洪荒 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=66&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=66&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=66&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无敌 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 末世 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 诸天万界 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=71&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=71&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=71&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 科幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 星际 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 重生 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 系统 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 神豪 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=20&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=20&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=20&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 鉴宝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=17&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=17&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=17&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 三国 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=67&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=67&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=67&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 二次元 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 历史 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=12&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=12&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=12&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 美食 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 奶爸 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=42&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=42&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=42&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 娱乐圈 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 大唐 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=73&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=73&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=73&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 外卖 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=75&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=75&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=75&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 宠物 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=74&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=74&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=74&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 学霸 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 游戏动漫 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 体育 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=15&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=15&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=15&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 直播 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 年代 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 文化历史 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 海岛 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=40&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=40&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=40&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 神医 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=26&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=26&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=26&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 明朝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=126&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=126&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=126&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 武侠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 灵异 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 穿越 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 剑道 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=80&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=80&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=80&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市修真 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=124&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=124&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=124&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 赘婿 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=25&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=25&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=25&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 盗墓 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 推理 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无限流 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=70&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=70&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=70&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 种田 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 战争 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=97&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=97&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=97&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 天才 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 职场 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 悬疑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 成功励志 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 空间 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 腹黑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 诗歌散文 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 家庭 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 影视小说 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 扮猪吃虎 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 大秦 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=377&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=377&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=377&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 漫威 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=374&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=374&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=374&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 火影 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=368&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=368&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=368&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 西游 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=373&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=373&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=373&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 龙珠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=376&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=376&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=376&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 聊天群 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=381&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=381&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=381&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 海贼 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=370&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=370&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=370&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 奥特同人 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=367&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=367&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=367&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 特种兵 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=375&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=375&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=375&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 反派 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 校花 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=385&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=385&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=385&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 女帝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=378&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=378&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=378&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 单女主 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=389&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=389&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=389&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 神奇宝贝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=371&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=371&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=371&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 九叔 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=383&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=383&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=383&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 求生 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=379&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=379&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=379&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无女主 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=391&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=391&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=391&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 武魂 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=386&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=386&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=386&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 网游 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=372&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=372&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=372&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 战神 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=27&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=27&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=27&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=262&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=262&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=262&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市种田 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=263&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=263&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=263&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市日常 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 历史脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=272&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=272&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=272&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 玄幻脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=257&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=257&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=257&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 奇幻仙侠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=259&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=259&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=259&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市青春 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=396&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=396&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=396&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 传统玄幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=258&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=258&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=258&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 历史古代 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=273&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=273&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=273&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"❦ 女生频道 ❧\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"༺༴ 幻想言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=32&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=32&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=32&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现代言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=3&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=3&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=3&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言甜宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=395&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=395&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=395&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=267&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=267&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=267&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 先婚后爱 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=265&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=265&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=265&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市日常 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=261&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古言脑洞 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=253&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=253&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=253&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古言萌宝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=249&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=249&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=249&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古言甜宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=394&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=394&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=394&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言日常 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=269&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=269&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=269&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 现言复仇 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=268&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=268&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=268&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 玄幻言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=248&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=248&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=248&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 医术 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=247&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=247&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=247&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无敌 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=384&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 种田 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=23&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 萌宝 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=28&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=28&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=28&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 美食 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=78&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 游戏动漫 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=57&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 娱乐圈 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=43&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 直播 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=69&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 女扮男装 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=388&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=388&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=388&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 二次元 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=39&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 团宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=94&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=94&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=94&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 无cp ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=392&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=392&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=392&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 青梅竹马 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=387&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=387&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=387&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 病娇 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=380&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=380&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=380&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 科幻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=8&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 武侠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=16&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 年代 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=79&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 重生 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=36&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 灵异 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=100&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 公主 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=83&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=83&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=83&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 甜宠 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=96&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=96&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=96&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 盗墓 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=81&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 系统 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=19&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 女强 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=86&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=86&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=86&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 皇后 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=84&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=84&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=84&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 推理 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=61&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 文化历史 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=62&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=48&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 反派 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=369&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 末世 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=68&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 悬疑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=10&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 穿越 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=37&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 学霸 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=82&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 扮猪吃虎 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=93&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 清穿 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=76&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=76&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=76&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 穿书 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=382&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=382&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=382&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 快穿 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=24&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=24&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=24&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 皇叔 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=87&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=87&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=87&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 空间 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=44&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 宠妻 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=30&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=30&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=30&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 豪门总裁 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=29&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=29&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=29&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 影视小说 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=45&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 成功励志 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=56&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 职场 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=127&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 民国 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=390&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=390&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=390&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 都市生活 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=2&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 腹黑 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=92&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 星际 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=77&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 天才 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=90&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 古代言情 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=5&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=5&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=5&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 家庭 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=125&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 兽世 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=72&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=72&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=72&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 校园 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=4&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=4&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=4&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 诗歌散文 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=46&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 虐文 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=95&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=95&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=95&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 嫡女 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=88&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=88&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=88&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 王妃 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=85&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=85&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=85&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 精灵 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=89&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=89&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=89&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"༺༴ 马甲 ༴༻\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}},{\"title\":\"推荐排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=266&status=ALL&sort=0\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"评分排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=266&status=ALL&sort=1\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}},{\"title\":\"热门排行\",\"url\":\"/discover?offset={{(page - 1) * 10}}&limit=10&tags=266&status=ALL&sort=2\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.27}}]",
    "header": "",
    "lastUpdateTime": "1741071212647",
    "loginUi": "",
    "loginUrl": "http://110.40.38.4:5008/",
    "respondTime": 309,
    "ruleBookInfo": {
      "author": "",
      "coverUrl": "",
      "init": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "",
      "tocUrl": "",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "$.content",
      "imageStyle": "",
      "nextContentUrl": "",
      "replaceRegex": "",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "$.data.data",
      "bookUrl": "/detail?bookId={{$..book_id}}",
      "coverUrl": "$.thumb_url##(\\d+)-tt##6-novel",
      "intro": "$.abstract##\\s",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$..book_data[*]",
      "bookUrl": "/detail?bookId={{$..book_id}}",
      "coverUrl": "$.thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "$.tags",
      "lastChapter": "$.lastChapterTitlde",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$..chapterListWithVolume[*].*",
      "chapterName": "$.title",
      "chapterUrl": "/no_key_reader?item_id={{$..itemId}}&tone_id=-1",
      "isVip": "",
      "nextTocUrl": "",
      "updateTime": ""
    },
    "searchUrl": "/searchNovel?title={{key}}",
    "variableComment": "",
    "weight": 2
  },
  {
    "bookSourceComment": "20241104新增指定来源搜索\n20241124新增详情页音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器、音色",
    "bookSourceGroup": "番茄小说",
    "bookSourceName": "🍅聚合书源有你喜欢的",
    "bookSourceType": 0,
    "bookSourceUrl": "http://110.40.38.4:5008\nhttps://api.langge.tk\nhttps://api.doubi.tk\nhttp://api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为融合版)",
    "bookUrlPattern": "",
    "customOrder": -7,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"大灰狼阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + key,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"search\": \"-1\",\n            \"tone_id\": \"-1\",\n            \"server\": \"http://110.40.38.4:5008\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "lastUpdateTime": "1741071283525",
    "loginUi": "\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },    {\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前模式\",\n        \"type\": \"button\",\n        \"action\": \"get_search()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎搜小说\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-1','小说搜索')\"\n      },\n      {\n        \"name\": \"🔎搜音频\",\n        \"type\": \"button\",\n        \"action\": \"set_search('0','音频搜索')\"\n      },{\n        \"name\": \"🔎搜漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-2','漫画搜索')\"\n      },\n      {\n        \"name\": \"阅读模式\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('-1','纯净阅读')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n      {\n        \"name\": \"其他音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      }\n    ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    ;\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        }} catch (error) {\n    }\n    ;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';\n}\n\n// 填写密钥\nfunction loginqt() {\n    let key = gets_key()\n    if (key && key != \"\") {\n        java.toast(\"您已填写秘钥:\" + key);\n        return false\n    }\n    java.startBrowserAwait(getArgument('server') + '/check_key', '登录晴天小说书源');\n    key = gets_key()\n    if (key) {\n        java.longToast('登录成功，秘钥：' + key);\n        return true\n    } else {\n        java.toast('登录失败！！！！！');\n        return false\n    }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    return getArguments(open_argument, key);\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() {\n    java.startBrowserAwait(getArgument('server') + '/', \"接口文档\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//获取搜索\nfunction get_search() {\n    var search = getArgument('search');\n    var datadist = {\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"0\": \"音频模式\",\n    };\n    var tishi = '\\n\\n当前搜索模式：' + datadist[search]\n    java.toast(tishi);\n    return search\n}\n\n//设置搜索\nfunction set_search(mode, name) {\n    setArgument('search', mode);\n    setArgument('tone_id', mode);\n    java.toast('\\n\\n已切换至' + name);\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\nfunction zr() {\n    let toast = '\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}\n\nfunction mh() {\n    let toast = '\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}",
    "respondTime": 1017,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "thumb_url",
      "init": "",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n</js>",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "last_chapter_title",
      "name": "book_name",
      "tocUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "checkKeyWord": "炙热沦陷",
      "coverUrl": "thumb_url",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn '无'\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n</js>",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.chapterListWithVolume[*].*\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nlet genreValue = JSON.parse(java.ajax(book.bookUrl)).genre;\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\nvar ms = String(tone_id)\nif (genreValue === '0' && ms === '-1') {\n\tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n} else if (genreValue === '1') {\n\t  if (device === 'android') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n}else if (genreValue === '4') {\n\t   var ms = '0';\n\t   if (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n} else if (genreValue === '9999'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t }else if (genreValue!='0' && genreValue!='1' && genreValue!='4' && ms === '-1'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t } else {\n\t \tif (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n\t \t};\nresult",
      "chapterName": "title",
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "updateTime": "firstPassTime"
    },
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\n\nlet open_argument = source.getVariable();\n\t   \t\t\t   \t\n\t   \t\t\t   \t\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet media;\nif (ms == '0') {\n    media = `${base_url}/searchAudio?title=`+search_title+'&media=喜马拉雅,番茄';\n} else if (ms == '-2') {\n    media = `${base_url}/searchCaricature?title=`+search_title+'&media=番茄';\n} else {\n     media = `${base_url}/searchNovel?title=`+search_title\n}\nkey = '&key=' + key;\n//java.toast(media + key);\nmedia + key",
    "variableComment": "",
    "weight": 63
  }
]