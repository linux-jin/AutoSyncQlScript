[
  {
    "bookSourceComment": "250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增大灰狼书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和大灰狼书架栏目\n2.预计新增阅读记录，阅读过的书籍可在大灰狼书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n",
    "bookSourceGroup": "大灰狼小说会员专属请勿传播,番茄漫画,漫画",
    "bookSourceName": "🍅大灰狼融合漫画2.1",
    "bookSourceType": 2,
    "bookSourceUrl": "http://110.40.80.64:5006/#漫画/",
    "concurrentRate": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "jsLib": "",
    "lastUpdateTime": "1743067524223",
    "loginUi": "",
    "loginUrl": "http://110.40.80.64:5006/login",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.book_detail.thumb_url",
      "init": "$.book_detail",
      "intro": "&nbsp;&nbsp;🎴当前来源：{{$.source}}\n🎯最新章节：{{$.last_chapter_title}}\n⏳更新时间：{{$.last_chapter_update_time}}\n📚书籍简介：\n{{$.abstract}}",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "/catalog?book_id={{$.book_id}}&source={{$.source}}",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "$.content"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "$.data.data",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "$.category",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "checkKeyWord": "我的",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t//如果要显示最新章节，请去除注释，去除会影响搜索速度\n//if ('{{$.source}}'=='番茄'){\n//\t'番茄:'+fq_last();\n//\t} else if ('{{$.source}}'=='七猫'){\n//\t'七猫:'+qm_last();\n//\t} else {\n\t'{{$.source}} {{$.last_chapter_title}}'\n//\t\t}\n\n</js>",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list",
      "chapterName": "$.title",
      "chapterUrl": "/pic?item_id={{$.item_id}}&source={{$.source}}",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "/search?title={{key}}&tab=漫画&source=全部",
    "weight": 60
  },
  {
    "bookSourceComment": "//2025.1.3 ◎夜泽川◎\n//同站一堆",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "番茄[伪]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.fanqxsw.com",
    "customOrder": 160,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\nvar push = (title, url, size) => result.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: size\n  }\n})\npush(\"全部分类\",null,1);\ntg = java.ajax(source.key+\"/list-0/\");\ntag = org.jsoup.Jsoup.parse(tg).select('.condBox dl:nth-of-type(2) a[href^=/list]');\ntag.forEach(fl => {\n  nam = fl.text()\n  ul = String(fl.attr('href')).replace(/\\/$/,\"-{{page}}/\");\npush(nam,ul,0.25);\n})\nJSON.stringify(result);",
    "header": "",
    "lastUpdateTime": "1743232427941",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nz:\"class.t_c.2@text##字数：\",\nm:\".btnGreen2@href\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js: \nso = java.ajax(baseUrl.replace(/book/,\"chapter\"));\njava.setContent(so);\nvar id = baseUrl.match(/book\\/(.*?)\\.html/)[1];\njava.put(\"id\",id);\nvar pages = java.getStringList(\"option@value\");\njava.put(\"page\",pages.length);\nresult = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n  \"body\": `id=${id}&page=1`,\n  \"method\": \"POST\"\n});",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "imageStyle": "",
      "nextContentUrl": "[class~=pageDown|btnGray]@href",
      "replaceRegex": "##.*{{source.key}}.*|\\n+.*章节错误,点此举报.*\\n+|\\(https?.*\\/book\\/.*\\)|.*首发域名.*"
    },
    "ruleExplore": {
      "author": ".time@span.0@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".about@span@text##\\[|\\]",
      "lastChapter": ".chapter@text",
      "name": ".name a@text"
    },
    "ruleSearch": {
      "author": "a[href~=author][0]@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".info a[href~=list]@text",
      "lastChapter": ".infoM2@a.-1@text",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "$.data",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js: result = []\nid = java.get(\"id\");\npages = java.get(\"page\");\nfor (let i = 2 ; i <= pages ; i++) {\noption = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n  \"body\": `id=${id}&page=${i}`,\n  \"method\": \"POST\"\n});\nresult.push(option);\n}\nresult;"
    },
    "searchUrl": "@js: \nvar url = java.ajax(source.key).match(/window\\.location\\.href=\\'([^']+)/)[1];\njava.log(url);\ncookie.removeCookie(url);\nvar kku = url.replace(/\\/\\?.*$/,\"\");\n//java.log(kku);\nvar ckk = java.get(url,{});\nvar ck = cookie.getCookie(url);\njava.log(ck);\nvar result = kku + \"/keywords-{{key}}-{{page}}.html\" + \",\" + JSON.stringify({\n\t\"headers\":{\"Cookie\":ck}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增大灰狼书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和大灰狼书架栏目\n2.预计新增阅读记录，阅读过的书籍可在大灰狼书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n",
    "bookSourceGroup": "大灰狼小说",
    "bookSourceName": "🍅大灰狼融合2.1兼容版",
    "bookSourceType": 0,
    "bookSourceUrl": "http://110.40.80.64:5006",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\": \"男♂️生\", \"url\": \"\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 1}}, {\"title\": \"都市\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=1\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=7\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=36\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=262\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市修真\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=124\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"系统\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=19\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"赘婿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=25\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"神豪\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=20\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市日常\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=261\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=23\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=12\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"打脸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=522\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=2\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史古代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=273\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"西游\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=373\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天才\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=90\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"诸天万界\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=71\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"鉴宝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=17\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=263\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"推理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=61\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"架空\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=452\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=8\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"东方玄幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=511\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武侠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=16\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"特种兵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=375\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"盗墓\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=81\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"剑道\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=80\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"空间\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=44\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无敌\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=384\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"三国\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=67\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"外卖\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=75\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"奶爸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=42\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"乡村\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=11\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=538\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"末世\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=68\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市异能\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=516\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"海岛\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=40\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏体育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=746\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"二次元\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=39\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"洪荒\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=66\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"求生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=379\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"体育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=15\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大唐\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=73\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"明朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=126\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"扮猪吃虎\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=93\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=272\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"星际\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=77\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"校花\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=385\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"直播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=69\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"年代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=79\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家庭\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=125\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宠物\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=74\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"网游\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=372\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"衍生同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=718\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"娱乐圈\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=43\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"开局\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=453\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=127\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大小姐\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=519\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大秦\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=377\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"单女主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=389\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"抗战谍战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=504\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"聊天群\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=381\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"美食\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=78\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"末日求生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=515\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"搞笑轻松\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=778\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=539\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"修仙\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=517\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"反派\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=369\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"腹黑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=92\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"电竞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=508\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"学霸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=82\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"影视小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=45\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市青春\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=396\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"异世大陆\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=512\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"特工\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=518\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"官场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=788\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无限流\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=70\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏主播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=509\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大佬\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=520\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"女帝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=378\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵气复苏\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=514\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"神探\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=506\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武将\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=497\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"火影\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=368\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无女主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=391\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"龙珠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=376\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宋朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=501\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"钓鱼\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=493\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"皇帝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=498\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿书\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=382\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"囤物资\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=494\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"漫威\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=374\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=48\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"高武世界\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=513\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"海贼\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=370\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"奥特同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=367\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"战争\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=97\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"神奇宝贝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=371\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"断层\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=500\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"惊悚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=322\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宫廷侯爵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=502\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"九叔\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=383\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"综漫\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=465\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文学小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=47\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"谍战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=507\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成功励志\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=56\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"国运\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=496\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=524\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"克苏鲁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=705\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"清朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=503\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"四合院\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=495\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=62\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}},{\"title\": \"女♀️生\", \"url\": \"\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 1}}, {\"title\": \"现代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=3\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门总裁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=29\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=5\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宠妻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=30\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"甜宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=96\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿越\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=37\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宫斗宅斗\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=246\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"霸总\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=748\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"萌宝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=28\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"王妃\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=85\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=36\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"HE\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=484\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"幻想言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=32\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=2\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"腹黑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=92\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门世家\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=473\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=23\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门爽文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=745\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=267\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=248\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"嫡女\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=88\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场婚恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=750\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"医术\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=247\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"打脸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=522\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"虐渣\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=457\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"空间\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=44\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"女强\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=86\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"日久生情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=474\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"娱乐圈\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=43\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家庭\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=125\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"团宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=94\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"今穿古\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=463\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"皇后\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=84\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=100\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天才\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=90\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"闪婚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=466\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"校园\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=4\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"系统\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=19\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"公主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=83\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"独宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=460\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"马甲\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=266\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"虐文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=95\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"婚恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=34\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"契约婚姻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=471\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"护短\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=458\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"年代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=79\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=10\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"一见钟情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=477\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑恋爱\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=747\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=253\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"前世今生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=523\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"青梅竹马\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=387\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大佬\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=520\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"毒医\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=491\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"快穿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=24\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"带球跑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=479\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"学霸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=82\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"影视小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=45\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"冰山\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=468\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"病娇\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=380\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"精灵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=89\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大小姐\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=519\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"扮猪吃虎\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=93\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"明星\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=486\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"相爱相杀\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=483\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无敌\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=384\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"乡村\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=11\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"情有独钟\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=456\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"推理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=61\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"替身\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=470\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"美食\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=78\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"强强\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=478\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"破镜重圆\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=475\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿书\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=382\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"反派\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=369\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"将军\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=492\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"皇叔\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=87\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"异世穿越\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=464\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"医生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=487\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无CP\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=392\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"二次元\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=39\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"兽世\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=72\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"民国\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=390\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"逃婚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=480\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双面\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=469\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=524\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"直播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=69\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"女扮男装\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=388\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"搞笑轻松\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=778\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=127\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"盗墓\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=81\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古灵精怪\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=459\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"末世\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=68\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古穿今\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=462\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"暗恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=482\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双向奔赴\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=476\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"律师\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=488\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"隐婚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=467\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天作之合\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=455\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言萌宝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=489\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"清穿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=76\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双洁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=702\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"可盐可甜\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=454\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"星际\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=77\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"作精\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=521\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"厨娘\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=490\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双男主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=275\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=538\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=539\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武侠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=16\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言复仇\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=268\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏体育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=746\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=8\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"衍生同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=718\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"囤物资\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=494\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市日常\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=261\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"群穿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=461\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"电竞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=508\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏主播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=509\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场商战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=485\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双女主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=704\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文学小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=47\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"综漫\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=465\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"四合院\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=495\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=62\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=48\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"战争\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=97\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"逃荒\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=557\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成功励志\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=56\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"抗战谍战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=504\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}},{\"title\": \"出版\", \"url\": \"\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 1}}, {\"title\": \"文学小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=47\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=3\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现实小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=400\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"经济管理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=53\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"社会科学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=50\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"诗歌散文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=46\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=62\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成功励志\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=56\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史传记\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=404\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"人文社科\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=405\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"当代文学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=399\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"经典国学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=423\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文学理论\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=401\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"个人成长\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=410\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=5\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=48\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"腹黑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=92\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"人际交往\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=412\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"中国名著\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=98\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"中国历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=402\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宫斗宅斗\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=246\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=1\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市日常\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=261\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=2\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=12\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=248\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"精灵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=89\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家庭\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=125\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"王妃\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=85\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"亲子家教\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=415\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=127\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场婚恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=750\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门总裁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=29\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"影视小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=45\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"甜宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=96\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宠妻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=30\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"心理学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=407\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=7\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=10\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"推理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=61\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化艺术\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=413\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"幻想言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=32\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"思维智商\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=411\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"公主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=83\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"保健养生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=416\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿越\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=37\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"外国文学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=397\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"人物传记\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=409\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"世界历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=403\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"两性\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=274\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武侠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=16\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"校园\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=4\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"外国名著\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=99\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"美食休闲\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=419\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"政治军事\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=408\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"哲学宗教\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=406\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"风水占卜\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=421\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"国学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=116\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科技\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=52\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"娱乐圈\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=43\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"法律\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=142\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"教育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=54\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成人教育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=722\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史古代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=273\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=23\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=267\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"战争\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=97\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天才\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=90\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=100\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家居旅游\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=420\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=36\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"青梅竹马\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=387\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=8\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"直播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=69\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=751\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=253\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古代文学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=398\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"民国\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=390\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"盗墓\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=81\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=262\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门爽文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=745\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"官场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=788\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"霸总\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=748\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"年代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=79\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"学霸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=82\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"明朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=126\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"时尚美妆\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=418\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}]",
    "jsLib": "",
    "lastUpdateTime": "1743067813543",
    "loginUi": "",
    "loginUrl": "http://110.40.80.64:5006/login",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.book_detail.thumb_url",
      "init": "$.book_detail",
      "intro": "&nbsp;&nbsp;🎴当前来源：{{$.source}}\n🎯最新章节：{{$.last_chapter_title}}\n⏳更新时间：{{$.last_chapter_update_time}}\n📚书籍简介：\n{{$.abstract}}",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "/catalog?book_id={{$.book_id}}&source={{$.source}}",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "$.content"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "$.data.data",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "$.category",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "checkKeyWord": "我的",
      "coverUrl": "$.thumb_url",
      "intro": "{{$.source}}:{{$.abstract}}",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list",
      "chapterName": "$.title",
      "chapterUrl": "/content?item_id={{$.item_id}}&source={{$.source}}&key=",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "/search?title={{key}}&source=all",
    "weight": 60
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://v1.shushan.xyz:50001\nhttp://v2.shusan.cn:39002\nhttp://v2.shusan.xyz:39002\nhttp://v3.shusan.xyz:50006\nhttp://v3.shushan.xyz:50006\n*/\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增书山书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和书山书架栏目\n2.预计新增阅读记录，阅读过的书籍可在书山书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增书山书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceName": "📚书山融合2.1（完全版）",
    "bookSourceType": 0,
    "bookSourceUrl": "http://v1.shushan.xyz:50001",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"书山书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1743248415981",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录书山账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚书山书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','书山书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录书山小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('http://fb.shushan.vip:9999/', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\njava.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录书山账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄书山账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('书山融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t\nif ('{{$.source}}'=='番茄'){\n\t'番茄:'+fq_last();\n\t} else if ('{{$.source}}'=='七猫'){\n\t'七猫:'+qm_last();\n\t} else {\n\t\t'{{$.source}}'\n\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\ntry {\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet url = `${base_url}/get_user_bookshelf?book_id=${book_detail.book_id}&source=${book_detail.source}`;\n//java.toast(url);\nlet getbook =JSON.parse(java.ajax(url)).books;\nlet is_bookshelf;\nlet data = [];\nif (book.order < 0 && !getbook.length) {\n\t// 在阅读书架，不在书山书架，同步到书山书架\n    book_detail.is_bookshelf = true;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n} else if ( book.order < 0 && getbook.length) {\n\t// 在阅读书架，在书山书架\n\t  var books=getbook[0];\n    books.is_bookshelf = true;\n    data.push(books);\n} else if (book.order >= 0 && !getbook.length) {\n\t// 不在阅读书架，不在书山书架，留下浏览记录\n\t   book_detail.is_bookshelf = false;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n\t} else if (book.order >= 0 && getbook.length) {\n\t// 不在阅读书架，在书山书架，书山书架下架\n\t   var books=getbook[0];\n    books.is_bookshelf = false;\n    //data.push(books);\n\t}\nif (data.length) {\n\tvar option = {\n\"method\": \"POST\",\n\"body\": JSON.stringify(data),\n};\n    java.ajax(`${base_url}/push_user_bookshelf,`+JSON.stringify(option));\n    }\n\t} catch (e) {};\n\tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet device;\nlet device_type;\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n\nlet content_url = `${item_id}书山融合2.1${tab}书山融合2.1${title}书山融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "┍　　　说明　　　作者：洛娅橙　　┒\n├────────────────┤\n│①书源默认优化正文加载，可能会导│\n│致下载书籍异常，在该登录界面点击│\n│启用下载即可。　　　　　　　　　│\n│②登录界面开启同步书架功能，在详│\n│情页下拉刷新两次或书架刷新，会自│\n│动同步至网站书架。　　　　　　　│\n│③支持屏蔽书籍为黑名单，之后在搜│\n│索和发现不再显示屏蔽后的书籍。误│\n│点时，可再次点击进行恢复。　　　│\n│④输出名单到日志需要在软件其它设│\n│置里开启记录日志功能。　　　　　│\n├────────────────┤\n│　　　　　　　　　　　　　　　　│\n│请使用阅读最新测试版导入该书源　│\n└────────────────┘\n┍　　　　书源作者：洛娅橙　　　　┒\n├───┬────────────┤\n│！免责│本书源只提供代码进行技术│\n│！声明│交流，请于２４小时后删除│\n├───┴────────────┤\n│可在书源登录界面进行登录　　　　│\n│书籍变量可用来进行交互，详情查看│\n│相应界面的变量说明　　　　　　　│\n└────────────────┘\n___________________________________________\n八叉发布页：https://8xsk.org\nip地址查看：https://iplark.com",
    "bookSourceGroup": "🙈,八叉",
    "bookSourceName": "🌈八叉书库",
    "bookSourceType": 0,
    "bookSourceUrl": "https://八叉书库.luoyacheng.ip-ddns.com",
    "bookUrlPattern": "https://www.(?:\\d+\\.xyz|8xbook.+)/book/\\d+\\.html",
    "concurrentRate": "1000",
    "coverDecodeJs": "",
    "customOrder": 11,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.5.1\";\nftsm();\neval(String(source.loginUrl));\nlet surl = `{{String(source.getVariable()).replace(/\\\\/$/,'')}}`;\n\nvar obj = {\n\t最近更: {\n\t\t\"url\": \"/sort/0/{{page}}.html\",\n\t\t\"fg\": 9},\n\t\t'新(肉)':{\n\t\t\"url\": \"/sort/7/{{page}}.html\",\n\t\t\"fg\": 1},\n\t最近入库: {\n\t\t\"url\": \"/top/postdate/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t最近完: {\n\t\t\"url\": \"/modules/article/articlelist.php?fullflag=1&page={{page}}\",\n\t\t\"fg\": 9,\n\t\t\"wrap\": true},\n\t\t'结(肉)':{\n\t\t\"url\": \"/modules/article/articlelist.php?sortid=7&fullflag=1&page={{page}}\",\n\t\t\"fg\": 1},\n\t签约新书: {\n\t\t\"url\": \"/top/signtime/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t字数榜: {\n\t\t\"url\": \"/top/words/{{page}}.html\",\n\t\t\"wb\": true},\n\t收藏榜: {\n\t\t\"url\": \"/top/goodnum/{{page}}.html\"},\n\t新书榜: {\n\t\t\"url\": \"/top/newhot/{{page}}.html\"},\n\t\t\n\t总点击: {\n\t\t\"url\": \"/top/allvisit/{{page}}.html\",\n\t\t\"wb\": true},\n\t月点击: {\n\t\t\"url\": \"/top/monthvisit/{{page}}.html\"},\n\t周点击: {\n\t\t\"url\": \"/top/weekvisit/{{page}}.html\"},\n\t\t\n\t总推荐: {\n\t\t\"url\": \"/top/allvote/{{page}}.html\",\n\t\t\"wb\": true},\n\t月推荐: {\n\t\t\"url\": \"/top/monthvote/{{page}}.html\"},\n\t周推荐: {\n\t\t\"url\": \"/top/weekvote/{{page}}.html\"},\n\t\t搜索: {\n\t\t\turl: \t`{{\n\t\t\t\tlet surl = String(source.getVariable()).replace(/\\\\/$/,'');\n\t\t\t\tif (page == 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\tlet [cb,cf] = colorz();\n\t\t\t\t\tsvg=\\`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"100%\" height=\"150%\" fill=\"#\\${cb}\"/><text fill=\"#\\${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\"><tspan x=\"50%\" dy=\"30%\" font-size=\"100\">请输入搜索关键词</tspan><tspan x=\"50%\" dy=\"50%\" font-size=\"50\">此处搜索不支持完整书名</tspan></text></svg>\\`;\n\tsvg=java.base64Encode(svg);\n\tkeyy=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\n\t\t\t\t\t} catch(err) {keyy='系统';\n\t\t\t\t\tPackages.java.lang.Thread.sleep(500);\n\t\t\t\t\tjava.toast('使用默认关键词“系统”');}\n\t\t\t\t\tsource.put('keyy',keyy);\n\t\t\t\t\t\t}\n\t\t\t\telse keyy = source.get('keyy');\n\t\t\t\turl =\tsurl+'/modules/article/search.php?searchkey='+keyy+'&searchtype=all&page='+page;\n\t\t\t\turl\n\t\t\t}}`,\n\t\t\t\"fb\": 0.3,\n\t\t\t\"wb\": true},\n\t我的书架: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\tlet surl = String(source.getVariable()).replace(/\\\\/$/,'');\n\t\tlet ck = source.getLoginHeader()||'HWTOKEN=';\n\t\tcookie.replaceCookie(surl,ck);\n\t\tck ? surl+'/modules/article/bookcase.php' : java.longToast('请登录账号');\n\t\t} else 'http://127.0.0.1/';\n\t\t}}`,\n\t\t\"fb\": 0.3}\n\t}\n\nvar sort = [];\npush = (title, url, size, wrap, cc) => sort.push({\n    \"title\": title,\n    \"url\": url.startsWith(\"{{\") ? url : url ? surl + url : \"\",\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: cc || -1,\n      layout_wrapBefore: wrap ? wrap : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\n\n//版本号\npush(\"版本号:\"+banben+\"　点我刷新地址\", `{{if(page==1) {\n\tjava.put(\"bj1\", 0);\n\tcache.put('8xbl1', source.getVariable());\n\tsource.setVariable(''); gengxin();\n\teval(String(source.loginUrl));\n\tif (java.get(\"bj1\")==1) java.longToast('源地址没有更新');;}\n\t'http://127.0.0.1/'+page}}`, 1, true);\npush(\"测速/更新\",`{{eval(String(source.loginUrl));gengxin(); Packages.java.lang.Thread.sleep(100); ceshi(); 'http://127.0.0.1/'}}`, 1);\n\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n   // let ck = source.getLoginHeader() || '';\n    nn = String(source.getVariable());\n    let ck = cookie.getCookie(nn);\n    let headers = {\n    \t'User-Agent': ua,\n    \t'x-requested-with': x_r_w,\n    \t'sec-ch-ua': s_c_u,\n    \t'sec-ch-ua-platform': s_c_u_p,\n    \t'cookie': ck\n    \t };\n    \t return JSON.stringify(headers);\n})();",
    "jsLib": "ua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.2957.129';\nx_r_w = 'com.microsoft.emmx';\ns_c_u_p = 'Android';\ns_c_u = `\"Not(A:Brand\";v=\"99\", \"Android WebView\";v=\"133\", \"Chromium\";v=\"133\"`;\nfunction colorz() {\n\tconst {java, source} = this;\n\tlet cb,cf;\n\ttry {\n\t\tcb = source.getLoginInfoMap().get('封面背景颜色');\n\t\tif (cb=='') throw '空';\n\t\t} catch(err) {cb='151E27';}\n\ttry {\n\t\tcf = source.getLoginInfoMap().get('封面字体颜色');\n\t\tif (cf=='') throw '空';\n\t\t} catch(err) {cf='dddddd';}\nreturn [cb,cf];\n}\n\nfunction hexToInt(e, t) {\n        var r = e.substr(t, 2);\n        return parseInt(r, 16);\n    }\nfunction decodeEmail(n, c) {\n    var o = \"\", a = hexToInt(n, c), i = c + 2;\n    for (i; i < n.length; i += 2) {\n        var l = hexToInt(n, i) ^ a;\n        o += String.fromCharCode(l);\n    }\n        o = decodeURIComponent(escape(o));\n        return o\n}\n\n\nfunction ftsm(){\n\tconst {java, source} = this;\n\tlet nm = source.get('8xftn');\n\tif(nm==''||nm<0) {nm=3;}\nif(nm>0) {\n\tnm--;\n\tsource.put('8xftn',nm);\n\tlet ss = String(source.bookSourceComment).match(/\\n┍[^┘]+┘/)[0];\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);\n\tPackages.java.lang.Thread.sleep(2000);\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);}\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<title>更新</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://gitee.com/lyc486/yuedu2/raw/main/书源/八叉/8x.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/书源/八叉/8x.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'更新');\r\n}\n\nfunction tbshujia(iuu,iid){\nconst {java, source} = this;\nlet iuux=iuu+'/modules/article/addbookcase.php';\nlet iuuy=String(iuu+'/book/'+iid+'.html'); //需要转化否则报错\nlet tm = new Date().getTime();\nlet body = `bid=${iid}&ajax_request=${tm}`;\nlet ck = source.getLoginHeader()||'';\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': iuuy,\n        'cookie': ck\r\n    };\nif (String(ck).includes(\"jieqiUserInfo\") ) {\nlet by = java.post(iuux,body,headers).body();\njava.longToast('\\n'+this.book.name+'：\\n'+by);}\n}\n\nfunction hmdjib(id,name){\nconst {java, source, cache} = this;\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet i=false;\n\ttry {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名黑名单');\n\t\tlet rg = eval(String(rgstr));\n\t\ti=rg.test(name);\n\t\t} catch(err) {}\n\ttry {\n\t\tif (i) {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名白名单');\n\t\tlet rg = eval(String(rgstr));\n\t\t i=!rg.test(name);\n\t\t }\n\t\t} catch(err) {}\n\t\ti = i||(id in hmd);\n\t\treturn i;\n\t}\n\nOranges = `<path d=\"M646.4 763.6c150.1-15.8 267.1-142.7 267.1-297 0-164.9-133.7-298.7-298.7-298.7-154.8 0-282.1 117.8-297.2 268.7\" fill=\"#FA9F23\" p-id=\"5624\"></path><path d=\"M648.6 784.8l-4.5-42.4c67.7-7.1 130.3-39 176.3-89.7 46.3-51.1 71.7-117.2 71.7-186.1 0-74.1-28.8-143.7-81.2-196.1-52.4-52.4-122-81.2-196.1-81.2-69.2 0-135.5 25.6-186.6 72.2-50.8 46.3-82.5 109.2-89.3 177.3l-42.5-4.2c7.8-78.6 44.4-151.2 103-204.6 59-53.7 135.5-83.3 215.4-83.3 85.5 0 165.8 33.3 226.3 93.7 60.4 60.4 93.7 140.8 93.7 226.3 0 79.6-29.4 155.9-82.8 214.8-53 58.3-125.2 95.1-203.4 103.3z\" fill=\"#333333\" p-id=\"5625\"></path><path d=\"M161.5 832.4c116.6 116.6 305.7 116.6 422.4 0s116.6-305.7 0-422.4\" fill=\"#FA9F23\" p-id=\"5626\"></path><path d=\"M372.7 941.2c-85.5 0-165.8-33.3-226.3-93.7l30.2-30.2c52.4 52.4 122 81.2 196.1 81.2s143.7-28.8 196.1-81.2c52.4-52.4 81.2-122 81.2-196.1s-28.8-143.7-81.2-196.1l30.2-30.2c60.4 60.4 93.7 140.8 93.7 226.3S659.4 787 599 847.5c-60.5 60.4-140.8 93.7-226.3 93.7z\" fill=\"#333333\" p-id=\"5627\"></path><path d=\"M161.480941 832.416461a170.7 298.7 44.999 1 0 422.418218-422.432964 170.7 298.7 44.999 1 0-422.418218 422.432964Z\" fill=\"#FBE0C3\" p-id=\"5628\"></path><path d=\"M249.1 885.8c-9.3 0-18.4-0.7-27.2-2-30.5-4.6-55.9-16.8-75.5-36.4-19.6-19.6-31.8-45-36.4-75.5-4.2-28-1.7-59 7.4-92.4 18.1-66.2 60.5-135.2 119.5-194.2S364.9 384 431.1 366c33.3-9.1 64.4-11.6 92.4-7.4 30.5 4.6 55.9 16.8 75.5 36.4s31.8 45 36.4 75.5c4.2 28 1.7 59-7.4 92.4C609.9 629 567.5 698 508.5 757s-128 101.4-194.2 119.5c-22.9 6.2-44.7 9.3-65.2 9.3z m18-370.2c-53.8 53.8-92.4 116.1-108.5 175.2-15 55-8.6 99.9 18 126.5s71.5 33 126.5 18c59.2-16.1 121.4-54.7 175.2-108.5 53.8-53.8 92.4-116.1 108.5-175.2 15-55 8.6-99.9-18-126.5s-71.5-33-126.5-18c-59.1 16.2-121.4 54.7-175.2 108.5z\" fill=\"#333333\" p-id=\"5629\"></path><path d=\"M373.3 641.5h148.4c-16.2 23.8-35.8 47.6-58.5 70.2-28.9 28.9-59.7 52.9-90 71.1l0.1-141.3z m187.1-193.4c27 37.3 15.7 103.4-25.2 172.1H388.3l172.1-172.1zM351.9 656.6v138.2c-61.4 31.7-118.7 38.6-152.4 14.2l152.4-152.4z m-152.5-15.1h137.4L184.6 793.8c-24-33.9-16.9-91.1 14.8-152.3z m173.9-182.6c68.5-40.9 134.5-52.4 172-25.9l-172 172V458.9z m-91.1 71.8c22.5-22.5 46.1-42 69.7-58.1v147.6H211.4c17.6-29.1 40.4-58.6 67.8-86.5l3-3z\" fill=\"#F5A74A\" p-id=\"5630\"></path><path d=\"M625.8 266.5l-13.5 9.9c-1.9 1.4-4.6 1-6-0.9-0.6-0.9-0.9-1.9-0.8-3l1.8-16.7L592 249c-2.2-1-3.1-3.5-2.2-5.6 0.4-1 1.2-1.8 2.2-2.2l15.3-6.8-1.8-16.7c-0.3-2.3 1.4-4.4 3.8-4.7 1.1-0.1 2.1 0.2 3 0.8l13.5 9.9 13.5-9.9c1.9-1.4 4.6-1 6 0.9 0.6 0.9 0.9 1.9 0.8 3l-1.8 16.7 15.3 6.8c2.2 1 3.1 3.5 2.2 5.6-0.4 1-1.2 1.8-2.2 2.2l-15.3 6.8 1.8 16.7c0.3 2.3-1.4 4.4-3.8 4.7-1.1 0.1-2.1-0.2-3-0.8l-13.5-9.9z\" fill=\"#333333\" p-id=\"5631\"></path><path d=\"M799.4 313.5m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5632\"></path><path d=\"M828.4 348.3m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5633\"></path>`;\n\nfunction jinghuafm() {\nconst {java, source} = this;\t\nfunction splitString(str) {\n    const length = str.length;\n    if (length < 15) {\n        return length<9 ? [str] : [\n            str.slice(0, 7),\n            str.slice(7)\n        ].filter(s => s);\n    } else if (length < 20) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13)\n        ].filter(s => s);\n    }  else if (length < 24) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13,18),\n            str.slice(18)\n        ].filter(s => s);\n    } else {\n        return [\n            str.slice(0, 7),\n            str.slice(7, 13),\n            str.slice(13, 18),\n            str.slice(18, 22),\n            str.slice(22)\n        ].filter(s => s);\n    }\n}\nfunction pingString(ss) {\nlet rr='';\nlet l1=ss.length;\nfor (let i1=0; i1<l1; i1++) {\n\tlet c1=ss[i1], l2=c1.length;\n\tfor (let i2=0; i2<l2; i2++) {\n\t\tlet c2=c1.charAt(i2);\n\t\trr += `<tspan x=\"${100+180*ii}\" y=\"${180+170*(i2+i1)}\">${c2}</tspan>`;\n\t\t}\n\t\tii++;\n\t}\n\treturn rr;\n}\n\nlet [cb,cf] = colorz();\n\nlet bknm=String(this.book.name).replace(/\\.{2,}/,'…');\nbknm=bknm.match(/[a-z][a-z\\+一-ꀀ\\d…]+|[一-ꀀ\\da-z]{2,}(?:\\.\\d+[一-ꀀ]*|[…？])?|[一-ꀀ]/gi);\nlet hz='';\nlet ii=0;\n\nfor (char of bknm) {\n\thz += pingString(splitString(char) );\n\t}\n\nsvg = `<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5623\" width=\"100%\" height=\"100%\">\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<g transform=\"scale(0.4) translate(1600,2500)\">${Oranges}</g>\n<text fill=\"#${cf}\" stroke=\"#000000\" stroke-width=\"2\" font-weight=\"bold\" font-size=\"150\" text-anchor=\"middle\" dominant-baseline=\"middle\">\n${hz}\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\nreturn 'data:image/svg+xml;base64,'+svg;\n}\n",
    "lastUpdateTime": "1743235754185",
    "loginCheckJs": "//java.toast('登录检查:'+result);\nlet code = result.code();\nif (code == 403) {\n\tjava.toast('\\n访问被拒绝');\n\t}\nelse if (code == 520) {\n\tjava.toast('\\nIP被拉黑');\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"账号\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    },\n    {\n        name: \"💍注册\",\n        type: \"button\",\n        action: \"web()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"🔺登　录🔺\",\n        type: \"button\",\n        action: \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"♤登出\",\n        type: \"button\",\n        action: \"re()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n    \tname: \"💬说明\",\n    \ttype: \"button\",\n    \taction: \"sm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    \t},\n    \t{\n        name: \"🧾延迟测试\",\n        type: \"button\",\n        action: \"ceshi()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"⏭️启用下载\",\n        type: \"button\",\n        action: \"downl()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐打开本书↓\",\n        type: \"button\",\n        action: \"webb()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"❌屏蔽\",\n        type: \"button\",\n        action: \"hmd()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🧹清理\",\n        type: \"button\",\n        action: \"hmdre()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🆕版本更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"♻️同步书架\",\n        type: \"button\",\n        action: \"shujia()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书架\",\n        type: \"button\",\n        action: \"webbs(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"正则书名黑名单\",\n        type: \"text\"\n    },\n    {\n        name: \"正则书名白名单\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐查看日志\",\n        type: \"button\",\n        action: \"gitee()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"🌐网站选书\",\n        type: \"button\",\n        action: \"webbs(2)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🔁书名\",\n        type: \"button\",\n        action: \"shuming()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🗻净化封面\",\n        type: \"button\",\n        action: \"jhfm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书源介绍\",\n        type: \"button\",\n        action: \"java.startBrowser('https://www.luoyacheng.ip-ddns.com/#八叉','介绍');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🤔反馈\",\n        type: \"button\",\n        action: \"java.startBrowser('https://github.com/Luoyacheng/yuedu/issues','8x反馈');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"封面背景颜色\",\n        type: \"text\"\n    },\n    {\n        name: \"封面字体颜色\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐网页登录\",\n        type: \"button\",\n        action: \"weblogin()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    }\n]",
    "loginUrl": "nn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\nlet rr=java.connect('https://www.8xsk.org/');\nlet ur=(rr.body().match(/电脑主站[^\"]+\\\"([^\"]+)\\\"/)||['',''])[1];\nlet x = cache.get('8xbl1');\nif (ur == '') {\n\tjava.longToast(\"书源地址获取失败💔\");\n\tsource.setVariable(x);\n\tPackages.java.lang.Thread.sleep(300);\n\t}\nelse {\n\tif (ur != x) {\n\t\t\tjava.log(\"八叉源地址更新：\"+ur);\n\t\t\tjava.longToast(\"🎉书源地址已更新\");\n\t\t\tcache.put('8xbl1',ur);\n\t\t\tPackages.java.lang.Thread.sleep(300);}\n\t\telse {java.put(\"bj1\", 1);}\n\t\t\tsource.setVariable(ur);\n\t\t\tnn = ur;\n\t}\n}\n\nfunction login(){}\r\nfunction Login(){\n\tjava.longToast('\\n正在登录...\\n稍等一下');\n\tsource.removeLoginHeader();\n//\tcookie.removeCookie(nn);\n\tlet wbjs=`\n\t\tconst inpt = document.querySelector('input[name=\"checkcode\"]');\n\t\tconst oCode = inpt.getAttribute(\"onfocus\");\n\t\tconst url=oCode.match(/src\\\\s*=\\\\s*[\"']([^\"']+)/)[1];\n\t\turl\n`;\n    let url0=java.webView(null,nn,wbjs);\n    /^http/.test(url0)&&java.toast('\\n💔获取验证码链接失败');\n    let code=java.getVerificationCode(url0);\n    let ck = cookie.getCookie(nn);\r\n    let url = nn+'/login.php';\r\n    let un = result['账号'];\r\n    let pw = result['密码'];\r\n    let time = new Date().getTime();\n    let body = `username=${un}&password=${pw}&checkcode=${code}&usecookie=1&act=login&jumpreferer=1&t_btnlogin=&ajax_request=${time}`;\n\r\n    let headers = {\r\n        'referer': nn,\n        \t'user-agent': ua,\n        \t'x-requested-with': x_r_w,\n        \t'sec-ch-ua-platform': s_c_u_p,\n        \t'cookie': ck};\n    \n    if (un!=''&&pw!=''&&url0!='') {\n    let cookie1 = java.post(url,body,headers).cookies();\n    let ck = cookie.mapToCookie(cookie1);\n    //处理cookie格式\r\n    source.putLoginHeader(ck);\n  //  cookie.removeCookie(nn);\n    let i = String(ck).includes(\"jieqiUserInfo\");\n    //会存入登录信息，无需点✓\r\n    if (i) {source.putLoginInfo(JSON.stringify(result));java.toast(\"登录成功，VIP模式💎\");}\r\n    else java.toast(\"登录失败，访客模式🔒\");\n    } else {java.toast(\"💔账号和密码不能为空\");}\n\r\n}\n\nfunction weblogin(){\n\tsource.removeLoginHeader();\n\tlet url = nn.replace('www.','') + '/login.php';\n\tjava.startBrowserAwait(url, '八叉登录');\n\tPackages.java.lang.Thread.sleep(300);\n\tlet ck = cookie.getCookie(nn);\n\tlet i = String(ck).includes(\"jieqiUserInfo\");\n\tif (i) {source.putLoginHeader(ck);java.toast(\"网页登录成功，VIP模式💎\");}\n\telse java.toast(\"网页登录失败，未获取到账号cookie\");\n\t}\r\n\r\nfunction web(){\r\n    let url = nn.replace('www.','') + '/register.php';\n    cookie.removeCookie(url);\r\n    java.startBrowser(url, '八叉注册');\r\n}\n\nfunction ceshi(){\n\t['　　　','·　　','··　','···'].forEach((_,i) => {java.toast('\\n\\n测试中'+_+'\\n');Packages.java.lang.Thread.sleep((3-i)*100);}); //然并卵的动画(但是好看)\n\ttry {\n  const startTime=new Date().getTime();\n\tjava.head(nn,{\t'user-agent': ua});\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime) / 1000;\n\tspeed = speed.toFixed(2);\n\tjava.toast('\\n\\n延迟：'+speed+'秒\\n');\n\t} catch(err) {java.longToast(err);}\n\r\n}\n\n\r\nfunction re(){\n\tjava.toast('稍等');\n\tjava.ajax(nn+'/userdetail.php');\n\t//输出一份数据到日志，以备需\n\tjava.log('\\n账号：'+result['账号']+'\\n密码：'+result['密码']);\n\t//消除相应数据\r\n    cookie.removeCookie(nn);\n    source.removeLoginHeader();\n    result['账号']=result['密码']='';\n    source.putLoginInfo(JSON.stringify(result));\n    cache.deleteMemory('8xid');\n    java.toast(\"回到访客模式🔒\");\r\n}\n\r\nfunction sm(){\nlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\nlet ss = String(source.bookSourceComment).match(/^[^┘]+┘/);\nlet cki = String(source.getLoginHeader()).includes(\"jieqiUserInfo\");\n    let ms= \"访客模式🔒\";\n    if (cki != '') {\r\n        ms = \"VIP模式💎\";\r\n    }\r\nlet tt = `\n网址：${nn}　　 \n模式：${ms}　　　　　　   \n版本：${banben}　　　　　　　　　　\n\n${ss}`;\n    java.longToast(tt);\r\n}\nfunction webck(){\n\tlet nnm=nn.replace('www.','');\n\tlet ck=source.getLoginHeader()||'';\n\tcookie.replaceCookie(nnm,ck);\n\treturn nnm;\n\t}\nfunction webb(){\n\tlet id = cache.getFromMemory('8xid');\n  if (id) {\n  \tid=Object.keys(id)[0];\n  \tlet nnm=webck();\n   java.startBrowser(`${nnm}/book/${id}.html`,'八叉');\n   } else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n}\n\nfunction webbs(x){\n\tlet nnm=webck();\n\tif (x==1) {nnm+='/modules/article/bookcase.php';}\n\tlet wr=java.startBrowserAwait(nnm,'web',false).body();\n\tlet bkid=(wr.match(/https.+\\/book\\/(\\d+).*\\.html/)||['',''])[1];\n\tlet url = \"legado://import/addToBookshelf?src=\"+nn+\"/book/\"+bkid+\".html,{origin:'https://八叉书库.luoyacheng.ip-ddns.com'}\";\n\tif (bkid!='') java.openUrl(url);\n}\n\nfunction hmd(){\n\tlet id = cache.getFromMemory('8xid');\n\tif (id) {\n\tlet hmd = cache.get('8xhmd')||'{}';\n\thmd = JSON.parse(hmd);\n\tlet idd = Object.keys(id)[0];\n\tif (idd in hmd) {\n\t\tdelete hmd[idd];\n\t\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n移除黑名单😅');\n\t\t}\telse {\n\thmd = Object.assign({},hmd,id);\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n加入黑名单😤');}\n\t\n\t} else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n\t\n}\n\nfunction hmdre(){\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet ss=Object.entries(hmd);\nlet [cb,cf] = colorz();\nlet svg=`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n<style>\ntext {\n\twhite-space: pre;\n\tword-wrap: break-word;}\n</style>\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<text fill=\"#${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\">\n<tspan x=\"50%\" dy=\"30%\" font-size=\"100\">\n是否清空黑名单<tspan font-size=\"30\">（${ss.length}）</tspan>\n</tspan>\n<tspan x=\"42%\" dy=\"25%\" font-size=\"60\">输入“确认”进行清空</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入“名单”打印一份名单到日志</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入书籍ID单独移出黑名单<tspan font-size=\"30\">(名单查看)</tspan></tspan>\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\n\ntry {\n//拦截验证码报错\nlet ysr=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\nPackages.java.lang.Thread.sleep(100);\nif (ysr=='确认') {\n\tcache.delete('8xhmd');\n\tjava.toast('\\n已清空');\n}\nelse if (ysr=='名单') {\n\tjava.log('\\n💔8x黑名单：\\n'+ss.join('\\n'));\n\tcache.put('8xbff',source.getLoginInfo());\n\tcache.put('8xbff2',source.getLoginHeader());\n}\nelse if (/\\d{3,}/.test(ysr)) {\n\tif (ysr in hmd) {\n\tjava.toast('\\n已将书籍：'+hmd[ysr]+'\\n移除黑名单');\n\tdelete hmd[ysr];\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t} else {java.toast('移出失败');}\n}\nelse if (ysr=='恢复') {\n\tlet ryr=cache.get('8xbff');\n\tlet ryr2=cache.get('8xbff2');\n\tsource.putLoginInfo(ryr);\n\tsource.putLoginHeader(ryr2);\n}\n\n} catch(err) {}\n}\n\nfunction downl() {\nlet dn = source.get('8xdn');\nif(dn!=1) {source.put('8xdn',1);java.toast('已支持下载');}\nelse {source.put('8xdn',0);java.toast('已优化加载');}\n\t}\nfunction shujia() {\nlet dn = source.get('8xsj');\nif(dn!=1) {source.put('8xsj',1);java.toast('🟢已启用同步网站书架');}\nelse {source.put('8xsj',0);java.toast('⚫已关闭同步网站书架');}\n\t}\nfunction shuming() {\nlet sm = source.get('8xsm');\nif(sm!=1) {source.put('8xsm',1);java.toast('🟢书名跟随更新');}\nelse {source.put('8xsm',0);java.toast('⚫书名保持初始');}\n\t}\nfunction jhfm() {\nlet jhf = source.get('8xjhf');\nif(jhf!=1) {source.put('8xjhf',1);java.toast('😈净化封面');}\nelse {source.put('8xjhf',0);java.toast('😍显示封面');}\n\t}\n\nfunction gitee() {\njava.startBrowser(`https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json,{\n\t\t'headers': {\n\t\t\t'User-Agent': 'Mozilla/5.0 (Linux; Android 14)'}\n\t\t\t}`,'日志');\n}",
    "respondTime": 9789,
    "ruleBookInfo": {
      "author": "",
      "canReName": "",
      "coverUrl": "class.divbox cf@img.0@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "init": "<js>\n//重定向和导入书架处理\nlet i = String(book.bookUrl).includes('https:/');\nif (i) {\n\tbook.bookUrl = `data:;base64,${java.base64Encode(baseUrl.replace(/,{o.+/,''))},{'type':''}`;\n\t}\n\n//告诉目录是由详情来的\njava.put('sx1',1);\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\n//发书评功能\nlet bkbl = book.getVariable(\"custom\");\n//解书籍地址\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet bkid = (mlj.match(/book\\/(\\d+)/)||['',''])[1];\n//↑获取书id\njava.put('bkid',bkid);\n\nif (bkbl=='🔒'||bkbl=='') {\n//带🔒或书籍变量为空会经过这里\n//处理加书架功能\nlet sj=java.get('sj');\nlet sj2=source.get('8xsj'); //启用同步的标识\nif (sj=='2'&&sj2=='1') {java.put('sj',3);tbshujia(nn,bkid);}\nelse if (sj=='1') {java.put('sj',2);}\n\n\t}\nelse if (bkbl=='目录') {\n\t//清空最新章储存强制刷新目录\n\tjava.put('8xzx','');\n\t//清空输入的书籍变量\n\tbook.putCustomVariable('');}\nelse {\nlet pfurl = nn+'/modules/article/rating.php';\nlet plurl = nn+'/modules/article/reviews.php';\nlet ck = source.getLoginHeader()||'';\nlet cki = ck.match(/UserToken%3D([^%]+)/)||['',''];\ntk = cki[1];\n//ck = cookie.getCookie(nn);\n//↑获取链接和tk\n\nif (bkid != '' && tk != '') {\nlet tm = new Date().getTime();\nlet bkfs = (bkbl.match(/^(\\d|10)分$/) || ['','0'])[1];\nlet pfbody = `score=${bkfs}&id=${bkid}&ajax_request=${tm}`;\nlet plbody = `ptitle=&act=newpost&jieqi_token=${tk}&Submit=&pcontent=${bkbl}&aid=${bkid}&ajax_request=${tm}`;\n\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': mlj,\n        'cookie': ck\r\n    };\nif (bkfs != 0) {url=pfurl;body=pfbody;}\nelse {url=plurl;body=plbody;}\n//清空输入的书籍变量\nbook.putCustomVariable('');\nlet by = java.post(url,body,headers).body();\njava.longToast(\"\\n\"+java.htmlFormat(by));\n\t} else if (tk == '') {java.toast('未登录');}\n}\n\n//随机延时0-1秒\nlet tim = Math.floor(Math.random()*1001);\n//java.log('延时'+tim);\nPackages.java.lang.Thread.sleep(tim);\n\n//先发评论再访问刷新\nif (!i) {\n\tlet tt = java.hexDecodeToString(result);\n\t//不能直接访问tt，result无法改动\n\ttt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\n\tconst startTime=new Date().getTime();\n\tresult = java.ajax(nn+tt); //+\",{'webView': true}\"\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) {java.toast('\\n详情页访问延迟过长：'+speed.toFixed()+'秒');}\n\tjava.setContent(result);\n\t}\n\n//内容判断\nlet r = java.getString('@@meta[name=\"keywords\"]@content');\nlet name=String(r).replace(/\\, .+/,'');\nlet author=String(r).replace(/.+\\, /,'');\n\nif (name) {\n\tbook.name=String(book.name)||name;\n\tbook.author=String(book.author)||author;\n//放入书名\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n//放入ID和书名。正式版js语法报错点\ncache.putMemory('8xid',{[bkid]: book.name});\n\tif (book.name!=name) {\n\t\t\tlet sm=source.get('8xsm'),sm1=java.get('sm1');\n\t\t\t//sm功能标记，sm1判断标记\n\t\t\tif (sm1=='') {\n\t\t\t//可能源地址换新了，进行更新\n\t\t\tcache.put('8xbl1', source.getVariable() );\n\t\t\tsource.setVariable('');\n\t\t\tjava.put('sm1',1);\n\t\t\t} else if (sm=='1') {\n\t\t\t\tbook.name=name;\n\t\t\t\tjava.toast(\"已自动更新书名\");\n\t\t\t} else if (sm1=='1') {\n\t\t\t\tjava.longToast(\"详情页获取的书名：\\n《\"+name+\"》\");\n\t\t\t\tjava.log(\"书名：\"+name);\n\t\t\t\tjava.put('sm1',2);\n\t\t\t}\n\t\t\t\n}\telse if (book.author!=author) {java.log(\"获取的作者不同，作者：\"+author);} //仅输出日志\n\t\n\t//书名和作者正常由此过\n\t}\nelse {\n\t//书名加载失败\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\tjava.toast(\"详情页加载失败，请刷新重试\");\n}\n\tresult\n</js>",
      "intro": "{{\n//书名过长时在简介显示\nlet length = 0;\nlet fuhao = ',.?!:;()[]\"';\n\nfor (char of String(book.name)) {\n\tif (fuhao.includes(char) ) length += 0.5;\n\telse length += 1;\n\t}\n//大于18个全角字符\nif (length > 18) '《'+book.name+'》'\nelse '&#10;'\n}}\n{{\nlet zx = java.getString('class.divbox@h3@a@text');\nlet temp=java.getStringList('class.tabcontent@class.tabvalue.1@td[0:3,9,10]@text');\nrr=Object.values(temp);\n//处理rr\n[rr[0], rr[2]] = [rr[2], rr[0]];\nrr[0] = '最新：' + String(zx).replace(/^正文|^\\s+/,'') + String(rr[0]).replace('最后更新：',' ').replaceAll('-','/') + String(rr[1]).replace(/连载状态：(.+)/,' ($1)');\ndelete rr[1];\nrr[2] = String(rr[2]).replace(/作品分类：\\s*/,'分类：') + String(rr[3]).replace(/作品性质：(.+)/,' ($1)');\ndelete rr[3];\nrr[4] = String(rr[4]).replace(/总点击数：\\s*/,'点击：') + String(rr[5]).replace(/本月点击：(.+)/,'　$1 (月)');\ndelete rr[5];\n//评分\nlet pf=java.getString('.ratediv@text');\nlet r0 = rr.join('\\n') + '\\n' + String(pf).replace(/评分：\\s*/,'评分：');\n//简介\nlet r1=java.getString('.tabcontent .tabvalue:eq(0) div@html');\nif (r1==\"\") {r1='';}\nelse {\n r1 = '\\n简介：\\n' + String(r1).replace(/[\\u3000\\u2003]{2}/g,'\\n').replace('「','“').replace('」','”').replace(/\\>\\s*内容简介/,'')\n\t}\n//评论\nlet r2=String(java.getString('#content>.c_row@html'));\nlet xi = book.getVariable(\"custom\")==\"🔒\";\nif (r2==''||xi) {r2='';}\nelse {\n\tr2 = r2.replace(/<div class=\"c_subject\"[\\S\\s]+?div>|<span class=\"fr\"[\\S\\s]+?span>|回复：.+/g,'').replace(/<p[> ].+<\\/p>/g,'﹍');\n\t//java.htmlFormat(r);\n\t}\n\tr0 + r1 + r2\n}}",
      "kind": "b:contains(标签：)~a@text\n<js>\nString(result).slice(1, -1).replace(/[\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "class.divbox@h3@a@text\n<js>\nlet zx = java.get('8xzx');\nif (zx==result) java.put('ww',1);\nelse {java.put('8xzx',result);java.put('ww',0);}\nresult\n</js>",
      "name": "",
      "tocUrl": "<js>\n//清除用户自定义简介\n//book.delete(); //如果更新发生异常会掉书籍信息，目录页取消书架\n//book.upCustomIntro(); //目录页生效\n\n//解书籍url为http\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nif (mlj.includes('search.php') ) {java.toast('书籍地址异常');}\n//转化目录url\nlet mll = mlj.replace('/book/', '/read/');\n`data:;base64,${java.base64Encode(mll)},{'type':''}`;\n</js>",
      "wordCount": ".tabcontent .tabvalue.1@html##全文字数：(\\d+)##$1###"
    },
    "ruleContent": {
      "content": "<js>\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nlet dn = source.get('8xdn');\nlet sleep = Packages.java.lang.Thread.sleep;\n//java.log(chapter.title+'inn：'+inn);\nif ((inn==-4||inn==4)&&dn!=1) {java.longToast('\\n使用下载需要在书源登录界面开启功能\\n建议预下载设定不要大于3');}\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\nlet tim = Math.floor(Math.random()*401);\nlet ii = 1;\n//手动限制并发,下载时(0-40秒随机)\n\nswitch(inn) {\n\tcase 0: break;\n\tcase 1: sleep(1500+tim); break;\n\tcase 2: sleep(4500+tim); break;\n\tcase 3: sleep(7500+tim); break;\n\tcase -1: sleep(3000+tim); break;\n\tcase -2: dn==1 ? sleep(6000+tim) : ii=0;break;\n\tcase -3: dn==1 ? sleep(9000+tim) : ii=0;break;\n\tdefault: dn==1 ? sleep(tim*100) : ii=0;break;\n}\n\n//延时结束\n//java.log(chapter.title+'inn：'+inn+'延时结束');\nlet bkid = java.get('bkid'); //两个putm用\n\nif (inn==0||inn==1) {\n//放入书名和id\ncache.putMemory('8xid',{[bkid]: book.name});\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n}\n\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,nn);\n//java.log('正文地址：'+tt);\nlet ml = String(book.tocUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet ck0 = source.getLoginHeader();\nlet headers0 = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': mlj,\n        'cookie': ck0\r\n    };\n\nlet getr;\nif (ii) {\n//↓第一次访问正文\ntry {\nconst startTime=new Date().getTime();\ngetr = java.get(tt,headers0);\n//java.log(chapter.title+'inn：'+inn+'访问结束');\nconst endTime=new Date().getTime();\n//判断访问情况，错误时把响应内容清除\nif (getr.statusCode() == 200) {\n\tresult = getr.body();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) java.toast('\\n正文页访问延迟过长：'+speed.toFixed()+'秒');\n\t} else {java.toast('\\n正文链接响应码错误，inn='+inn);result='';}\n//复原手机版链接，干掉字数统计\nchapter.url = tt.replace('www.','');\n\n//拦截超时报错\n} catch (e) {if (/timeout/.test(e)) java.toast('正文超时');\njava.log('🍊正文出错：'+e);}\n// if ii 结束\n\t} else {result='';}\n//inn>1时为空，软件会自动重新获取\n\nlet rr = java.getString('class.mt mb@a@text||class.tc mb@a@text',result);\n\n//内容识别\nif (rr.includes(\"登录\") ) {\n\tjava.toast(\"💎请重新登录书源账号\");\n\tresult='';}\nelse if (rr.includes(\"充值\") ) {\nlet url = nn+'/modules/obook/buychapter.php';\nlet ck = source.getLoginHeader();\nlet tk = (ck.match(/UserToken%3D([^%]+)/)||['',''])[1];\nlet cid = tt.match(/cid\\=(\\d+)/)[1];\nlet body = `buytype=1&act=buy&jieqi_token=${tk}&cid=${cid}&submit=`;\nlet headers = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': tt,\n        'cookie': ck\r\n    };\n\n// let vip = cache.getFromMemory('8xvip'+bkid);\n// &&vip!=1\nif (tk && nn) {\n\t//标识本书准备请求VIP，防其它章节请求\n\t// cache.putMemory('8xvip'+bkid,1);\n\tsleep(600-tim);\n\tlet pt = java.post(url,body,headers);\n\tlet lc = pt.header(\"location\");\n//\tjava.toast(\"🔓已购买\");\n\t//重新解析正文\n\tresult = java.ajax(lc);\n\tresult = java.getString('#content,#acontent,#contenty@html',result);\n\t} else {java.longToast(\"💔VIP内容获取失败\");\n\tresult='';}\n\n}\nelse {\n//无VIP登录，正常直接加载\nresult = java.getString('#content,#acontent,#contenty@html',result);\n}\n//检查\nif ([39,339].includes(cin)&&Math.abs(inn)<4) gengxin();\nresult\n</js>",
      "imageStyle": "",
      "nextContentUrl": "",
      "payAction": "",
      "replaceRegex": "##八叉书库|八叉~书库|八叉书[,~]库|(?:833330|8xsk)\\.(?:xyz|org)|(?:833330|8xsk|八叉)([^\\.])(?:xyz|yxz|org|书库)|八~叉|书~库##$1",
      "sourceRegex": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "td.2@text||span:contains(作者：)+span@text\n<js>\nif (result == '[email protected]') {\n\tlet hex = java.getString('.__cf_email__.0@data-cfemail');\n\tresult = decodeEmail(String(hex),0);\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.put('sj',3); //标识已经同步了书架，\n\t//我的书架无作者信息，延时让提示先显示\n\t\tPackages.java.lang.Thread.sleep(20);\n\tresult='';}\n\tresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\t\tresult = [];\n}\nelse if (baseUrl.includes('search.php?') ) {\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result = [];}\nelse {result = java.getElement('#jieqi_page_contents>div');}\n\t}\nelse if (baseUrl.includes('/book/') ){\njava.toast('暂不支持重定向结果');\nresult=[];\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t//我的书架\n\tlet ts= java.getString('table@caption@ownText');\n\tts=String(ts).replace(/，(.+)\\s*选择分组.*$/,'，\\n$1');\n\tjava.toast('\\n'+ts);\n\tresult = java.getElement('table tr:has(a)');\n\t}\nelse {\nresult = java.getElements('@@#jieqi_page_contents>tr||#content div[class=\"c_row cf\"]');\n}\nresult\n</js>",
      "bookUrl": "<js>\nif (baseUrl.includes('search.php?') ) {\t\n\trs = java.getString('class.c_subject@a.0@href');\n\t} \n\telse if (baseUrl.includes('/bookcase.php') ) {\n\t\t//我的书架需要转化链接\n\t\trs = java.getString('td.1@a.-1@href');\trs='https://8x/book/'+rs.match(/aid=(\\d+)/)[1]+'.html';}\n\telse {\n\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');\n\t}\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');\n\t}\nrr = String(rs).replace(/https\\:\\/{2}[A-z\\d\\.]+/, nn);\n\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "coverUrl": "<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') img=jinghuafm();\nelse {\n\nif (/articlelist|sort/.test(baseUrl)) {\n\timg = java.getString('img@src');\n\t}\nelse if (baseUrl.includes('search.php?') ) {\n\timg = java.getString(String(source.ruleSearch.coverUrl));\n\t}\nelse{\n\tid = java.getString('td.0@a.-1@href').match(/\\d+(?=\\.html)/);\n\nif (baseUrl.includes('/bookcase.php') ) {id = java.getString('td.1@a.-1@href').match(/aid=(\\d+)/)[1];}\n\n  if (id < 1000) n = 0;\n  else n = String(id).slice(0,-3);\nimg = `https://www.8xbook.com/files/article/image/${n}/${id}/${id}s.jpg`;\n}\n\n}\nimg\n</js>",
      "intro": "td.3@text||class.c_description@text\n<js>\nif (baseUrl.includes(\"top/words\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/goodnum\")) {'⠀\\n收藏数：'+result}\n//新书榜\nelse if (baseUrl.includes(\"top/newhot\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n点击数：'+result}\nelse if (baseUrl.includes(\"top/signtime\")) {\n  let t = parseInt(result)*1000;\n  let time = java.timeFormatUTC(t,\"⠀\\n签约时间：yy/MM/dd HH:mm:ss\",8*60*60*1000);\n  time}\nelse if (baseUrl.includes(\"top/lastupdate\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/postdate\")) {'⠀\\n入库时间：'+result}\nelse if (baseUrl.includes(\"top/allvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n总点击：'+result}\nelse if (baseUrl.includes(\"top/monthvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n月点击：'+result}\nelse if (baseUrl.includes(\"top/weekvisit\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n周点击：'+result}\nelse if (baseUrl.includes(\"top/allvote\")) {'⠀\\n总推荐：'+result}\nelse if (baseUrl.includes(\"top/monthvote\")) {'⠀\\n月推荐：'+result}\nelse if (baseUrl.includes(\"top/weekvote\")) {'⠀\\n周推荐：'+result}\nelse if (/articlelist|sort|search\\.php/.test(baseUrl)) {\n//含简介(搜索会经此)\nresult.replace('「','“').replace('」','”').replace(/\\s+/g,' ')}\nelse {''}\n</js>",
      "kind": "<js>\nif (baseUrl.includes('search.php?') ) {java.getStringList(String(source.ruleSearch.kind));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getStringList('td.4@text');}\nelse {java.getStringList('td[4,5]@text||span:contains(更新：)+span@text||a486@time');}\n</js>",
      "lastChapter": "<js>\nif (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.lastChapter));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getString('td.2@a.-1@text');}\n\telse {java.getString('td.1@a.-1@text||class.c_subject@a.-1@text');}\n</js>",
      "name": "<js>\nif (baseUrl.includes('search.php?') ) {\nresult=String(java.getString('.c_subject@text')).replace(/\\\"/g,'');\n//获取id目的\nrs = java.getString('class.c_subject@a.0@href');\n\t}\n\telse {\n\t\tresult =  java.getString('td.0@a.-1@text||class.c_subject@a.1@text||td.1@a.-1@text');\n\t\t//获取id目的\n\t\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');}\n//||td.0@input@value书架的书不处理屏蔽黑名单，正则黑名单会\n\n//获取id，黑名单时书名为空\nlet id = (rs.match(/book\\/(\\d+)/)||['','lyc'])[1];\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "<js>\nif (/articlelist|sort/.test(baseUrl)) {\n  java.getString('span:contains(字数：)+span@text')\n}\nelse if (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.wordCount));\n\t}\n</js>"
    },
    "ruleSearch": {
      "author": "span:contains(作者：)+span@text",
      "bookList": "<js>\njava.setContent(cache.get('8xss1') );\ncache.delete('8xss1');\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result=[];}\nelse {\n\tresult = java.getElement('#jieqi_page_contents>div');\n}\nresult\n</js>",
      "bookUrl": "class.c_subject@a.0@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`\n</js>",
      "checkKeyWord": "作者：棺材",
      "coverUrl": ".fl img@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "intro": ".c_description@text\n<js>\nresult.replace('「','“').replace('」','”').replace(/\\s/g,' ')\n</js>",
      "kind": "span:contains(更新：)+span@text&&span:contains(关键字：)+span@text\n<js>\nString(result).replace(/[\\[\\]\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "span:contains(最新章节：)+span@text",
      "name": ".c_subject@text\n<js>\n//获取id，黑名单时书名为空\nlet id = java.getString('class.c_subject@a.0@href');\nid = id.match(/book\\/(\\d+)/)[1];\n//java.log(result); //输出书名\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "span:contains(字数：)+span@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\nlet sj=java.get('sj');\nif (sj=='') java.put('sj',1); //书架标识\nlet ww = java.get('ww'),\nlyc = java.get('lyc'),\nsx1 = java.get('sx1'); //ww是否有新章，sx刷新标识从目录来(已在书架才会触发)\njava.put('sx1',0); //还原详情到目录标识\nlet sj2=source.get('8xsj'); //启用同步的标识\nlet bkid=java.get('bkid');\n\nif (sx1!='1') {\n\t let baxtime = cache.getFromMemory('baxtime');\n\t if (baxtime<Date.now()) baxtime=Date.now();\n\t baxtime+=4000;\n\tcache.putMemory('baxtime',baxtime);\n\twhile(Date.now()<baxtime) {\n\tPackages.java.lang.Thread.sleep(4100);}\n\t}\nif (sj!='3'&&sx1!='1'&&sj2=='1'&&bkid!='') {java.put('sj',3);tbshujia(nn,bkid);}\n//不为3未加书架，不为1不过详情，为1开启功能，且参数不为空\nif (ww!='1' || lyc=='' || sx1!='1') {\nlet tim = Math.floor(Math.random()*1501);\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\nPackages.java.lang.Thread.sleep(tim);\nconst startTime=new Date().getTime();\nresult = java.ajax(nn+tt);\nconst endTime=new Date().getTime();\nlet speed = (endTime - startTime)/1000;\nif (speed>39) {java.toast('\\n目录页访问延迟过长：'+speed.toFixed()+'秒');}\n//缩减储存\nresult=java.getString('.index@all',result);\njava.put('lyc',result);\n} else {result=lyc;}\njava.setContent(result);\nresult=java.getElement('.index dd, .index dt');\n</js>",
      "chapterName": "dd a,dt@text##八叉书库|833330\\.xyz|八叉书[。·]库|8xsk?[。·]org|八叉~书库|八~叉书~库",
      "chapterUrl": "a@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`;\n</js>",
      "formatJs": "",
      "isPay": "",
      "isVip": "",
      "isVolume": "dt@text",
      "preUpdateJs": "",
      "updateTime": "{{@@dd@a@title##\\d{1,2}\\:\\d{1,2}更新，共(\\d+字).*## $1}}\n{{@@dd@em@text##.+##💎}}"
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\nnn = String(source.getVariable()).replace(/\\/$/,'');\n//let cok=cookie.getCookie(nn);\n//cookie.removeCookie(nn);\nlet url = `${nn}/modules/article/search.php`;\ntry {\n\tif (key.startsWith('书名：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=articlename&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('作者：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=author&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('标签：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=keywords&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (page == 1) {\n\t\tftsm();\n\t\tlet body = `searchtype=all&searchkey=${key}&act=search&submit=`;\n\tss = java.post(url,body,{\t'User-Agent': ua});\n\tkey='';\n\t}\n\t\n\telse {\n\t\turl +=\t`?searchkey=${key}&searchtype=all&page=${page}`\n\tss = java.get(url,{\t'user-agent': ua});\n\t}\n\ncode = ss.statusCode();\nif (code == 302) {\n\t//重定向\n\tss.header(\"location\");\n\t}\nelse if (code == 200) {\n\tcache.put('8xss1', ss.body());\n\turl=`data:;base64,${java.base64Encode(nn)},{'type':''}`;\n\t}\nelse if (code == 520) {\n\tjava.toast(\"💔IP被拉黑\");\n\t}\nelse {\n\tjava.toast(\"💔搜索响应码异常\");\n\t}\n\n\n} catch(err) {\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\t}\n//\tcookie.replaceCookie(nn,cok);\n//\turl\n</js>",
    "variableComment": "♦源变量：\n　 当前书源使用的网址\n　 可点击发现页版本号手动刷新\n\n♦书籍变量：\n　 ①填写  🔒 并刷新，关闭本书评论显示\n　 ②填写“目录”并刷新，强制刷新目录\n　 ③填写分数并刷新，使用分数进行评分\n　 ④填写其它并刷新，内容作为评论发送\n分数格式示意“1分”“2分”…“10分”\n\n㊟详情页检测到有更新内容时才刷新目录(书架刷新不影响)\n\n！注意区分源变量和书籍变量\n",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.3 ◎夜泽川◎\n//同站一堆",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "同人小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.tongrenxsw.com",
    "customOrder": 152,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\nvar push = (title, url, size) => result.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: size\n  }\n})\npush(\"全部分类\",null,1);\ntg = java.ajax(source.key);\ntag = org.jsoup.Jsoup.parse(tg).select('.navM li a');\ntag.forEach(fl => {\n  nam = fl.text()\n  ul = String(fl.attr('href')).replace(/\\/$/,\"-{{page}}/\");\npush(nam,ul,0.25);\n})\nJSON.stringify(result);",
    "header": "",
    "lastUpdateTime": "1743232378645",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nz:\"class.t_c.2@text##字数：\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js: \nso = java.ajax(baseUrl.replace(/book/,\"chapter\"));\njava.setContent(so);\nvar id = baseUrl.match(/book\\/(.*?)\\.html/)[1];\njava.put(\"id\",id);\nvar pages = java.getStringList(\".dropDown@li@data-p\");\njava.put(\"page\",pages.length);\nresult = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n  \"body\": `id=${id}&page=1`,\n  \"method\": \"POST\"\n});",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "imageStyle": "",
      "nextContentUrl": ".btnBlack.-1@href",
      "replaceRegex": "##.*{{source.key}}.*|\\n+.*章节错误,点此举报.*\\n+|\\(https?.*\\/book\\/.*\\)|.*首发域名.*"
    },
    "ruleExplore": {
      "author": "a[href~=author]@text",
      "bookList": ".dList > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": ".pic img@src",
      "intro": ".intro@text",
      "kind": "[class~=cate|date]@text##\\[|\\]",
      "lastChapter": ".chapter@text",
      "name": ".name a@text"
    },
    "ruleSearch": {
      "author": "a[href~=author][0]@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".info a[href~=list]@text",
      "lastChapter": ".infoM2@a.-1@text",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "$.data",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js: result = []\nid = java.get(\"id\");\npages = java.get(\"page\");\nfor (let i = 2 ; i <= pages ; i++) {\noption = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n  \"body\": `id=${id}&page=${i}`,\n  \"method\": \"POST\"\n});\nresult.push(option);\n}\nresult;"
    },
    "searchUrl": "@js: \nvar url = java.ajax(source.key).match(/window\\.location\\.href=\\'([^']+)/)[1];\njava.log(url);\ncookie.removeCookie(url);\nvar kku = url.replace(/\\/\\?.*$/,\"\");\njava.log(kku);\nvar ckk = java.get(url,{});\nvar ck = cookie.getCookie(url);\njava.log(ck);\nvar result = kku + \"/keywords-{{key}}-{{page}}.html\" + \",\" + JSON.stringify({\n\t\"headers\":{\"Cookie\":ck}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://api.qingtian618.cn:9999\n*/\n\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增晴天书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和晴天书架栏目\n2.预计新增阅读记录，阅读过的书籍可在晴天书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增晴天书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceGroup": "晴天小说会员专属请勿传播,番茄小说,七猫小说,塔读小说,得间小说,起点小说",
    "bookSourceName": "🌞晴天融合2.1(完全版)",
    "bookSourceType": 0,
    "bookSourceUrl": "http://api.qingtian618.cn:9999",
    "concurrentRate": "14/10000",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"晴天书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1743232541630",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录晴天账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚晴天书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','晴天书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录晴天小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('http://www.qingtian618.cn', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\n//java.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录晴天账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄晴天账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('晴天融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t//如果要显示最新章节，请去除注释，去除会影响搜索速度\n//if ('{{$.source}}'=='番茄'){\n//\t'番茄:'+fq_last();\n//\t} else if ('{{$.source}}'=='七猫'){\n//\t'七猫:'+qm_last();\n//\t} else {\n\t'{{$.source}} {{$.last_chapter_title}}'\n//\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet device;\nlet device_type;\nlet tab = book_detail.tab;\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n \tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\nlet content_url = `${item_id}晴天融合2.1${tab}晴天融合2.1${title}晴天融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://219.154.201.122:5006\nhttps://api.langge.cf\nhttps://20.langge.tk\nhttp://v2.dahuilang.cf\n*/\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增大灰狼书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和大灰狼书架栏目\n2.预计新增阅读记录，阅读过的书籍可在大灰狼书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增大灰狼书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceGroup": "大灰狼小说,番茄小说,七猫小说,塔读小说,得间小说,起点小说",
    "bookSourceName": "🍅大灰狼融合2.1(完全版)",
    "bookSourceType": 0,
    "bookSourceUrl": "http://20.langge.tk",
    "concurrentRate": "14/10000",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"大灰狼书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1743067332520",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录大灰狼账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚大灰狼书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','大灰狼书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录大灰狼小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('https://dashabi.tk', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\n//java.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录大灰狼账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄大灰狼账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('大灰狼融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t//如果要显示最新章节，请去除注释，去除会影响搜索速度\n//if ('{{$.source}}'=='番茄'){\n//\t'番茄:'+fq_last();\n//\t} else if ('{{$.source}}'=='七猫'){\n//\t'七猫:'+qm_last();\n//\t} else {\n\t'{{$.source}} {{$.last_chapter_title}}'\n//\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\ntry {\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet url = `${base_url}/get_user_bookshelf?book_id=${book_detail.book_id}&source=${book_detail.source}`;\n//java.toast(url);\nlet getbook =JSON.parse(java.ajax(url)).books;\nlet is_bookshelf;\nlet data = [];\nif (book.order < 0 && !getbook.length) {\n\t// 在阅读书架，不在大灰狼书架，同步到大灰狼书架\n    book_detail.is_bookshelf = true;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n} else if ( book.order < 0 && getbook.length) {\n\t// 在阅读书架，在大灰狼书架\n\t  var books=getbook[0];\n    books.is_bookshelf = true;\n    data.push(books);\n} else if (book.order >= 0 && !getbook.length) {\n\t// 不在阅读书架，不在大灰狼书架，留下浏览记录\n\t   book_detail.is_bookshelf = false;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n\t} else if (book.order >= 0 && getbook.length) {\n\t// 不在阅读书架，在大灰狼书架，大灰狼书架下架\n\t   var books=getbook[0];\n    books.is_bookshelf = false;\n    //data.push(books);\n\t}\nif (data.length) {\n\tvar option = {\n\"method\": \"POST\",\n\"body\": JSON.stringify(data),\n};\n    java.ajax(`${base_url}/push_user_bookshelf,`+JSON.stringify(option));\n    }\n\t} catch (e) {};\n\tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet device;\nlet device_type;\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n\nlet content_url = `${item_id}大灰狼融合2.1${tab}大灰狼融合2.1${title}大灰狼融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "\n\n//https://m.sinodan.cc/",
    "bookSourceGroup": "[🇨🇳R18+],[R18魔法可用]",
    "bookSourceName": "第一版主网m.sinodan.cc-CF人机验证",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.sinodan.cc/",
    "customOrder": 7091,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "最后更新::/book/14493_{{page}}.html\n总人气::/book/1_14493_{{page}}.html\n月人气::/book/2_14493_{{page}}.html\n新书::/book/3_14493_{{page}}.html\n字数::/book/4_14493_{{page}}.html",
    "header": "{\n  \"User-Agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; MI 5s Plus Build/OPR1.170623.032; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/132.0.3578.99 Mobile Safari/537.36\"\n}",
    "lastUpdateTime": "1743410351170",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": ".info@text##类型：[\\s\\S]*|字数[\\s\\S]*",
      "coverUrl": ".left@img@src",
      "intro": ".bd.2@html",
      "kind": ".info@text##[\\s\\S]*类型：|字数[\\s\\S]*",
      "lastChapter": "",
      "name": ".right@tag.h1@text",
      "tocUrl": "",
      "wordCount": ".info@text##[\\s\\S]*字数：|人气[\\s\\S]*"
    },
    "ruleContent": {
      "content": "#nr1@html##.*本章未完.*|.*本章完.*",
      "nextContentUrl": ".chapterPages@a.-1@href\n<js>\na=String(result);\nif (res = a.match(/fenye\\=(\\d+)/)) {\n  data = [];\n  for (i = 2; i <= res[1]; i++) {\n    data.push(a.replace(/\\d$/g, i));\n  }\n  data;\n}\n</js>##\\[|\\]",
      "replaceRegex": "##(?<=[\\u4e00-\\u9fa5]|[，、])[\\n]"
    },
    "ruleExplore": {
      "author": ".info@text##字数[\\s\\S]*",
      "bookList": "<js>\nif(result.match(/Just a moment/)){\n\tjava.startBrowserAwait(baseUrl,\"验证\");\n\tresult=java.ajax(baseUrl);\n}result;\n</js>\n.column-2",
      "bookUrl": "class.name@href",
      "lastChapter": "class.update@text",
      "name": "class.name@text"
    },
    "ruleSearch": {
      "author": "class.info@ownText##作者：",
      "bookList": "<js>\nif(result.match(/Just a moment/)){\n\tjava.startBrowserAwait(baseUrl,\"验证\");\n\tresult=java.ajax(baseUrl);\n}result;\n</js>\n.column-2",
      "bookUrl": "a@href",
      "checkKeyWord": "稚气修士驭母记",
      "kind": "",
      "lastChapter": "class.update@text",
      "name": "class.name@text",
      "wordCount": "class.words@text##字数："
    },
    "ruleToc": {
      "chapterList": ".chapter-list.1@.list@li||.chapter-list.0@.list@li",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "nextTocUrl": "option!0@value"
    },
    "searchUrl": "/wap.php?action=search,{\n  \"body\": \"objectType=2&wd={{key}}\",\n  \"method\": \"POST\",\n  \"charset\": \"GBK\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "需登录\n◎搜索格式◎\n1、搜索用户<关闭精确搜索>\n@用户名\n2、搜索合集<关闭精确搜索>\n#合集\n3、搜索粮单\n%粮单名<关闭精确搜索>\n4、搜索文章，直接搜索\n\n发现规则格式\n                                    🏷标签\n标签名::https://api.lofter.com/oldapi/tagPosts.api?product=lofter-android-6.13.0&method=newTagSearch&offset={{(page-1) *22}}&limit=22&firstpermalink=null&tag=标签名&type=new,{\"method\": \"POST\",\"body\":\"null\"}\n📃用户（搜索可以得到)\n部分目录章节比较多，加载时间久，出现目录加载失败，请尝试刷新，因为可能是请求失败导致的",
    "bookSourceGroup": "③📖  论坛",
    "bookSourceName": "📖Lofter",
    "bookSourceType": 0,
    "bookSourceUrl": "https://newsmiss.lofter.com",
    "bookUrlPattern": "",
    "customOrder": 64,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "              ----------     🏷标签     ----------               ::\n百合::https://api.lofter.com/oldapi/tagPosts.api?product=lofter-android-6.13.0&method=newTagSearch&offset={{(page-1) *22}}&limit=22&firstpermalink=null&tag=百合&type=new,{\"method\": \"POST\",\"body\":\"null\"}\n\n               ----------     📃用户     ----------               ::\n砂上雪::http://api.lofter.com/v2.0/blogHomePage.api?product=lofter-android-6.13.0,{\"method\":\"POST\",\"body\":\"targetblogid=514131314&supportposttypes=1%2C2%2C3%2C4%2C5%2C6&blogdomain=taste-s.lofter.com&offset={{(page-1)*18}}&method=getPostLists&postdigestnew=1&returnData=1&limit=18&checkpwd=1&needgetpoststat=1\"}",
    "header": "{\n\"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"}",
    "lastUpdateTime": "1743082612818",
    "loginUrl": "https://newsmiss.lofter.com",
    "respondTime": 2608,
    "ruleBookInfo": {
      "author": "$.response.blogInfo.blogNickName||$.response.posts[0].post.blogInfo.blogNickName||$.data.blogInfo.blogNickName",
      "canReName": "1",
      "coverUrl": "$.response.collection.coverUrl@put:{page:$.response.blogInfo.blogStat.publicPostCount}",
      "init": "<js>\ntry{\ncookie = cookie.getCookie(\"https://newsmiss.lofter.com\");\n\nlofter = String(cookie).match(/;\\s(LOFTER-[^-]+-LOGIN-AUTH)=(.*?);/);\n\nheader = {};\nheader[lofter[1]] = lofter[2];\nsource.putLoginHeader(JSON.stringify(header));\nresult;\n}catch(e){\n\tresult = result\n\t}\n</js>",
      "intro": "@js:\na='{{$.response.collection.description}}';\nb='{{$.response.blogInfo.blogNickName}}';\nc=java.getString('$.response.posts[0].post.digest||$.response.collection.description||$.response.blogInfo.selfIntro');\n\nresult =c;\n\ncname=\"{{$.response.posts[0].post.postCollection.name}}\";\ncdes=java.getString('$.response.posts[0].post.postCollection.description');\nccount=\"{{$.response.posts[0].post.postCollection.postCount}}\";\nif(cname){\nresult=result+\"\\n&lrm;\\n🈴所属合集：\"+cname+\"\\n📜合集介绍：\"+cdes+\"\\n\"+\"🔢合集章节总数：\"+ccount\n+\"\\n🔍搜索合集：#\"+cname+\"<关闭精确搜索>\";\n\nString(result).replace(/📜合集介绍：\\n/,'')+String(book.intro).replace(/([\\s\\S]+?)--复制/,'<br>&lrm;<br>--复制').replace(/.*?::/,book.author+'::')\n}else{\tString(book.intro).replace(/.*?::/,book.author+'::')\n\t}",
      "kind": "$.postCollection",
      "lastChapter": "",
      "name": "$.response.collection.name",
      "tocUrl": "$.response.blogsetting.blogId\n@js:\nif(result){\nid='{{$.response.blogsetting.blogId}}';\nlink='{{$.response.blogLink}}';\nurl='http://api.lofter.com/v2.0/blogHomePage.api?product=lofter-android-6.9.2,';\npost={\"method\": \"POST\",\n\"body\": \"targetblogid=\"+id+\"&supportposttypes=1%2C2%2C3%2C4%2C5%2C6&blogdomain=\"+link+\"&offset=0&method=getPostLists&postdigestnew=1&returnData=1&limit=500&checkpwd=1&needgetpoststat=1\"}\nresult=url+JSON.stringify(post);\njava.put('url',result)}else if(baseUrl.match(/postCollection/)){\nresult=java.get('url')\n}",
      "wordCount": "{{$.data.grainInfo.postCount}}篇文章##^篇文章$"
    },
    "ruleContent": {
      "content": "<js>\nif(/\\.mp4/.test(baseUrl)){\n\tresult = \"请点击章节链接观看视频\\n视频链接：\"+baseUrl\n\t}else{\ncontent = java.getString(\"$..content\");\nimgs = eval(String(java.getString(\"$..photoLinks\")));\nvideo =/video_down_url\\\\\":\\\\\"(.*?)\\\\\"/.test(result)? \"视频链接：\"+String(result).match(/video_down_url\\\\\":\\\\\"(.*?)\\\\\"/)[1]:\"\";\nimg = \"\";\nimgs?imgs.forEach(x=>{\n\tx?img += \"<img src=\\\"\"+x.orign.replace(/%7C.*/g,'')+\"\\\">\\n\":\"\"\n\t}):\"\"\nresult =  content + \"\\n\"+img+\"\\n\"+video;\n}\nif(result ==\"\\n\\n\"){\n\tresult = \"{{$..msg}}\"\n\t}\n</js>",
      "imageDecode": "",
      "imageStyle": "FULL",
      "nextContentUrl": "<js>\nif(!/myReturnGift/.test(baseUrl)){\ntry{\n\t\tid = java.getString(\"$..post.id\");\n\t\tid2 = java.getString(\"$..post.blogId\");\nurl =\"https://api.lofter.com/v1.1/trade/gift/post/newSupportInfo?postId=\"+id+\"&blogId=\"+id2+\"&openFansVipPlan=0&vipFans=0\";\n//java.log(JSON.parse(String(java.ajax(url))).code)\n\t$  = JSON.parse(String(java.ajax(url)));\n//\tjava.log(JSON.stringify($))\n\tl = $.data.gainReturnGifts.length?$.data.gainReturnGifts:$.data.returnGifts;\n\tls = []\n\tl.forEach(x=>{\n\t\turl = \"https://api.lofter.com/v1.1/trade/gift/myReturnGift?id=\"+x.id+\"&postId=\"+id+\"&blogId=\"+id2;\n\t\tls.push(url)\n\t\t})\n\tresult = ls\n\t}catch(e){\n\t\t}\n\t}\n</js>",
      "replaceRegex": "##src=\"(.*?)\"##src=\"$1,{'headers':{'referer':'{{$..blogPageUrl}}'}}\"",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "$.post.blogInfo.blogNickName",
      "bookList": "<js>result.replace(/null/g,'')</js>\n$.response.items[*]||$.response.posts[*]",
      "bookUrl": "@js:url='{{$.post.blogId||$.post.blogPageUrl}}';\nid='{{$.post.id}}';\nmain=url.match(/_blogid_\\d+/)?url.match(/_blogid_(\\d+)/)[1]:url;\nbody=\"blogdomain=_blogid_\"+main+\".lofter.com&postid=\"+id;\nresult='https://api.lofter.com/oldapi/post/detail.api?product=lofter-android-7.4.4,{\"method\":\"POST\",\"body\":\"'+String(body)+'\"}';",
      "coverUrl": "$.post\n@js:if(result.match(/firstImageUrl=\\[\"\",\"\"\\]/)){\nresult=result.match(/bigAvaImg=(.*?),/)?result.match(/bigAvaImg=(.*?),/)[1]:'';}else{\nresult=result.match(/firstImageUrl=\\[\"([^\"]+)\"/)?result.match(/firstImageUrl=\\[\"([^\"]+)\"/)[1]:\"\"\n}",
      "intro": "{{$.post.digest}}\n<br>&lrm;<br>\n--复制下面的文字，粘贴至发现规则添加用户--\n{{$.post.blogInfo.blogNickName}}::http://api.lofter.com/v2.0/blogHomePage.api?product=lofter-android-7.4.4,{\"method\":\"POST\",\"body\":\"targetblogid={{$.post.blogInfo.blogId}}&supportposttypes=1%2C2%2C3%2C4%2C5%2C6&blogdomain={{$.post.blogInfo.blogName}}.lofter.com&offset={{'\\{\\{(page-1)*18\\}\\}&method=getPostLists&postdigestnew=1&returnData=1&limit=18&checkpwd=1&needgetpoststat=1\"}'}}",
      "kind": "$.post.tag",
      "lastChapter": "$.post.publishTime\n@js:result=java.timeFormat(parseInt(result));\njava.put('time',result)",
      "name": "$.post.title||$.post.noticeLinkTitle||$.post.digest||$.post.blogInfo.blogId||$.post.blogPageUrl##</*\\w.*?>",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": "$.blogInfo.blogNickName||$.blogName",
      "bookList": "$..postData[*]||$.data.posts[*]||$.data.blogs[*]||$.data.collections[*]||$.data.grainList[*]",
      "bookUrl": "$.postPageUrl\n@js:\nif(!result){\n    if(!'{{$.name}}'){\n        id='{{$.blogId}}';\n        result='http://api.lofter.com/v2.0/blogHomePage.api?product=lofter-android-7.4.4,{\"method\": \"POST\",\"body\":\"targetblogid='+id+'&method=getBlogInfoDetail&returnData=1&checkpwd=1&needgetpoststat=1\"}'\n    }else if(/grain.json/.test(baseUrl)){\n        result = \"https://api.lofter.com/api-grain/grain/getDetail.json?grainId={{$.id}}&offset=0&grainUserId={{$.userId}}\"\n    }else{\n        blogid='{{$.blogId}}';\n        id='{{$.id}}';\n        name='{{$.blogName}}';\n        java.put('name',name);\n        result='https://api.lofter.com/v1.1/postCollection.api?product=lofter-android-7.4.4,{\"method\": \"POST\",\"body\":\"blogdomain='+name+'.lofter.com&method=getCollectionSimple&offset=0&limit=2000&blogid='+blogid+'&collectionid='+id+'&order=1\"}';\n        java.put('url',result)\n    }\n}else{\n    body=\"blogdomain=_blogid_{{$.blogId}}.lofter.com&postid={{$.id}}\";\n    result='https://api.lofter.com/oldapi/post/detail.api?product=lofter-android-7.4.4,{\"method\":\"POST\",\"body\":\"'+String(body)+'\"}';\n};\n",
      "checkKeyWord": "%双女主",
      "coverUrl": "$.firstImageUrl[0]||$.blogInfo.bigAvaImg||$.bigAvaImg||$.coverUrl",
      "intro": "{{$.digest||$.selfIntro||$.posts[0].digest||$.description}}\n<br>&lrm;<br>\n--复制下面的文字，可将用户添加发现或者订阅--\n{{$.blogInfo.blogNickName||$.blogNickName||$.blogName}}::http://api.lofter.com/v2.0/blogHomePage.api?product=lofter-android-6.9.2,{\"method\":\"POST\",\"body\":\"supportposttypes=1%2C2%2C3%2C4%2C5%2C6&blogdomain={{$.blogName||$.blogInfo.blogName}}.lofter.com&offset={{'\\{\\{(page-1)*18\\}\\}&method=getPostLists&postdigestnew=1&returnData=1&limit=18&checkpwd=1&needgetpoststat=1\"}'}}\n<js>\nif(/grain.json/.test(baseUrl)){\nresult =\tresult.replace(/--复制下面[\\s\\S]+/,'')\n\t}\nresult\n</js>",
      "kind": "$.tagList||$.tags",
      "lastChapter": "$.publishTime\n<js>\nif(result){\nresult?result=java.timeFormat(parseInt(result)):'';\njava.put('time',result)}else{\nresult=java.getString('$.posts[0].title||$.posts[0].digest||$.postCount')+\"篇文章\"\n}</js>\n##</*\\w+.*?>|[^\\d]+篇文章|^0*篇文章$",
      "name": "$.title||$.noticeLinkTitle||$.digest||$.blogInfo.blogNiceName||$.blogNickName||$.name##</*\\w.*?>",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "$..posts[*]||$.response.items[*]@put:{blogname:$..blogName}",
      "chapterName": "$.post.title||$.post.digest||$.post.blogInfo.blogNickName||$..postView.title||$..postView.digest\n<js>if(result){\nresult=result\n}else{result=book.name}\nString(result).replace(/<\\/*\\w.*?>/g,'')\n</js>\n##(^.{1,25})##$1###",
      "chapterUrl": "<js>\nif(/postCollection|blogHomePage|api-grain/.test(baseUrl)){\tbody=\"blogdomain=_blogid_{{$.post.blogId||$..postView.blogId}}.lofter.com&postid={{$.post.id||$..postView.id}}\";\nresult='https://api.lofter.com/oldapi/post/detail.api?product=lofter-android-7.4.4,{\"method\":\"POST\",\"body\":\"'+String(body)+'\"}';\n\t}else\tif(/video_down_url\":\"(.*?)\"/.test(result)){\n\t\tresult = String(result).match(/video_down_url\":\"(.*?)\"/)[1];\n\t\t}else{\n\t\t\tresult = baseUrl\n\t\t\t}\n</js>",
      "nextTocUrl": "<js>\nlist=[];\nif(/limit=500/.test(baseUrl)){\npages=java.get('page');\npage=parseInt(pages/500);\nurl=String(java.get('url'));\nif(page>6){\npage=6\n}else{page=page}\nfor(i=1;i<=page;i++){\nlist.push(url.replace(/offset=\\d+/,'offset='+(parseInt(i)*500)))\n}\n}else if(/api-grain/.test(baseUrl)){\n\toffset = \"{{$.data.offset}}\";\n\tif(offset!=\"-1\"){\n\tlist = baseUrl.replace(/offset=\\d+/,'offset='+offset);\n}\n\t}\nlist\n</js>",
      "updateTime": "$.post.publishTime\n<js>\nif(/api-grain/.test(baseUrl)){\n\tresult = \"所属合集：\"+java.getString(\"$..postCollection.name\");\n\t}else{\nresult?java.timeFormat(parseInt(result)):java.get('time')\n}\n</js>\n##所属合集：$"
    },
    "searchUrl": "@js:\nconst prefix = key.charAt(0);\nconst offset = '{\\{(page-1) *' + (prefix === '%' ? '10}' : (prefix === '@' ? '10}' : '20}')) + '}';\nif(prefix === '@'){\n    result = 'https://api.lofter.com/newsearch/blog.json?key=' + encodeURI(key.slice(1)) + '&offset=' + offset;\n}else if(prefix === '#' || prefix === '＃'){\n    result = 'https://api.lofter.com/newsearch/collection.json?key=' + encodeURI(key.slice(1)) + '&offset=' + offset;\n}else if(prefix === '%'){\n    result = 'https://api.lofter.com/newsearch/grain.json?key={{key}}&offset=' + offset;\n}else{\n    const header = {\n        \"headers\": {\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n            \"deviceid\": java.androidId(),\n            \"if-modified-since\": String(new Date()).replace(/(.*?)\\s(.*?)\\s(.*?)\\s(.*?)GMT.*/,'$1, $3 $2 $4 GMT')\n        }\n    };\n    result = 'https://api.lofter.com/newsearch/post.json?key=' + key + '&sortType=0&offset=' + offset + '&limit=20,' + JSON.stringify(header);\n}\n",
    "variableComment": "",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "",
    "bookSourceName": "引力圈【只能搜索作者】",
    "bookSourceType": 0,
    "bookSourceUrl": "https://app.unifans.io/feed",
    "bookUrlPattern": ".*/getCollectionDetail.*collectionId=.*",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "21点牌的合集::https://api.unifans.io/common/getCollections?domainName=21dianpai&_t={{Date.now()}}",
    "lastUpdateTime": "1742832107305",
    "loginUi": "\n\n[\n    {\n        name: \"邮箱\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    }\n]",
    "loginUrl": "<js>\nfunction login(){\n\temail = source.getLoginInfoMap().get(\"邮箱\");\n\tpwd = source.getLoginInfoMap().get(\"密码\");\n\turl = \"https://api.unifans.io/account/login\";\n\tbody = {\n          \"boundMailbox\": String(email),\n          \"password\": String(pwd)\n         }\n\tpost = {\n\t\t\"method\":\"POST\",\n\t\t\"body\":JSON.stringify(body)\n\t\t   }\n\turl = url+\",\"+JSON.stringify(post);\n\ttoken = JSON.parse(java.ajax(url)).data.token;\n\tauthorization = \"hgq \"+token;\n authorization = {\n \t\"authorization\":String(authorization)\n \t}\t; \n \tsource.putLoginHeader(JSON.stringify(authorization));\n\t}\n</js>",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.data.collection.nickName",
      "canReName": "",
      "coverUrl": "$.data.collection.picture",
      "init": "<js>\nif(!/&_t=/.test(baseUrl)){\nresult = \tjava.ajax(baseUrl+\"&_t={{Date.now()}}\")\n\t}\nresult\n</js>",
      "intro": "<js>\nif(/getPersonalInfo/.test(baseUrl)){\n\tresult =java.getString(\"$.data.description\")+`\\n----------\\n{{$.data.homeName}}的合集::https://api.unifans.io/common/getCollections?domainName={{$.data.domainName}}&_t={\\{Date.now()}}`\n\t}else{\n\t\tresult = java.getString(\"$.data.collection.comment\")\n\t\t}\n</js>",
      "kind": "",
      "lastChapter": "",
      "name": "$.data.collection.name",
      "tocUrl": "<js>\nif(/getPersonalInfo/.test(baseUrl)){\n\tresult = \"https://api.unifans.io/common/getCollections?domainName={{$.data.domainName}}&_t={{Date.now()}}\"\n\t}else if(/getCollectionDetail/.test(baseUrl)){\n\t\tresult = \"https://api.unifans.io/creator/getPostsByCollection?collectionId={{$.data.collection._id}}&skip=0&limit=500&order=0&_t={{Date.now()}}\"\n\t\t}\n</js>"
    },
    "ruleContent": {
      "content": "<js>\nif(/data:postId/.test(baseUrl)){\npostid = \tjava.base64Decode(baseUrl.match(/base64,(.*?),/)[1]);\n\tresult = JSON.parse(book.customVariable)[postid];\n\t}else if(/getCollectionDetail/.test(baseUrl)){\n\t\tif(book.durChapterIndex === chapter.index){\n\t\t\turl = \"https://api.unifans.io/creator/getCollectionDetail?collectionId={{$.data.collection._id}}&_t=\"+Date.now();\n\t\ttitle = \"{{$.data.collection.name}}\";\n\t\turl = \"legado://import/addToBookshelf?src=\"+encodeURIComponent(url);\n\t\tjava.log(url)\n\t\tscript = `data:text/html;charset=utf-8,\n\t\t<html>\n\t\t<title>《${title}》加入书架</title>\n\t\t<p style=\"font-size:60px\"><img src=\"{{$.data.collection.picture}}\" style=\"max-width: 300px; max-height: 400px\">\n\t\t\n\t\t简介：${java.getString(\"$.data.collection.comment\")}</p>\n\t\t<p style=\"text-align: center;\"><a href=\"${url}\" style=\"font-size:50px;\">跳转加入书架</a></p>\n\t\t\n\t\t</html>\n\t\t<script>\n        window.onload = function () {\n            window.location.href = '${url}';\n        };\n    </script>`;\n\t\tjava.startBrowser(script,\"《\"+title+\"》\")\n\t\t\n\t\t}\n\t\nresult=\"❗️刷新本章节，跳转本书详情页\\n\"+'简介：'+java.getString(\"$.data.collection.comment\")+\"\\n\"+'<img src=\"{{$.data.collection.picture}}\">'\n\t\t}\n\tresult\n</js>\n\n##\\<img src\\=\"\"\\>",
      "imageStyle": "FULL",
      "replaceRegex": "##Powered by Froala Editor"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "$.data.collections[*]",
      "bookUrl": "https://api.unifans.io/creator/getCollectionDetail?collectionId={{$._id}}&_t={{Date.now()}}",
      "coverUrl": "$.picture",
      "intro": "$.previewText&&$.comment",
      "kind": "",
      "name": "$.name"
    },
    "ruleSearch": {
      "author": "",
      "bookList": "$.data.result[*]",
      "bookUrl": "https://api.unifans.io/common/getPersonalInfo?domainName={{$.domainName}}&_t={{Date.now()}}",
      "checkKeyWord": "https://api.unifans.io/creator/getCollectionDetail?collectionId=d3a821eb7794dc9416f67e00a2a78877&_t=1742562370747",
      "coverUrl": "$.avatar",
      "intro": "$.creatingDes",
      "kind": "",
      "name": "$.nickName"
    },
    "ruleToc": {
      "chapterList": "-$.data.collections[*]||$.data.posts[*]\n<js>\nif(/getPostsByCollection/.test(baseUrl)){\nlist = result.toArray();\njson = {}\nfor(i in list){\n\ttext = String(java.getString(\"$.text\",list[i])).replace(/<\\/*span.*?>| style=\".*?\"/g,'');\n\timg ='<img src=\"'+ java.getString(\"$..address\",list[i])+'\">';\n\t\thtml = text+\"\\n\"+img;\n\t  postid = java.getString(\"$.postId\",list[i]);\n\t  json[postid] = html;\n\t}\n\tbook.putCustomVariable(JSON.stringify(json));\n\tresult = result==\"[]\"?`[{name:\"无目录\"}]`:result\n\t}else if(/getCollections/.test(baseUrl)){\n\t\tresult = result==\"[]\"?`[{name:\"无合集\"}]`:result\n\t\t}\nresult\n</js>\n$.[*]",
      "chapterName": "$.name||$.title",
      "chapterUrl": "<js>\nif(/getCollections/.test(baseUrl)){\n\tresult = \"https://api.unifans.io/creator/getCollectionDetail?collectionId={{$._id}}&_t={{Date.now()}}\";\n\t}else if(/getPostsByCollection/.test(baseUrl)){\n\ttext = String(java.getString(\"$.text\")).replace(/<\\/*span.*?>| style=\".*?\"/g,'');\n\timg ='<img src=\"'+ java.getString(\"$..address\")+'\">';\n\t\thtml = text+\"\\n\"+img;\n\t\tresult = `data:postId;base64,${java.base64Encode(\"{{$.postId}}\")},{\"type\":\"\"}`;\n\t\t//cache.put(result,text+\"\\n\"+img);\n\t\tresult\n\t\t}\n</js>",
      "formatJs": "",
      "isVip": "$.locked",
      "updateTime": "💰{{$.sponsorScheme[0].fee}} 目录总数：{{$.postCount}}\n<js>\ntime=\"{{$.updateTime}}\"?java.timeFormat(\"{{$.updateTime}}000\"):\"\"\nresult=time+\" \"+result;\nresult = result.replace(/💰 |目录总数：$/g,'')\n.replace(/💰0(?![.\\d])/g,'');\n</js>"
    },
    "searchUrl": "https://api.unifans.io/common/searchNickDomainName,{\n\t'method':'POST',\n\t'body':'{\"search\":\"{{key}}\",\"searchType\":\"creator\",\"skip\":0,\"limit\":500}'\n\t}",
    "weight": 0
  },
  {
    "bookSourceComment": "250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增晴天书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和晴天书架栏目\n2.预计新增阅读记录，阅读过的书籍可在晴天书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n",
    "bookSourceGroup": "晴天小说会员专属请勿传播,番茄漫画,漫画",
    "bookSourceName": "🌞晴天融合漫画2.1(独立版)",
    "bookSourceType": 2,
    "bookSourceUrl": "http://api.qingtian618.cn:9999/#漫画/",
    "concurrentRate": "14/10000",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "jsLib": "",
    "lastUpdateTime": "1743232574304",
    "loginUi": "",
    "loginUrl": "http://api.qingtian618.cn:9999/login",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.book_detail.thumb_url",
      "init": "$.book_detail",
      "intro": "&nbsp;&nbsp;🎴当前来源：{{$.source}}\n🎯最新章节：{{$.last_chapter_title}}\n⏳更新时间：{{$.last_chapter_update_time}}\n📚书籍简介：\n{{$.abstract}}",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "/catalog?book_id={{$.book_id}}&source={{$.source}}",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "$.content"
    },
    "ruleExplore": {
      "author": "$.author",
      "bookList": "$.data.data",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "$.category",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "checkKeyWord": "我的",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t//如果要显示最新章节，请去除注释，去除会影响搜索速度\n//if ('{{$.source}}'=='番茄'){\n//\t'番茄:'+fq_last();\n//\t} else if ('{{$.source}}'=='七猫'){\n//\t'七猫:'+qm_last();\n//\t} else {\n\t'{{$.source}} {{$.last_chapter_title}}'\n//\t\t}\n\n</js>",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet device;\ntry {\n    device = java.androidId();\n} catch (e) {\n    try{\ndevice = java.deviceID();\n}catch (e) {device = '';\n}\n}\n`/pic?item_id={{$.item_id}}&source={{$.source}}&device=${device}`;\n</js>\n",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "/search?title={{key}}&tab=漫画&source=全部",
    "weight": 60
  },
  {
    "bookSourceComment": "//2025.1.31 ◎夜泽川◎",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "笔趣阁ai",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.biquai.cc",
    "customOrder": 93,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": "1743232255886",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "<js>\nvar id = baseUrl.match(/(\\d+)/)[1];\nvar ul = `${source.key}/userverify/book/${id}/list.html`\nvar result = java.get(ul,{}).header(\"location\");\nresult;\n</js>"
    },
    "ruleContent": {
      "content": "#chaptercontent@html##{{title}}|第\\d+章.*|\\s*请收藏：.*|\\s*（温馨提示.*）",
      "nextContentUrl": "#pb_next@href"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "name": ""
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "<js>\nif (JSON.parse(src).length === 0) {\n\tjava.toast('没有结果');\n}\nsrc;\n</js>\n$.[*]",
      "bookUrl": "$.url_list",
      "checkKeyWord": "斗罗",
      "coverUrl": "$.url_img",
      "intro": "$.intro",
      "kind": "",
      "name": "$.articlename"
    },
    "ruleToc": {
      "chapterList": "dl@a!0",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "@js: \ncookie.removeCookie(source.key);\nvar searchul = `${source.key}/s?q=${java.encodeURI(key)}`\nvar header = {\n\t\"accept\": \"application/json\",\n\t\"Referer\": String(searchul)\n};\nvar hmurl = `${source.key}/user/hm.html?q=${java.encodeURI(key)}`;\n//java.log(JSON.stringify(head));\nvar hmkey = java.get(hmurl,header).cookie(\"hm\");\nvar hm = hmkey ? \"hm=\" + hmkey : \"\";\n java.log(hm);\nvar result = `${source.key}/user/search.html?q=${key}` + \",\" + JSON.stringify({\n\t\"headers\": {\"Cookie\": hm}\n});\nresult;",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.1.3 ◎夜泽川◎\n//同站一堆",
    "bookSourceGroup": "网络,自制",
    "bookSourceName": "2k小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.kkxsz.com",
    "customOrder": 53,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js: var result = []\nvar push = (title, url, size) => result.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: size\n  }\n})\npush(\"全部分类\",null,1);\ntg = java.ajax(source.key);\ntag = org.jsoup.Jsoup.parse(tg).select('a[href^=/list]');\ntag.forEach(fl => {\n  nam = fl.text()\n  ul = String(fl.attr('href')).replace(/\\/$/,\"-{{page}}/\");\npush(nam,ul,0.25);\n})\nJSON.stringify(result);",
    "header": "",
    "lastUpdateTime": "1743230888763",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\"[property$=book_name]@content\",\na:\"[property$=author]@content\",\nt:\"[property~=category|status]@content\",\nl:\"[property$=latest_chapter_name]@content\",\ni:\"[property$=image]@content\",\no:\"[property$=description]@content\",\ng:\"[property$=update_time]@content\",\nz:\"class.t_c.2@text##字数：\"\n}",
      "intro": "@get:{o}",
      "kind": "@get:{t}",
      "lastChapter": "@get:{l}◎@get:{g}",
      "name": "@get:{n}",
      "tocUrl": "@js: var id = baseUrl.match(/book\\/(.*?)\\.html/)[1];\njava.put(\"id\",id);\nvar pages = java.getStringList(\"option@value\",java.ajax(baseUrl));\njava.put(\"page\",pages.length);\nresult = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n  \"body\": `id=${id}&page=1`,\n  \"method\": \"POST\"\n});",
      "wordCount": "@get:{z}"
    },
    "ruleContent": {
      "content": "#content@html||.content@html",
      "imageStyle": "",
      "nextContentUrl": "[class~=pageDown|btnGray]@href",
      "replaceRegex": "##.*{{source.key}}.*|\\n+.*章节错误,点此举报.*\\n+|\\(https?.*\\/book\\/.*\\)|.*首发域名.*"
    },
    "ruleExplore": {
      "author": ".author@text",
      "bookList": ".list2 > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "",
      "kind": "[class~=cate|date]@text##\\[|\\]",
      "lastChapter": ".chapter@text",
      "name": ".name a@text"
    },
    "ruleSearch": {
      "author": "a[href~=author][0]@text",
      "bookList": ".list > ul > li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@src",
      "intro": ".intro@text",
      "kind": ".info a[href~=list]@text",
      "lastChapter": ".infoM2@a.-1@text",
      "name": ".name@text"
    },
    "ruleToc": {
      "chapterList": "$.data",
      "chapterName": "$.chaptername",
      "chapterUrl": "$.chapterurl",
      "nextTocUrl": "@js: result = []\nid = java.get(\"id\");\npages = java.get(\"page\");\nfor (let i = 2 ; i <= pages ; i++) {\noption = source.key + \"/index.php?action=loadChapterPage\" + \",\" + JSON.stringify({\n  \"body\": `id=${id}&page=${i}`,\n  \"method\": \"POST\"\n});\nresult.push(option);\n}\nresult;"
    },
    "searchUrl": "@js: \nvar url = java.ajax(source.key).match(/window\\.location\\.href=\\'([^']+)/)[1];\njava.log(url);\ncookie.removeCookie(url);\nvar kku = url.replace(/\\/\\?.*$/,\"\");\njava.log(kku);\nvar ckk = java.get(url,{});\nvar ck = cookie.getCookie(url);\njava.log(ck);\nvar result = kku + \"/keywords-{{key}}-{{page}}.html\" + \",\" + JSON.stringify({\n\t\"headers\":{\"Cookie\":ck}\n});\nresult;",
    "weight": 0
  },
  {
    "ruleSearch": {
      "checkKeyWord": "我的",
      "bookList": ".item:nth-child(n+1)",
      "name": "a:nth-child(2)@text",
      "author": "span@text",
      "intro": "dd@text",
      "coverUrl": "img@src",
      "bookUrl": "a:nth-child(2)@href"
    },
    "ruleBookInfo": {
      "name": ".top > h1@text",
      "author": "p:nth-child(1) > a@text",
      "wordCount": "p:nth-child(6) > span@text",
      "lastChapter": ".section-box:nth-child(2) li:nth-child(1) > a@text",
      "intro": ".desc@text",
      "coverUrl": "img@src"
    },
    "ruleToc": {
      "chapterList": ".section-box:nth-child(4) li",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "nextTocUrl": ".index-container-btn:nth-child(3)@href"
    },
    "ruleContent": {
      "content": "#content@text",
      "title": ".title@text",
      "nextContentUrl": ".m-bottom-opt > #next_url@href"
    },
    "ruleReview": [],
    "ruleExplore": [],
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.wanglisong.com/",
    "bookSourceName": "顶点文学",
    "searchUrl": "https://www.sososhu.com/?q={{key}}&site=wanglisong&Submit=%E6%90%9C%E7%B4%A2",
    "enabled": false,
    "lastUpdateTime": "1743050629695"
  }
]