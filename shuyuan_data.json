[
  {
    "bookSourceComment": "",
    "bookSourceGroup": "",
    "bookSourceName": "下片小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://book.xiepp.cc",
    "bookUrlPattern": "https://book.xiepp.cc/xs/\\d+/",
    "customOrder": -99973,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "全部::/sort/{{page}}/\n玄幻::/sort/1/{{page}}/\n武侠::/sort/2/{{page}}/\n都市::/sort/3/{{page}}/\n历史::/sort/4/{{page}}/\n穿越::/sort/5/{{page}}/\n游戏::/sort/6/{{page}}/\n科幻::/sort/7/{{page}}/\n同人::/sort/8/{{page}}/\n社会::/sort/9/{{page}}/\n综合::/sort/10/{{page}}/\n女生::/sort/11/{{page}}/",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9; MIX 2 Build/PKQ1.190118.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/80.0.3987.99 Mobile Safari/537.36\"}",
    "lastUpdateTime": "1742501722531",
    "respondTime": 15560,
    "ruleBookInfo": {
      "author": ".novel_info_title@i@a@text",
      "coverUrl": ".novel_info_main@img@src",
      "init": "",
      "intro": ".intro@text",
      "kind": "p@span.0@text",
      "lastChapter": ".flex.to100@a@text",
      "name": ".novel_info_title@h1dtext"
    },
    "ruleContent": {
      "content": "#article@html",
      "nextContentUrl": "#next_url@href"
    },
    "ruleExplore": {
      "author": ".li_bottom@a@text",
      "bookList": ".flex li",
      "bookUrl": ".w100@a.0@href",
      "coverUrl": ".lazy@data-original",
      "intro": ".indent@text",
      "kind": ".li_bottom@em.1@text",
      "name": "h2@text"
    },
    "ruleSearch": {
      "author": "p.0@text##\\s.*",
      "bookList": ".flex li",
      "bookUrl": ".img_span@a@href",
      "checkKeyWord": "",
      "coverUrl": ".img_span@img@data-original",
      "intro": "p.1@text",
      "kind": ".img_span@text",
      "lastChapter": "p.2@text",
      "name": "h3@text",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "#ul_all_chapters li a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "/search/,{\n'method': 'POST',\n'body': 'searchkey={{key}}&searchtype=all'\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://v1.shushan.xyz:50001\nhttp://v2.shusan.cn:39002\nhttp://v2.shusan.xyz:39002\nhttp://v3.shusan.xyz:50006\nhttp://v3.shushan.xyz:50006\n*/\n\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增书山书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和书山书架栏目\n2.预计新增阅读记录，阅读过的书籍可在书山书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增书山书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug",
    "bookSourceGroup": "书山",
    "bookSourceName": "📚书山融合2.0",
    "bookSourceType": 0,
    "bookSourceUrl": "http://v1.shushan.xyz:50001",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"书山书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1742306369917",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录书山账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚书山书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','书山书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录书山小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('http://fb.shushan.vip:9999/', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.book_detail.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\n\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录书山账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄书山账号：${key}\n🎴当前来源：{{$.source}}\n🗂当前模式：{{getArguments(source.getVariable(),'media',String(source.bookSourceComment));}}\n{{if (getArguments(source.getVariable(),'media',String(source.bookSourceComment)) =='听书'){\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));}\n}}\n&lrm;\n{{$.book_tts}}\n&lrm;\n`\nif (`{{$.tags}}`) {info = info +  `🕹分类：{{$.tags}}\\n`};\nif (`{{$.role}}`) {info = info +  `🎗书籍主角：{{$.role}}\\n`};\nif (`{{$.last_chapter_title}}`) {info = info +  `🎯最新章节：{{$.last_chapter_title}}\\n`};\nif (`{{$.last_chapter_update_time}}`) {info = info +  `⏳更新时间：{{$.last_chapter_update_time}}\\n`};\nif (`{{$.word_number}}`) {info = info +  `📝书籍字数：{{$.word_number}}\\n`};\nif (`{{$.status}}`) {info = info +  `💥书籍状态：{{$.status}}\\n`};\nif (`{{$.score}}`) {info = info +  `✨书籍评分：{{$.score}}\\n`};\nif (`{{$.media}}`) {info = info +  `📌出版媒体：{{$.media}}\\n`};\nif (`{{$.abstract}}`) {info = info +  `&lrm;\n📚书籍简介：\n{{$.abstract}}\\n`};\nif (`{{$.book_review}}`) {info = info +  `&lrm;\\n{{$.book_review}}\\n`};\nif (`{{$.copyright_info}}`) {info = info +  `📍{{$.copyright_info}}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id={{$.book_id}}&source={{$.source}}&tab={{$.tab}}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('书山融合2.0');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (media=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (media=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (media=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (media=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && media  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id={{$.book_id}}&source={{$.source}}&tab={{$.tab}}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id={{$.book_id}}&source={{$.source}}&tab={{$.tab}}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t\nif ('{{$.source}}'=='番茄'){\n\t'番茄:'+fq_last();\n\t} else if ('{{$.source}}'=='七猫'){\n\t'七猫:'+qm_last();\n\t} else {\n\t\t'{{$.source}}'\n\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\nlet device;\nlet device_type;\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (media=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (media=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (media=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (media=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t};\n\r\n\ntry {\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet url = `${base_url}/get_user_bookshelf?book_id=${book_detail.book_id}&source=${book_detail.source}`;\n//java.toast(url);\nlet getbook =JSON.parse(java.ajax(url)).books;\nlet is_bookshelf;\nlet data = [];\nif (book.order < 0 && !getbook.length) {\n\t// 在阅读书架，不在书山书架，同步到书山书架\n    book_detail.is_bookshelf = true;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n} else if ( book.order < 0 && getbook.length) {\n\t// 在阅读书架，在书山书架\n\t  var books=getbook[0];\n    books.is_bookshelf = true;\n    data.push(books);\n} else if (book.order >= 0 && !getbook.length) {\n\t// 不在阅读书架，不在书山书架，留下浏览记录\n\t   book_detail.is_bookshelf = false;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n\t} else if (book.order >= 0 && getbook.length) {\n\t// 不在阅读书架，在书山书架，书山书架下架\n\t   var books=getbook[0];\n    books.is_bookshelf = false;\n    //data.push(books);\n\t}\nif (data.length) {\n\tvar option = {\n\"method\": \"POST\",\n\"body\": JSON.stringify(data),\n};\n    java.ajax(`${base_url}/push_user_bookshelf,`+JSON.stringify(option));\n    }\n\t} catch (e) {};\n\tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet content_url = `{{$.item_id}}书山融合2.0{{$.tab}}书山融合2.0{{$.title}}书山融合2.0{{$.source}}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "preUpdateJs": "",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "",
    "bookSourceName": "69书吧-改",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.69shuba.com/",
    "bookUrlPattern": "https://www.69shuba.com/book/[0-9]+\\.htm",
    "concurrentRate": "20/60000",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "header": "@js:\nJSON.stringify({\n\t    \"User-Agent\": \"Mobile 111\",\n\t    \"Referer\": baseUrl\n })",
    "jsLib": "function getSearchUrl(key, baseUrl) {\n\t return baseUrl || \"\" + \"/modules/article/search.php,\" + JSON.stringify({\"charset\": \"gbk\",\"method\": \"POST\",\"body\": `searchkey=${key}&submit=Search`})\n}\n\nfunction getCoverUrl(s) {\n\t var ret = \"\"\n\t if (Number(s)) ret = `/fengmian/${s.slice(0,-3)}/${s}/${s}s.jpg`\n\t return ret\n}",
    "lastUpdateTime": "1742542578752",
    "loginUrl": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "intro": "更新：\n{{@@[property$=update_time]@content}}\n简介：\n{{@@class.navtxt@p.0@html}}",
      "kind": "[property~=category|status|update_time]@content&&.infolist@li.1@text##节数",
      "lastChapter": "[property$=chapter_name]@content\n##\\d+\\.|（.*|\\(.*|【.*|(零|一|二|三|四|五|六|七|八|九|十|百|千|万)(.|\\s)*章|“|”\n@js:result\n.replace(\"••\",\"\")\n.replace(/^(\\d+).第/,'第')\n.replace(/^(正文|VIP章节|最新章节)?(\\s+|_)|[\\(\\{（｛【].*[求更谢乐发推票盟补加字Kk\\/].*[\\)\\}）｝】]/g,'')\n.replace(/^(\\d+)[、．]第.+章/,'第$1章')\n.replace(/^(\\d+)、\\d+、/,'第$1章 ')\n.replace(/^(\\d+)、\\d+/,'第$1章')\n.replace(/^(第.+章)\\s?\\d+/,'$1')\n.replace(/^(\\d+)、/,'第$1章 ')\n.replace(/^(第.+章)\\s?第.+章/,'$1')\n.replace(/第\\s(.+)\\s章/,'第$1章')\n.replace(/.*(chapter|Chapter)\\s?(\\d+)\\s?/,'$1 $2 ')\n.replace(/\\(.+\\)/,'')\n.replace(/\\[|。/,'')\n.replace(/第([零一二三四五六七八九十百千]+)章/g,java.toNumChapter(result))\n##(章)([^\\s]+)(\\s·)##$1 $2$3",
      "name": "[property$=book_name]@content",
      "tocUrl": "text.完整目录@href||class.btn more-btn@href##.*?com",
      "wordCount": ".infolist@li.0@textNodes"
    },
    "ruleContent": {
      "content": "@js:\nvar txtnav = java.getElement(\".txtnav\")\ntxtnav.select(\"*:not(p,br)\").remove()\ntxtnav.html()",
      "replaceRegex": "##\\s*({{ book.durChapterTitle }}|.*作者：.*|\\(本章完\\)|PS：.*求推荐！|PS：.*求收藏！|感谢.*打赏.*|感谢.*推荐票.*|感谢.*月票.*|（.*月票.*）|（为大家的.*票加更.*）|第二更在.*|loadAdv.*)\\s*",
      "title": ""
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "tag.label.0@text",
      "bookList": "<js>\nif(result.match(/Just a moment/)){\ncookie.removeCookie(source.bookSourceUrl)\nvar x=baseUrl;\nvar s=java.startBrowserAwait(x,\"验证\").body()\nresult=s;\n\t}else{\n\t\tresult=result;\n\t\t}\nresult\n</js>\nclass.newbox@ul@li\n#article_list_content ul@li||#checkform@div.0@div.0@ul@li||class.newlistbox@ul@li",
      "bookUrl": "class.btn btn-tp@href",
      "coverUrl": "tag.img@src\n<js>\nif(baseUrl.match(\"cdn/images/nc.jpg\")){baseUrl=\"\";}</js>",
      "intro": "tag.ol.0@text",
      "kind": "tag.label.1@text&&tag.label.2@text",
      "name": "h3@text"
    },
    "ruleToc": {
      "chapterList": "-id.catalog@ul@li@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "<js>\nif(key.match(/#/)){\nresult='https://www.69shuba.com/book/'+encodeURI(key.match(/^(?:#|＃)(.*)/)[1])+'.htm';}\nelse{\tresult='https://www.69shuba.com/modules/article/search.php,{\"charset\": \"gbk\", \"method\": \"POST\", \"body\": \"searchkey='+key+'&searchtype=all\"}';}\nresult</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "┍　　　说明　　　作者：洛娅橙　　┒\n├────────────────┤\n│①书源默认优化正文加载，可能会导│\n│致下载书籍异常，在该登录界面点击│\n│启用下载即可。　　　　　　　　　│\n│②登录界面开启同步书架功能，在详│\n│情页下拉刷新两次或书架刷新，会自│\n│动同步至网站书架。　　　　　　　│\n│③支持屏蔽书籍为黑名单，之后在搜│\n│索和发现不再显示屏蔽后的书籍。误│\n│点时，可再次点击进行恢复。　　　│\n│④输出名单到日志需要在软件其它设│\n│置里开启记录日志功能。　　　　　│\n├────────────────┤\n│　　　　　　　　　　　　　　　　│\n│请使用阅读最新测试版导入该书源　│\n└────────────────┘\n┍　　　　书源作者：洛娅橙　　　　┒\n├───┬────────────┤\n│！免责│本书源只提供代码进行技术│\n│！声明│交流，请于２４小时后删除│\n├───┴────────────┤\n│可在书源登录界面进行登录　　　　│\n│书籍变量可用来进行交互，详情查看│\n│相应界面的变量说明　　　　　　　│\n└────────────────┘\n___________________________________________\n八叉发布页：https://8xsk.org\nip地址查看：https://iplark.com",
    "bookSourceGroup": "🙈,八叉",
    "bookSourceName": "🌈八叉书库",
    "bookSourceType": 0,
    "bookSourceUrl": "https://八叉书库.luoyacheng.ip-ddns.com",
    "bookUrlPattern": "https://www.(?:\\d+\\.xyz|8xbook.+)/book/\\d+\\.html",
    "concurrentRate": "1000",
    "coverDecodeJs": "",
    "customOrder": -93912,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.5.0\";\nftsm();\neval(String(source.loginUrl));\nlet surl = `{{String(source.getVariable()).replace(/\\\\/$/,'')}}`;\n\nvar obj = {\n\t最近更: {\n\t\t\"url\": \"/sort/0/{{page}}.html\",\n\t\t\"fg\": 9},\n\t\t'新(肉)':{\n\t\t\"url\": \"/sort/7/{{page}}.html\",\n\t\t\"fg\": 1},\n\t最近入库: {\n\t\t\"url\": \"/top/postdate/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t最近完: {\n\t\t\"url\": \"/modules/article/articlelist.php?fullflag=1&page={{page}}\",\n\t\t\"fg\": 9,\n\t\t\"wrap\": true},\n\t\t'结(肉)':{\n\t\t\"url\": \"/modules/article/articlelist.php?sortid=7&fullflag=1&page={{page}}\",\n\t\t\"fg\": 1},\n\t签约新书: {\n\t\t\"url\": \"/top/signtime/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t字数榜: {\n\t\t\"url\": \"/top/words/{{page}}.html\",\n\t\t\"wb\": true},\n\t收藏榜: {\n\t\t\"url\": \"/top/goodnum/{{page}}.html\"},\n\t新书榜: {\n\t\t\"url\": \"/top/newhot/{{page}}.html\"},\n\t\t\n\t总点击: {\n\t\t\"url\": \"/top/allvisit/{{page}}.html\",\n\t\t\"wb\": true},\n\t月点击: {\n\t\t\"url\": \"/top/monthvisit/{{page}}.html\"},\n\t周点击: {\n\t\t\"url\": \"/top/weekvisit/{{page}}.html\"},\n\t\t\n\t总推荐: {\n\t\t\"url\": \"/top/allvote/{{page}}.html\",\n\t\t\"wb\": true},\n\t月推荐: {\n\t\t\"url\": \"/top/monthvote/{{page}}.html\"},\n\t周推荐: {\n\t\t\"url\": \"/top/weekvote/{{page}}.html\"},\n\t\t搜索: {\n\t\t\turl: \t`{{\n\t\t\t\tlet surl = String(source.getVariable()).replace(/\\\\/$/,'');\n\t\t\t\tif (page == 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\tlet [cb,cf] = colorz();\n\t\t\t\t\tsvg=\\`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"100%\" height=\"150%\" fill=\"#\\${cb}\"/><text fill=\"#\\${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\"><tspan x=\"50%\" dy=\"30%\" font-size=\"100\">请输入搜索关键词</tspan><tspan x=\"50%\" dy=\"50%\" font-size=\"50\">此处搜索不支持完整书名</tspan></text></svg>\\`;\n\tsvg=java.base64Encode(svg);\n\tkeyy=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\n\t\t\t\t\t} catch(err) {keyy='系统';\n\t\t\t\t\tPackages.java.lang.Thread.sleep(500);\n\t\t\t\t\tjava.toast('使用默认关键词“系统”');}\n\t\t\t\t\tsource.put('keyy',keyy);\n\t\t\t\t\t\t}\n\t\t\t\telse keyy = source.get('keyy');\n\t\t\t\turl =\tsurl+'/modules/article/search.php?searchkey='+keyy+'&searchtype=all&page='+page;\n\t\t\t\turl\n\t\t\t}}`,\n\t\t\t\"fb\": 0.3,\n\t\t\t\"wb\": true},\n\t我的书架: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\tlet surl = String(source.getVariable()).replace(/\\\\/$/,'');\n\t\tlet ck = source.getLoginHeader();\n\t\tcookie.replaceCookie(surl,ck);\n\t\tck ? surl+'/modules/article/bookcase.php' : java.longToast('请登录账号');\n\t\t} else 'http://127.0.0.1/';\n\t\t}}`,\n\t\t\"fb\": 0.3}\n\t}\n\nvar sort = [];\npush = (title, url, size, wrap, cc) => sort.push({\n    \"title\": title,\n    \"url\": url.startsWith(\"{{\") ? url : url ? surl + url : \"\",\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: cc || -1,\n      layout_wrapBefore: wrap ? wrap : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\n\n//版本号\npush(\"版本号:\"+banben+\"　点我刷新地址\", `{{if(page==1) {\n\tjava.put(\"bj1\", 0);\n\tcache.put('8xbl1', source.getVariable());\n\tsource.setVariable(''); gengxin();\n\teval(String(source.loginUrl));\n\tif (java.get(\"bj1\")==1) java.longToast('源地址没有更新');;}\n\t'http://127.0.0.1/'+page}}`, 1, true);\npush(\"测速/更新\",`{{eval(String(source.loginUrl));gengxin(); Packages.java.lang.Thread.sleep(100); ceshi(); 'http://127.0.0.1/'}}`, 1);\n\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n   // let ck = source.getLoginHeader() || '';\n    nn = String(source.getVariable());\n    let ck = cookie.getCookie(nn);\n    let headers = {\n    \t'User-Agent': ua,\n    \t'x-requested-with': x_r_w,\n    \t'sec-ch-ua': s_c_u,\n    \t'sec-ch-ua-platform': s_c_u_p,\n    \t'cookie': ck\n    \t };\n    \t return JSON.stringify(headers);\n})();",
    "jsLib": "ua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.2957.129';\nx_r_w = 'com.microsoft.emmx';\ns_c_u_p = 'Android';\ns_c_u = `\"Not(A:Brand\";v=\"99\", \"Android WebView\";v=\"133\", \"Chromium\";v=\"133\"`;\nfunction colorz() {\n\tconst {java, source} = this;\n\tlet cb,cf;\n\ttry {\n\t\tcb = source.getLoginInfoMap().get('封面背景颜色');\n\t\tif (cb=='') throw '空';\n\t\t} catch(err) {cb='151E27';}\n\ttry {\n\t\tcf = source.getLoginInfoMap().get('封面字体颜色');\n\t\tif (cf=='') throw '空';\n\t\t} catch(err) {cf='dddddd';}\nreturn [cb,cf];\n}\n\nfunction hexToInt(e, t) {\n        var r = e.substr(t, 2);\n        return parseInt(r, 16);\n    }\nfunction decodeEmail(n, c) {\n    var o = \"\", a = hexToInt(n, c), i = c + 2;\n    for (i; i < n.length; i += 2) {\n        var l = hexToInt(n, i) ^ a;\n        o += String.fromCharCode(l);\n    }\n        o = decodeURIComponent(escape(o));\n        return o\n}\n\n\nfunction ftsm(){\n\tconst {java, source} = this;\n\tlet nm = source.get('8xftn');\n\tif(nm==''||nm<0) {nm=3;}\nif(nm>0) {\n\tnm--;\n\tsource.put('8xftn',nm);\n\tlet ss = String(source.bookSourceComment).match(/\\n┍[^┘]+┘/)[0];\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);\n\tPackages.java.lang.Thread.sleep(2000);\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);}\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<title>更新</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://gitee.com/lyc486/yuedu2/raw/main/书源/八叉/8x.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/书源/八叉/8x.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'更新');\r\n}\n\nfunction tbshujia(iuu,iid){\nconst {java, source} = this;\nlet iuux=iuu+'/modules/article/addbookcase.php';\nlet iuuy=String(iuu+'/book/'+iid+'.html'); //需要转化否则报错\nlet tm = new Date().getTime();\nlet body = `bid=${iid}&ajax_request=${tm}`;\nlet ck = source.getLoginHeader()||'';\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': iuuy,\n        'cookie': ck\r\n    };\nif (String(ck).includes(\"jieqiUserInfo\") ) {\nlet by = java.post(iuux,body,headers).body();\njava.longToast('\\n'+this.book.name+'：\\n'+by);}\n}\n\nfunction hmdjib(id,name){\nconst {java, source, cache} = this;\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet i=false;\n\ttry {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名黑名单');\n\t\tlet rg = eval(String(rgstr));\n\t\ti=rg.test(name);\n\t\t} catch(err) {}\n\ttry {\n\t\tif (i) {\n\t\tlet rgstr = source.getLoginInfoMap().get('正则书名白名单');\n\t\tlet rg = eval(String(rgstr));\n\t\t i=!rg.test(name);\n\t\t }\n\t\t} catch(err) {}\n\t\ti = i||(id in hmd);\n\t\treturn i;\n\t}\n\nOranges = `<path d=\"M646.4 763.6c150.1-15.8 267.1-142.7 267.1-297 0-164.9-133.7-298.7-298.7-298.7-154.8 0-282.1 117.8-297.2 268.7\" fill=\"#FA9F23\" p-id=\"5624\"></path><path d=\"M648.6 784.8l-4.5-42.4c67.7-7.1 130.3-39 176.3-89.7 46.3-51.1 71.7-117.2 71.7-186.1 0-74.1-28.8-143.7-81.2-196.1-52.4-52.4-122-81.2-196.1-81.2-69.2 0-135.5 25.6-186.6 72.2-50.8 46.3-82.5 109.2-89.3 177.3l-42.5-4.2c7.8-78.6 44.4-151.2 103-204.6 59-53.7 135.5-83.3 215.4-83.3 85.5 0 165.8 33.3 226.3 93.7 60.4 60.4 93.7 140.8 93.7 226.3 0 79.6-29.4 155.9-82.8 214.8-53 58.3-125.2 95.1-203.4 103.3z\" fill=\"#333333\" p-id=\"5625\"></path><path d=\"M161.5 832.4c116.6 116.6 305.7 116.6 422.4 0s116.6-305.7 0-422.4\" fill=\"#FA9F23\" p-id=\"5626\"></path><path d=\"M372.7 941.2c-85.5 0-165.8-33.3-226.3-93.7l30.2-30.2c52.4 52.4 122 81.2 196.1 81.2s143.7-28.8 196.1-81.2c52.4-52.4 81.2-122 81.2-196.1s-28.8-143.7-81.2-196.1l30.2-30.2c60.4 60.4 93.7 140.8 93.7 226.3S659.4 787 599 847.5c-60.5 60.4-140.8 93.7-226.3 93.7z\" fill=\"#333333\" p-id=\"5627\"></path><path d=\"M161.480941 832.416461a170.7 298.7 44.999 1 0 422.418218-422.432964 170.7 298.7 44.999 1 0-422.418218 422.432964Z\" fill=\"#FBE0C3\" p-id=\"5628\"></path><path d=\"M249.1 885.8c-9.3 0-18.4-0.7-27.2-2-30.5-4.6-55.9-16.8-75.5-36.4-19.6-19.6-31.8-45-36.4-75.5-4.2-28-1.7-59 7.4-92.4 18.1-66.2 60.5-135.2 119.5-194.2S364.9 384 431.1 366c33.3-9.1 64.4-11.6 92.4-7.4 30.5 4.6 55.9 16.8 75.5 36.4s31.8 45 36.4 75.5c4.2 28 1.7 59-7.4 92.4C609.9 629 567.5 698 508.5 757s-128 101.4-194.2 119.5c-22.9 6.2-44.7 9.3-65.2 9.3z m18-370.2c-53.8 53.8-92.4 116.1-108.5 175.2-15 55-8.6 99.9 18 126.5s71.5 33 126.5 18c59.2-16.1 121.4-54.7 175.2-108.5 53.8-53.8 92.4-116.1 108.5-175.2 15-55 8.6-99.9-18-126.5s-71.5-33-126.5-18c-59.1 16.2-121.4 54.7-175.2 108.5z\" fill=\"#333333\" p-id=\"5629\"></path><path d=\"M373.3 641.5h148.4c-16.2 23.8-35.8 47.6-58.5 70.2-28.9 28.9-59.7 52.9-90 71.1l0.1-141.3z m187.1-193.4c27 37.3 15.7 103.4-25.2 172.1H388.3l172.1-172.1zM351.9 656.6v138.2c-61.4 31.7-118.7 38.6-152.4 14.2l152.4-152.4z m-152.5-15.1h137.4L184.6 793.8c-24-33.9-16.9-91.1 14.8-152.3z m173.9-182.6c68.5-40.9 134.5-52.4 172-25.9l-172 172V458.9z m-91.1 71.8c22.5-22.5 46.1-42 69.7-58.1v147.6H211.4c17.6-29.1 40.4-58.6 67.8-86.5l3-3z\" fill=\"#F5A74A\" p-id=\"5630\"></path><path d=\"M625.8 266.5l-13.5 9.9c-1.9 1.4-4.6 1-6-0.9-0.6-0.9-0.9-1.9-0.8-3l1.8-16.7L592 249c-2.2-1-3.1-3.5-2.2-5.6 0.4-1 1.2-1.8 2.2-2.2l15.3-6.8-1.8-16.7c-0.3-2.3 1.4-4.4 3.8-4.7 1.1-0.1 2.1 0.2 3 0.8l13.5 9.9 13.5-9.9c1.9-1.4 4.6-1 6 0.9 0.6 0.9 0.9 1.9 0.8 3l-1.8 16.7 15.3 6.8c2.2 1 3.1 3.5 2.2 5.6-0.4 1-1.2 1.8-2.2 2.2l-15.3 6.8 1.8 16.7c0.3 2.3-1.4 4.4-3.8 4.7-1.1 0.1-2.1-0.2-3-0.8l-13.5-9.9z\" fill=\"#333333\" p-id=\"5631\"></path><path d=\"M799.4 313.5m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5632\"></path><path d=\"M828.4 348.3m-12.8 0a12.8 12.8 0 1 0 25.6 0 12.8 12.8 0 1 0-25.6 0Z\" fill=\"#333333\" p-id=\"5633\"></path>`;\n\nfunction jinghuafm() {\nconst {java, source} = this;\t\nfunction splitString(str) {\n    const length = str.length;\n    if (length < 15) {\n        return length<9 ? [str] : [\n            str.slice(0, 7),\n            str.slice(7)\n        ].filter(s => s);\n    } else if (length < 20) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13)\n        ].filter(s => s);\n    }  else if (length < 24) {\n        return [\n            str.slice(0, 7),\n            str.slice(7,13),\n            str.slice(13,18),\n            str.slice(18)\n        ].filter(s => s);\n    } else {\n        return [\n            str.slice(0, 7),\n            str.slice(7, 13),\n            str.slice(13, 18),\n            str.slice(18, 22),\n            str.slice(22)\n        ].filter(s => s);\n    }\n}\nfunction pingString(ss) {\nlet rr='';\nlet l1=ss.length;\nfor (let i1=0; i1<l1; i1++) {\n\tlet c1=ss[i1], l2=c1.length;\n\tfor (let i2=0; i2<l2; i2++) {\n\t\tlet c2=c1.charAt(i2);\n\t\trr += `<tspan x=\"${100+180*ii}\" y=\"${180+170*(i2+i1)}\">${c2}</tspan>`;\n\t\t}\n\t\tii++;\n\t}\n\treturn rr;\n}\n\nlet [cb,cf] = colorz();\n\nlet bknm=String(this.book.name).replace(/\\.{2,}/,'…');\nbknm=bknm.match(/[a-z][a-z\\+一-ꀀ\\d…]+|[一-ꀀ\\da-z]{2,}(?:\\.\\d+[一-ꀀ]*|[…？])?|[一-ꀀ]/gi);\nlet hz='';\nlet ii=0;\n\nfor (char of bknm) {\n\thz += pingString(splitString(char) );\n\t}\n\nsvg = `<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5623\" width=\"100%\" height=\"100%\">\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<g transform=\"scale(0.4) translate(1600,2500)\">${Oranges}</g>\n<text fill=\"#${cf}\" stroke=\"#000000\" stroke-width=\"2\" font-weight=\"bold\" font-size=\"150\" text-anchor=\"middle\" dominant-baseline=\"middle\">\n${hz}\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\nreturn 'data:image/svg+xml;base64,'+svg;\n}\n",
    "lastUpdateTime": "1742122298373",
    "loginCheckJs": "//java.toast('登录检查:'+result);\nlet code = result.code();\nif (code == 403) {\n\tjava.toast('\\n访问被拒绝');\n\t}\nelse if (code == 520) {\n\tjava.toast('\\nIP被拉黑');\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"账号\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    },\n    {\n        name: \"💍注册\",\n        type: \"button\",\n        action: \"web()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"🔺登　录🔺\",\n        type: \"button\",\n        action: \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"♤登出\",\n        type: \"button\",\n        action: \"re()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n    \tname: \"💬说明\",\n    \ttype: \"button\",\n    \taction: \"sm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    \t},\n    \t{\n        name: \"🧾延迟测试\",\n        type: \"button\",\n        action: \"ceshi()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"⏭️启用下载\",\n        type: \"button\",\n        action: \"downl()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐打开本书↓\",\n        type: \"button\",\n        action: \"webb()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"❌屏蔽\",\n        type: \"button\",\n        action: \"hmd()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🧹清理\",\n        type: \"button\",\n        action: \"hmdre()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🆕版本更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"♻️同步书架\",\n        type: \"button\",\n        action: \"shujia()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书架\",\n        type: \"button\",\n        action: \"webbs(1)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"正则书名黑名单\",\n        type: \"text\"\n    },\n    {\n        name: \"正则书名白名单\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐查看日志\",\n        type: \"button\",\n        action: \"gitee()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"🌐网站选书\",\n        type: \"button\",\n        action: \"webbs(2)\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🔁书名\",\n        type: \"button\",\n        action: \"shuming()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🗻净化封面\",\n        type: \"button\",\n        action: \"jhfm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书源介绍\",\n        type: \"button\",\n        action: \"java.startBrowser('https://www.luoyacheng.ip-ddns.com/#八叉','介绍');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🤔反馈\",\n        type: \"button\",\n        action: \"java.startBrowser('https://github.com/Luoyacheng/yuedu/issues','8x反馈');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"封面背景颜色\",\n        type: \"text\"\n    },\n    {\n        name: \"封面字体颜色\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐网页登录\",\n        type: \"button\",\n        action: \"weblogin()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    }\n]",
    "loginUrl": "nn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\nlet rr=java.connect('https://www.8xsk.org/');\nlet ur=(rr.body().match(/电脑主站[^\"]+\\\"([^\"]+)\\\"/)||['',''])[1];\nlet x = cache.get('8xbl1');\nif (ur == '') {\n\tjava.longToast(\"书源地址获取失败💔\");\n\tsource.setVariable(x);\n\tPackages.java.lang.Thread.sleep(300);\n\t}\nelse {\n\tif (ur != x) {\n\t\t\tjava.log(\"八叉源地址更新：\"+ur);\n\t\t\tjava.longToast(\"🎉书源地址已更新\");\n\t\t\tcache.put('8xbl1',ur);\n\t\t\tPackages.java.lang.Thread.sleep(300);}\n\t\telse {java.put(\"bj1\", 1);}\n\t\t\tsource.setVariable(ur);\n\t\t\tnn = ur;\n\t}\n}\n\nfunction login(){}\r\nfunction Login(){\n\tjava.longToast('\\n正在登录...\\n稍等一下');\n\tsource.removeLoginHeader();\n//\tcookie.removeCookie(nn);\n\tlet wbjs=`\n\t\tconst inpt = document.querySelector('input[name=\"checkcode\"]');\n\t\tconst oCode = inpt.getAttribute(\"onfocus\");\n\t\tconst url=oCode.match(/src\\\\s*=\\\\s*[\"']([^\"']+)/)[1];\n\t\turl\n`;\n    let url0=java.webView(null,nn,wbjs);\n    /^http/.test(url0)&&java.toast('\\n💔获取验证码链接失败');\n    let code=java.getVerificationCode(url0);\n    let ck = cookie.getCookie(nn);\r\n    let url = nn+'/login.php';\r\n    let un = result['账号'];\r\n    let pw = result['密码'];\r\n    let time = new Date().getTime();\n    let body = `username=${un}&password=${pw}&checkcode=${code}&usecookie=1&act=login&jumpreferer=1&t_btnlogin=&ajax_request=${time}`;\n\r\n    let headers = {\r\n        'referer': nn,\n        \t'user-agent': ua,\n        \t'x-requested-with': x_r_w,\n        \t'sec-ch-ua-platform': s_c_u_p,\n        \t'cookie': ck};\n    \n    if (un!=''&&pw!=''&&url0!='') {\n    let cookie1 = java.post(url,body,headers).cookies();\n    let ck = cookie.mapToCookie(cookie1);\n    //处理cookie格式\r\n    source.putLoginHeader(ck);\n  //  cookie.removeCookie(nn);\n    let i = String(ck).includes(\"jieqiUserInfo\");\n    //会存入登录信息，无需点✓\r\n    if (i) {source.putLoginInfo(JSON.stringify(result));java.toast(\"登录成功，VIP模式💎\");}\r\n    else java.toast(\"登录失败，访客模式🔒\");\n    } else {java.toast(\"💔账号和密码不能为空\");}\n\r\n}\n\nfunction weblogin(){\n\tsource.removeLoginHeader();\n\tlet url = nn.replace('www.','') + '/login.php';\n\tjava.startBrowserAwait(url, '八叉登录');\n\tPackages.java.lang.Thread.sleep(300);\n\tlet ck = cookie.getCookie(nn);\n\tlet i = String(ck).includes(\"jieqiUserInfo\");\n\tif (i) {source.putLoginHeader(ck);java.toast(\"网页登录成功，VIP模式💎\");}\n\telse java.toast(\"网页登录失败，未获取到账号cookie\");\n\t}\r\n\r\nfunction web(){\r\n    let url = nn.replace('www.','') + '/register.php';\n    cookie.removeCookie(url);\r\n    java.startBrowser(url, '八叉注册');\r\n}\n\nfunction ceshi(){\n\t['　　　','·　　','··　','···'].forEach((_,i) => {java.toast('\\n\\n测试中'+_+'\\n');Packages.java.lang.Thread.sleep((3-i)*100);}); //然并卵的动画(但是好看)\n\ttry {\n  const startTime=new Date().getTime();\n\tjava.head(nn,{\t'user-agent': ua});\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime) / 1000;\n\tspeed = speed.toFixed(2);\n\tjava.toast('\\n\\n延迟：'+speed+'秒\\n');\n\t} catch(err) {java.longToast(err);}\n\r\n}\n\n\r\nfunction re(){\n\tjava.toast('稍等');\n\tjava.ajax(nn+'/userdetail.php');\n\t//输出一份数据到日志，以备需\n\tjava.log('\\n账号：'+result['账号']+'\\n密码：'+result['密码']);\n\t//消除相应数据\r\n    cookie.removeCookie(nn);\n    source.removeLoginHeader();\n    result['账号']=result['密码']='';\n    source.putLoginInfo(JSON.stringify(result));\n    cache.deleteMemory('8xid');\n    java.toast(\"回到访客模式🔒\");\r\n}\n\r\nfunction sm(){\nlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\nlet ss = String(source.bookSourceComment).match(/^[^┘]+┘/);\nlet cki = String(source.getLoginHeader()).includes(\"jieqiUserInfo\");\n    let ms= \"访客模式🔒\";\n    if (cki != '') {\r\n        ms = \"VIP模式💎\";\r\n    }\r\nlet tt = `\n网址：${nn}　　 \n模式：${ms}　　　　　　   \n版本：${banben}　　　　　　　　　　\n\n${ss}`;\n    java.longToast(tt);\r\n}\nfunction webck(){\n\tlet nnm=nn.replace('www.','');\n\tlet ck=source.getLoginHeader()||'';\n\tcookie.replaceCookie(nnm,ck);\n\treturn nnm;\n\t}\nfunction webb(){\n\tlet id = cache.getFromMemory('8xid');\n  if (id) {\n  \tid=Object.keys(id)[0];\n  \tlet nnm=webck();\n   java.startBrowser(`${nnm}/book/${id}.html`,'八叉');\n   } else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n}\n\nfunction webbs(x){\n\tlet nnm=webck();\n\tif (x==1) {nnm+='/modules/article/bookcase.php';}\n\tlet wr=java.startBrowserAwait(nnm,'web',false).body();\n\tlet bkid=(wr.match(/https.+\\/book\\/(\\d+).*\\.html/)||['',''])[1];\n\tlet url = \"legado://import/addToBookshelf?src=\"+nn+\"/book/\"+bkid+\".html,{origin:'https://八叉书库.luoyacheng.ip-ddns.com'}\";\n\tif (bkid!='') java.openUrl(url);\n}\n\nfunction hmd(){\n\tlet id = cache.getFromMemory('8xid');\n\tif (id) {\n\tlet hmd = cache.get('8xhmd')||'{}';\n\thmd = JSON.parse(hmd);\n\tlet idd = Object.keys(id)[0];\n\tif (idd in hmd) {\n\t\tdelete hmd[idd];\n\t\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n移除黑名单😅');\n\t\t}\telse {\n\thmd = Object.assign({},hmd,id);\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n加入黑名单😤');}\n\t\n\t} else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n\t\n}\n\nfunction hmdre(){\n\tlet hmd=cache.get('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet ss=Object.entries(hmd);\nlet [cb,cf] = colorz();\nlet svg=`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n<style>\ntext {\n\twhite-space: pre;\n\tword-wrap: break-word;}\n</style>\n<rect width=\"100%\" height=\"150%\" fill=\"#${cb}\"/>\n<text fill=\"#${cf}\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\">\n<tspan x=\"50%\" dy=\"30%\" font-size=\"100\">\n是否清空黑名单<tspan font-size=\"30\">（${ss.length}）</tspan>\n</tspan>\n<tspan x=\"42%\" dy=\"25%\" font-size=\"60\">输入“确认”进行清空</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入“名单”打印一份名单到日志</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入书籍ID单独移出黑名单<tspan font-size=\"30\">(名单查看)</tspan></tspan>\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\n\ntry {\n//拦截验证码报错\nlet ysr=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\nPackages.java.lang.Thread.sleep(100);\nif (ysr=='确认') {\n\tcache.delete('8xhmd');\n\tjava.toast('\\n已清空');\n}\nelse if (ysr=='名单') {\n\tjava.log('\\n💔8x黑名单：\\n'+ss.join('\\n'));\n\tcache.put('8xbff',source.getLoginInfo());\n\tcache.put('8xbff2',source.getLoginHeader());\n}\nelse if (/\\d{3,}/.test(ysr)) {\n\tif (ysr in hmd) {\n\tjava.toast('\\n已将书籍：'+hmd[ysr]+'\\n移除黑名单');\n\tdelete hmd[ysr];\n\tcache.put('8xhmd',JSON.stringify(hmd),0);\n\t} else {java.toast('移出失败');}\n}\nelse if (ysr=='恢复') {\n\tlet ryr=cache.get('8xbff');\n\tlet ryr2=cache.get('8xbff2');\n\tsource.putLoginInfo(ryr);\n\tsource.putLoginHeader(ryr2);\n}\n\n} catch(err) {}\n}\n\nfunction downl() {\nlet dn = source.get('8xdn');\nif(dn!=1) {source.put('8xdn',1);java.toast('已支持下载');}\nelse {source.put('8xdn',0);java.toast('已优化加载');}\n\t}\nfunction shujia() {\nlet dn = source.get('8xsj');\nif(dn!=1) {source.put('8xsj',1);java.toast('🟢已启用同步网站书架');}\nelse {source.put('8xsj',0);java.toast('⚫已关闭同步网站书架');}\n\t}\nfunction shuming() {\nlet sm = source.get('8xsm');\nif(sm!=1) {source.put('8xsm',1);java.toast('🟢书名跟随更新');}\nelse {source.put('8xsm',0);java.toast('⚫书名保持初始');}\n\t}\nfunction jhfm() {\nlet jhf = source.get('8xjhf');\nif(jhf!=1) {source.put('8xjhf',1);java.toast('😈净化封面');}\nelse {source.put('8xjhf',0);java.toast('😍显示封面');}\n\t}\n\nfunction gitee() {\njava.startBrowser(`https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json,{\n\t\t'headers': {\n\t\t\t'User-Agent': 'Mozilla/5.0 (Linux; Android 14)'}\n\t\t\t}`,'日志');\n}",
    "respondTime": 9789,
    "ruleBookInfo": {
      "author": "",
      "canReName": "",
      "coverUrl": "class.divbox cf@img.0@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "init": "<js>\n//重定向和导入书架处理\nlet i = String(book.bookUrl).includes('https:/');\nif (i) {\n\tbook.bookUrl = `data:;base64,${java.base64Encode(baseUrl.replace(/,{o.+/,''))},{'type':''}`;\n\t}\n\n//告诉目录是由详情来的\njava.put('sx1',1);\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\n//发书评功能\nlet bkbl = book.getVariable(\"custom\");\n//解书籍地址\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet bkid = (mlj.match(/book\\/(\\d+)/)||['',''])[1];\n//↑获取书id\njava.put('bkid',bkid);\n\nif (bkbl=='🔒'||bkbl=='') {\n//带🔒或书籍变量为空会经过这里\n//处理加书架功能\nlet sj=java.get('sj');\nlet sj2=source.get('8xsj'); //启用同步的标识\nif (sj=='2'&&sj2=='1') {java.put('sj',3);tbshujia(nn,bkid);}\nelse if (sj=='1') {java.put('sj',2);}\n\n\t}\nelse if (bkbl=='目录') {\n\t//清空最新章储存强制刷新目录\n\tjava.put('8xzx','');\n\t//清空输入的书籍变量\n\tbook.putCustomVariable('');}\nelse {\nlet pfurl = nn+'/modules/article/rating.php';\nlet plurl = nn+'/modules/article/reviews.php';\nlet ck = source.getLoginHeader()||'';\nlet cki = ck.match(/UserToken%3D([^%]+)/)||['',''];\ntk = cki[1];\n//ck = cookie.getCookie(nn);\n//↑获取链接和tk\n\nif (bkid != '' && tk != '') {\nlet tm = new Date().getTime();\nlet bkfs = (bkbl.match(/^(\\d|10)分$/) || ['','0'])[1];\nlet pfbody = `score=${bkfs}&id=${bkid}&ajax_request=${tm}`;\nlet plbody = `ptitle=&act=newpost&jieqi_token=${tk}&Submit=&pcontent=${bkbl}&aid=${bkid}&ajax_request=${tm}`;\n\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': mlj,\n        'cookie': ck\r\n    };\nif (bkfs != 0) {url=pfurl;body=pfbody;}\nelse {url=plurl;body=plbody;}\n//清空输入的书籍变量\nbook.putCustomVariable('');\nlet by = java.post(url,body,headers).body();\njava.longToast(\"\\n\"+java.htmlFormat(by));\n\t} else if (tk == '') {java.toast('未登录');}\n}\n\n//随机延时0-1秒\nlet tim = Math.floor(Math.random()*1001);\n//java.log('延时'+tim);\nPackages.java.lang.Thread.sleep(tim);\n\n//先发评论再访问刷新\nif (!i) {\n\tlet tt = java.hexDecodeToString(result);\n\t//不能直接访问tt，result无法改动\n\ttt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\n\tconst startTime=new Date().getTime();\n\tresult = java.ajax(nn+tt); //+\",{'webView': true}\"\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) {java.toast('\\n详情页访问延迟过长：'+speed.toFixed()+'秒');}\n\tjava.setContent(result);\n\t}\n\n//内容判断\nlet r = java.getString('@@meta[name=\"keywords\"]@content');\nlet name=String(r).replace(/\\, .+/,'');\nlet author=String(r).replace(/.+\\, /,'');\n\nif (name) {\n\tbook.name=String(book.name)||name;\n\tbook.author=String(book.author)||author;\n//放入书名\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n//放入ID和书名。正式版js语法报错点\ncache.putMemory('8xid',{[bkid]: book.name});\n\tif (book.name!=name) {\n\t\t\tlet sm=source.get('8xsm'),sm1=java.get('sm1');\n\t\t\t//sm功能标记，sm1判断标记\n\t\t\tif (sm1=='') {\n\t\t\t//可能源地址换新了，进行更新\n\t\t\tcache.put('8xbl1', source.getVariable() );\n\t\t\tsource.setVariable('');\n\t\t\tjava.put('sm1',1);\n\t\t\t} else if (sm=='1') {\n\t\t\t\tbook.name=name;\n\t\t\t\tjava.toast(\"已自动更新书名\");\n\t\t\t} else if (sm1=='1') {\n\t\t\t\tjava.longToast(\"详情页获取的书名：\\n《\"+name+\"》\");\n\t\t\t\tjava.log(\"书名：\"+name);\n\t\t\t\tjava.put('sm1',2);\n\t\t\t}\n\t\t\t\n}\telse if (book.author!=author) {java.log(\"获取的作者不同，作者：\"+author);} //仅输出日志\n\t\n\t//书名和作者正常由此过\n\t}\nelse {\n\t//书名加载失败\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\tjava.toast(\"详情页加载失败，请刷新重试\");\n}\n\tresult\n</js>",
      "intro": "{{\n//书名过长时在简介显示\nlet length = 0;\nlet fuhao = ',.?!:;()[]\"';\n\nfor (char of String(book.name)) {\n\tif (fuhao.includes(char) ) length += 0.5;\n\telse length += 1;\n\t}\n//大于18个全角字符\nif (length > 18) '《'+book.name+'》'\nelse '&#10;'\n}}\n{{\nlet zx = java.getString('class.divbox@h3@a@text');\nlet temp=java.getStringList('class.tabcontent@class.tabvalue.1@td[0:3,9,10]@text');\nrr=Object.values(temp);\n//处理rr\n[rr[0], rr[2]] = [rr[2], rr[0]];\nrr[0] = '最新：' + String(zx).replace(/^正文|^\\s+/,'') + String(rr[0]).replace('最后更新：',' ').replaceAll('-','/') + String(rr[1]).replace(/连载状态：(.+)/,' ($1)');\ndelete rr[1];\nrr[2] = String(rr[2]).replace(/作品分类：\\s*/,'分类：') + String(rr[3]).replace(/作品性质：(.+)/,' ($1)');\ndelete rr[3];\nrr[4] = String(rr[4]).replace(/总点击数：\\s*/,'点击：') + String(rr[5]).replace(/本月点击：(.+)/,'　$1 (月)');\ndelete rr[5];\n//评分\nlet pf=java.getString('.ratediv@text');\nlet r0 = rr.join('\\n') + '\\n' + String(pf).replace(/评分：\\s*/,'评分：');\n//简介\nlet r1=java.getString('.tabcontent .tabvalue:eq(0) div@html');\nif (r1==\"\") {r1='';}\nelse {\n r1 = '\\n简介：\\n' + String(r1).replace(/[\\u3000\\u2003]{2}/g,'\\n').replace('「','“').replace('」','”').replace(/\\>\\s*内容简介/,'')\n\t}\n//评论\nlet r2=String(java.getString('#content>.c_row@html'));\nlet xi = book.getVariable(\"custom\")==\"🔒\";\nif (r2==''||xi) {r2='';}\nelse {\n\tr2 = r2.replace(/<div class=\"c_subject\"[\\S\\s]+?div>|<span class=\"fr\"[\\S\\s]+?span>|回复：.+/g,'').replace(/<p[> ].+<\\/p>/g,'﹍');\n\t//java.htmlFormat(r);\n\t}\n\tr0 + r1 + r2\n}}",
      "kind": "b:contains(标签：)~a@text\n<js>\nString(result).slice(1, -1).replace(/[\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "class.divbox@h3@a@text\n<js>\nlet zx = java.get('8xzx');\nif (zx==result) java.put('ww',1);\nelse {java.put('8xzx',result);java.put('ww',0);}\nresult\n</js>",
      "name": "",
      "tocUrl": "<js>\n//清除用户自定义简介\n//book.delete(); //如果更新发生异常会掉书籍信息，目录页取消书架\n//book.upCustomIntro(); //目录页生效\n\n//解书籍url为http\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nif (mlj.includes('search.php') ) {java.toast('书籍地址异常');}\n//转化目录url\nlet mll = mlj.replace('/book/', '/read/');\n`data:;base64,${java.base64Encode(mll)},{'type':''}`;\n</js>",
      "wordCount": ".tabcontent .tabvalue.1@html##全文字数：(\\d+)##$1###"
    },
    "ruleContent": {
      "content": "<js>\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nlet dn = source.get('8xdn');\nlet sleep = Packages.java.lang.Thread.sleep;\n//java.log(chapter.title+'inn：'+inn);\nif ((inn==-4||inn==4)&&dn!=1) {java.longToast('\\n使用下载需要在书源登录界面开启功能\\n建议预下载设定不要大于3');}\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\nlet tim = Math.floor(Math.random()*401);\nlet ii = 1;\n//手动限制并发,下载时(0-40秒随机)\n\nswitch(inn) {\n\tcase 0: break;\n\tcase 1: sleep(1500+tim); break;\n\tcase 2: sleep(4500+tim); break;\n\tcase 3: sleep(7500+tim); break;\n\tcase -1: sleep(3000+tim); break;\n\tcase -2: dn==1 ? sleep(6000+tim) : ii=0;break;\n\tcase -3: dn==1 ? sleep(9000+tim) : ii=0;break;\n\tdefault: dn==1 ? sleep(tim*100) : ii=0;break;\n}\n\n//延时结束\n//java.log(chapter.title+'inn：'+inn+'延时结束');\nlet bkid = java.get('bkid'); //两个putm用\n\nif (inn==0||inn==1) {\n//放入书名和id\ncache.putMemory('8xid',{[bkid]: book.name});\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n}\n\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,nn);\n//java.log('正文地址：'+tt);\nlet ml = String(book.tocUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet ck0 = source.getLoginHeader();\nlet headers0 = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': mlj,\n        'cookie': ck0\r\n    };\n\nlet getr;\nif (ii) {\n//↓第一次访问正文\ntry {\nconst startTime=new Date().getTime();\ngetr = java.get(tt,headers0);\n//java.log(chapter.title+'inn：'+inn+'访问结束');\nconst endTime=new Date().getTime();\n//判断访问情况，错误时把响应内容清除\nif (getr.statusCode() == 200) {\n\tresult = getr.body();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>39) java.toast('\\n正文页访问延迟过长：'+speed.toFixed()+'秒');\n\t} else {java.toast('\\n正文链接响应码错误，inn='+inn);result='';}\n//复原手机版链接，干掉字数统计\nchapter.url = tt.replace('www.','');\n\n//拦截超时报错\n} catch (e) {if (/timeout/.test(e)) java.toast('正文超时');\njava.log('🍊正文出错：'+e);}\n// if ii 结束\n\t} else {result='';}\n//inn>1时为空，软件会自动重新获取\n\nlet rr = java.getString('class.mt mb@a@text||class.tc mb@a@text',result);\n\n//内容识别\nif (rr.includes(\"登录\") ) {\n\tjava.toast(\"💎请重新登录书源账号\");\n\tresult='';}\nelse if (rr.includes(\"充值\") ) {\nlet url = nn+'/modules/obook/buychapter.php';\nlet ck = source.getLoginHeader();\nlet tk = (ck.match(/UserToken%3D([^%]+)/)||['',''])[1];\nlet cid = tt.match(/cid\\=(\\d+)/)[1];\nlet body = `buytype=1&act=buy&jieqi_token=${tk}&cid=${cid}&submit=`;\nlet headers = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': tt,\n        'cookie': ck\r\n    };\n\n// let vip = cache.getFromMemory('8xvip'+bkid);\n// &&vip!=1\nif (tk && nn) {\n\t//标识本书准备请求VIP，防其它章节请求\n\t// cache.putMemory('8xvip'+bkid,1);\n\tsleep(600-tim);\n\tlet pt = java.post(url,body,headers);\n\tlet lc = pt.header(\"location\");\n//\tjava.toast(\"🔓已购买\");\n\t//重新解析正文\n\tresult = java.ajax(lc);\n\tresult = java.getString('#content,#acontent@html',result);\n\t} else {java.longToast(\"💔VIP内容获取失败\");\n\tresult='';}\n\n}\nelse {\n//无VIP登录，正常直接加载\nresult = java.getString('#content,#acontent@html',result);\n}\n//检查\nif ([39,339].includes(cin)&&Math.abs(inn)<4) gengxin();\nresult\n</js>",
      "imageStyle": "",
      "nextContentUrl": "",
      "payAction": "",
      "replaceRegex": "##八叉书库|八叉~书库|八叉书[,~]库|(?:833330|8xsk)\\.(?:xyz|org)|(?:833330|8xsk|八叉)([^\\.])(?:xyz|yxz|org|书库)|八~叉|书~库##$1",
      "sourceRegex": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "td.2@text||span:contains(作者：)+span@text\n<js>\nif (result == '[email protected]') {\n\tlet hex = java.getString('.__cf_email__.0@data-cfemail');\n\tresult = decodeEmail(String(hex),0);\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.put('sj',3); //标识已经同步了书架，\n\t//我的书架无作者信息，延时让提示先显示\n\t\tPackages.java.lang.Thread.sleep(20);\n\tresult='';}\n\tresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\t\tresult = [];\n}\nelse if (baseUrl.includes('search.php?') ) {\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result = [];}\nelse {result = java.getElement('#jieqi_page_contents>div');}\n\t}\nelse if (baseUrl.includes('/book/') ){\njava.toast('暂不支持重定向结果');\nresult=[];\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t//我的书架\n\tlet ts= java.getString('table@caption@ownText');\n\tts=String(ts).replace(/，(.+)\\s*选择分组.*$/,'，\\n$1');\n\tjava.toast('\\n'+ts);\n\tresult = java.getElement('table tr:has(a)');\n\t}\nelse {\nresult = java.getElements('@@#jieqi_page_contents>tr||#content div[class=\"c_row cf\"]');\n}\nresult\n</js>",
      "bookUrl": "<js>\nif (baseUrl.includes('search.php?') ) {\t\n\trs = java.getString('class.c_subject@a.0@href');\n\t} \n\telse if (baseUrl.includes('/bookcase.php') ) {\n\t\t//我的书架需要转化链接\n\t\trs = java.getString('td.1@a.-1@href');\trs='https://8x/book/'+rs.match(/aid=(\\d+)/)[1]+'.html';}\n\telse {\n\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');\n\t}\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');\n\t}\nrr = String(rs).replace(/https\\:\\/{2}[A-z\\d\\.]+/, nn);\n\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "coverUrl": "<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') img=jinghuafm();\nelse {\n\nif (/articlelist|sort/.test(baseUrl)) {\n\timg = java.getString('img@src');\n\t}\nelse if (baseUrl.includes('search.php?') ) {\n\timg = java.getString(String(source.ruleSearch.coverUrl));\n\t}\nelse{\n\tid = java.getString('td.0@a.-1@href').match(/\\d+(?=\\.html)/);\n\nif (baseUrl.includes('/bookcase.php') ) {id = java.getString('td.1@a.-1@href').match(/aid=(\\d+)/)[1];}\n\n  if (id < 1000) n = 0;\n  else n = String(id).slice(0,-3);\nimg = `https://www.8xbook.com/files/article/image/${n}/${id}/${id}s.jpg`;\n}\n\n}\nimg\n</js>",
      "intro": "td.3@text||class.c_description@text\n<js>\nif (baseUrl.includes(\"top/words\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/goodnum\")) {'⠀\\n收藏数：'+result}\n//新书榜\nelse if (baseUrl.includes(\"top/newhot\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n点击数：'+result}\nelse if (baseUrl.includes(\"top/signtime\")) {\n  let t = parseInt(result)*1000;\n  let time = java.timeFormatUTC(t,\"⠀\\n签约时间：yy/MM/dd HH:mm:ss\",8*60*60*1000);\n  time}\nelse if (baseUrl.includes(\"top/lastupdate\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/postdate\")) {'⠀\\n入库时间：'+result}\nelse if (baseUrl.includes(\"top/allvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n总点击：'+result}\nelse if (baseUrl.includes(\"top/monthvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n月点击：'+result}\nelse if (baseUrl.includes(\"top/weekvisit\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n周点击：'+result}\nelse if (baseUrl.includes(\"top/allvote\")) {'⠀\\n总推荐：'+result}\nelse if (baseUrl.includes(\"top/monthvote\")) {'⠀\\n月推荐：'+result}\nelse if (baseUrl.includes(\"top/weekvote\")) {'⠀\\n周推荐：'+result}\nelse if (/articlelist|sort|search\\.php/.test(baseUrl)) {\n//含简介(搜索会经此)\nresult.replace('「','“').replace('」','”').replace(/\\s+/g,' ')}\nelse {''}\n</js>",
      "kind": "<js>\nif (baseUrl.includes('search.php?') ) {java.getStringList(String(source.ruleSearch.kind));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getStringList('td.4@text');}\nelse {java.getStringList('td[4,5]@text||span:contains(更新：)+span@text||a486@time');}\n</js>",
      "lastChapter": "<js>\nif (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.lastChapter));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getString('td.2@a.-1@text');}\n\telse {java.getString('td.1@a.-1@text||class.c_subject@a.-1@text');}\n</js>",
      "name": "<js>\nif (baseUrl.includes('search.php?') ) {\nresult=String(java.getString('.c_subject@text')).replace(/\\\"/g,'');\n//获取id目的\nrs = java.getString('class.c_subject@a.0@href');\n\t}\n\telse {\n\t\tresult =  java.getString('td.0@a.-1@text||class.c_subject@a.1@text||td.1@a.-1@text');\n\t\t//获取id目的\n\t\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');}\n//||td.0@input@value书架的书不处理屏蔽黑名单，正则黑名单会\n\n//获取id，黑名单时书名为空\nlet id = (rs.match(/book\\/(\\d+)/)||['','lyc'])[1];\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "<js>\nif (/articlelist|sort/.test(baseUrl)) {\n  java.getString('span:contains(字数：)+span@text')\n}\nelse if (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.wordCount));\n\t}\n</js>"
    },
    "ruleSearch": {
      "author": "span:contains(作者：)+span@text",
      "bookList": "<js>\njava.setContent(cache.get('8xss1') );\ncache.delete('8xss1');\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result=[];}\nelse {\n\tresult = java.getElement('#jieqi_page_contents>div');\n}\nresult\n</js>",
      "bookUrl": "class.c_subject@a.0@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`\n</js>",
      "checkKeyWord": "作者：棺材",
      "coverUrl": ".fl img@src\n<js>\nlet jhf=source.get('8xjhf');\nif (jhf=='1') result=jinghuafm();\nresult\n</js>",
      "intro": ".c_description@text\n<js>\nresult.replace('「','“').replace('」','”').replace(/\\s/g,' ')\n</js>",
      "kind": "span:contains(更新：)+span@text&&span:contains(关键字：)+span@text\n<js>\nString(result).replace(/[\\[\\]\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "span:contains(最新章节：)+span@text",
      "name": ".c_subject@text\n<js>\n//获取id，黑名单时书名为空\nlet id = java.getString('class.c_subject@a.0@href');\nid = id.match(/book\\/(\\d+)/)[1];\n//java.log(result); //输出书名\nlet i = hmdjib(id,result);\nif (i) {result='';}\nresult\n</js>",
      "wordCount": "span:contains(字数：)+span@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\nlet sj=java.get('sj');\nif (sj=='') java.put('sj',1); //书架标识\nlet ww = java.get('ww'),\nlyc = java.get('lyc'),\nsx1 = java.get('sx1'); //ww是否有新章，sx刷新标识从目录来(已在书架才会触发)\njava.put('sx1',0); //还原详情到目录标识\nlet sj2=source.get('8xsj'); //启用同步的标识\nlet bkid=java.get('bkid');\n\nif (sx1!='1') {\n\t let baxtime = cache.getFromMemory('baxtime');\n\t if (baxtime<Date.now()) baxtime=Date.now();\n\t baxtime+=4000;\n\tcache.putMemory('baxtime',baxtime);\n\twhile(Date.now()<baxtime) {\n\tPackages.java.lang.Thread.sleep(4100);}\n\t}\nif (sj!='3'&&sx1!='1'&&sj2=='1'&&bkid!='') {java.put('sj',3);tbshujia(nn,bkid);}\n//不为3未加书架，不为1不过详情，为1开启功能，且参数不为空\nif (ww!='1' || lyc=='' || sx1!='1') {\nlet tim = Math.floor(Math.random()*1501);\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\nPackages.java.lang.Thread.sleep(tim);\nconst startTime=new Date().getTime();\nresult = java.ajax(nn+tt);\nconst endTime=new Date().getTime();\nlet speed = (endTime - startTime)/1000;\nif (speed>39) {java.toast('\\n目录页访问延迟过长：'+speed.toFixed()+'秒');}\n//缩减储存\nresult=java.getString('.index@all',result);\njava.put('lyc',result);\n} else {result=lyc;}\njava.setContent(result);\nresult=java.getElement('.index dd, .index dt');\n</js>",
      "chapterName": "dd a,dt@text##八叉书库|833330\\.xyz|八叉书[。·]库|8xsk?[。·]org|八叉~书库|八~叉书~库",
      "chapterUrl": "a@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`;\n</js>",
      "formatJs": "",
      "isPay": "",
      "isVip": "",
      "isVolume": "dt@text",
      "preUpdateJs": "",
      "updateTime": "{{@@dd@a@title##\\d{1,2}\\:\\d{1,2}更新，共(\\d+字).*## $1}}\n{{@@dd@em@text##.+##💎}}"
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\nnn = String(source.getVariable()).replace(/\\/$/,'');\n//let cok=cookie.getCookie(nn);\n//cookie.removeCookie(nn);\nlet url = `${nn}/modules/article/search.php`;\ntry {\n\tif (key.startsWith('书名：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=articlename&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('作者：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=author&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('标签：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=keywords&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (page == 1) {\n\t\tftsm();\n\t\tlet body = `searchtype=all&searchkey=${key}&act=search&submit=`;\n\tss = java.post(url,body,{\t'User-Agent': ua});\n\tkey='';\n\t}\n\t\n\telse {\n\t\turl +=\t`?searchkey=${key}&searchtype=all&page=${page}`\n\tss = java.get(url,{\t'user-agent': ua});\n\t}\n\ncode = ss.statusCode();\nif (code == 302) {\n\t//重定向\n\tss.header(\"location\");\n\t}\nelse if (code == 200) {\n\tcache.put('8xss1', ss.body());\n\turl=`data:;base64,${java.base64Encode(nn)},{'type':''}`;\n\t}\nelse if (code == 520) {\n\tjava.toast(\"💔IP被拉黑\");\n\t}\nelse {\n\tjava.toast(\"💔搜索响应码异常\");\n\t}\n\n\n} catch(err) {\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\t}\n//\tcookie.replaceCookie(nn,cok);\n//\turl\n</js>",
    "variableComment": "♦源变量：\n　 当前书源使用的网址\n　 可点击发现页版本号手动刷新\n\n♦书籍变量：\n　 ①填写  🔒 并刷新，关闭本书评论显示\n　 ②填写“目录”并刷新，强制刷新目录\n　 ③填写分数并刷新，使用分数进行评分\n　 ④填写其它并刷新，内容作为评论发送\n分数格式示意“1分”“2分”…“10分”\n\n㊟详情页检测到有更新内容时才刷新目录(书架刷新不影响)\n\n！注意区分源变量和书籍变量\n",
    "weight": 0
  },
  {
    "bookSourceComment": "//by天天的鸟蛋蛋\n//by等等补全发现。",
    "bookSourceGroup": "",
    "bookSourceName": "📖 我爱读者",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.52dzxy.com/",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "百科知识::https://www.52dzxy.com/bkzs/all.html\n父母必读::/fmbd/all.html\n新民周刊::/xmzk/all.html\n第一财经::/dycj/all.html\n南风窗::/nfc/all.html\n环球人物::/hqrw/all.html\n轻兵器::/qbq/all.html\n知识就是力量::/zsjsll/all.html\n中小学心理健康教育::/zxxxljkjy/all.html\n中国经济周刊::/zgjjzk/all.html\n证券市场周刊::/zqsczk/all.html\n股市动态分析::/gsdtfx/all.html\n财经::/caijing/all.html\n婚姻与家庭::/hyyjtxqdb/all.html\n南方人物周刊::/nfrwzk/all.html\n中国新闻周刊::/zgxwzk/all.html\n看世界::/ksj/all.html\n阅读时代::/ydsd/all.html\n格言校园版::/gyxyb/all.html\n海外文摘::/hwwz/all.html\n思维与智慧::/swyzhsby/all.html\n青年文摘::/qnwz/all.html\n今日文摘::/jrwz/all.html",
    "header": "",
    "lastUpdateTime": "1742097464252",
    "loginUrl": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "",
      "canReName": "1",
      "coverUrl": "img@src",
      "init": "<js>\na=java.getString(\"text.更多@href\")\njava.log(a)\nresult</js>",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "h1@text"
    },
    "ruleContent": {
      "content": ".article-title@text&&.author@html&&.article-content@html##我爱读者校园网",
      "imageStyle": "FULL",
      "nextContentUrl": ""
    },
    "ruleExplore": {
      "bookList": ".magazine-grid@.magazine-item@a",
      "bookUrl": "href",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "text"
    },
    "ruleSearch": {
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": ""
    },
    "ruleToc": {
      "chapterList": "<js>var JsDom = Packages.org.jsoup.Jsoup;\nvar Document = Packages.org.jsoup.nodes.Document;\nvar Element = Packages.org.jsoup.nodes.Element;\n\n\nvar document = JsDom.parse(src);\n\nvar result = [];\n\nvar sections = document.select(\".catalog-container > .catalog-section\");\nsections.forEach(function(section) {\n    var vol = section.select(\".catalog-section-title\").text();\n    var articles = section.select(\".article-list > .article-item > .article-title > a\");\n    articles.forEach(function(article) {\n        var url = article.attr(\"href\");\n        var text = article.text();\n        result.push({\n            \"url\": url,\n            \"text\": text,\n            \"vol\": vol\n        });\n    });\n});\n\nresult;\n</js>",
      "chapterName": "text",
      "chapterUrl": "url",
      "isVolume": "",
      "nextTocUrl": "",
      "updateTime": "vol"
    },
    "searchUrl": "",
    "weight": 0
  },
  {
    "bookSourceComment": "By_聆听月与悦-2025 . 3.22-15:33:41\n\n*在上一次的基础上修改了换源逻辑，更方便了\n*书源支持修改书籍变量来实现与网站相同的换源功能，详细请看书籍详情页\n*书籍变量≤c",
    "bookSourceName": "🎉蓝海搜书",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.letsboox.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "header": "",
    "lastUpdateTime": "1742630209883",
    "loginUi": "",
    "loginUrl": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "canReName": "",
      "coverUrl": "class.BGsectionOne-top-left@img@src",
      "intro": "&nbsp;&nbsp;\n📜简      介：{{@@#intro@text##[《》]*}}{{'\\n'+'​'}}\n🔎换源信息：\na =>{{@@.BGsectionThree-content@li.0@text##正文 第\\d+节 }}\nb =>{{@@.BGsectionThree-content@li.1@text##正文 第\\d+节 }}\nc =>{{@@.BGsectionThree-content@li.2@text##正文 第\\d+节 }}{{'\\n'+'​'}}\n📄使用说明：由于网站涉及到更换不同的目录链接，所以在阅读中你可以通过在书籍详情页点击右上角修改书籍变量来实现换源！（默认为a）\n!!!!修改之后请刷新!!!!\n@js:\nvar intro = java.t2s(result);\nintro",
      "lastChapter": "{{@@class.newestChapter@span@text}}•{{@@class.time@span@text}}",
      "tocUrl": "class.BGsectionThree-content@all\n@js:\nvar html = result;\nvar doc = org.jsoup.Jsoup.parse(html);\nvar siteList = doc.select(\"li.site\");\nvar result = {};\nvar actionMap = {};\nfor (var i = 0; i < siteList.size(); i++) {\n    var site = siteList.get(i);\n    var aTags = site.select(\"a\");\n    if (aTags.size() >= 2) {\n        var secondHref = aTags.get(1).attr(\"href\");\n        var secondText = java.t2s(aTags.get(1).text());\n        var key = String.fromCharCode(97 + i); // a/b/c...\n        \n        result[key] = secondHref;\n        actionMap[key] = secondText;\n    }\n}\nvar sourceKey = book.getVariable(\"custom\");\nvar isVariableSet = (sourceKey !== null && sourceKey !== undefined);\nif (!isVariableSet) {\n    sourceKey = 'a';\n    java.longToast(\"当前未选择目录地址，请通过修改书籍变量来选择（默认为a）\");\n} else {\n    if (!result.hasOwnProperty(sourceKey)) {\n        java.longToast(\"错误：变量值 '\" + sourceKey + \"' 无效，已回退到默认值a\");\n        sourceKey = 'a';\n    } else {\n        java.longToast(\"更换成功，当前目录地址为：\" + actionMap[sourceKey]);\n    }\n}\nresult[sourceKey];"
    },
    "ruleContent": {
      "content": "class.RBGsectionThree@div.1@html\n@js:\nvar content = java.t2s(result);\ncontent",
      "replaceRegex": "##[\\<\\!\\-go\\>]*"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "span.1@text",
      "bookList": "class.SHsectionThree-middle@p",
      "bookUrl": "span.0@a@href",
      "coverUrl": "java.toast('text')",
      "kind": "span.2@text",
      "name": "span.0@text##[《》]*"
    },
    "ruleToc": {
      "chapterList": "class.BCsectionTwo-top@class.BCsectionTwo-top-chapter\n<js>\ntry {\na=src.match(/var originalOrder = \\[.*\\];/)[0]\neval(String(a))\n\nlist=[]\nfor (i in result) {\nlist[originalOrder[i]]=result[i]\n}\n\nlist\n} catch(err) {\nresult\n}\n\n</js>",
      "chapterName": "li@text\n@js:\nvar text = java.t2s(result);\ntext",
      "chapterUrl": "li@a@href@js:result+',{\"webView\":true}'",
      "formatJs": ""
    },
    "searchUrl": "https://www.letsboox.com/s/{{key}}/{{page}}/",
    "weight": 0
  },
  {
    "ruleExplore": {
      "kind": "$.category",
      "intro": "$.abstract",
      "coverUrl": "$.thumb_url",
      "bookList": "$.data.data",
      "lastChapter": "$.last_chapter_title",
      "author": "$.author",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "name": "$.book_name",
      "wordCount": "$.word_number"
    },
    "bookSourceUrl": "http://api.qingtian618.cn:9999/#小说/",
    "ruleSearch": {
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "intro": "$.abstract",
      "coverUrl": "$.thumb_url",
      "bookList": "$.books",
      "author": "$.author",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t\nif ('{{$.source}}'=='番茄'){\n\t'番茄:'+fq_last();\n\t} else if ('{{$.source}}'=='七猫'){\n\t'七猫:'+qm_last();\n\t} else {\n\t\t'{{$.source}}'\n\t\t}\n\n</js>",
      "bookUrl": "/detail?book_id={{$.book_id}}&source={{$.source}}",
      "name": "$.book_name",
      "wordCount": "$.word_number",
      "checkKeyWord": "我的"
    },
    "bookSourceName": "🌞晴天融合小说2.1(独立版)",
    "bookSourceType": 0,
    "exploreUrl": "[{\"title\": \"男♂️生\", \"url\": \"\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 1}}, {\"title\": \"都市\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=1\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=7\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=36\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=262\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市修真\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=124\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"系统\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=19\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"赘婿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=25\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"神豪\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=20\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市日常\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=261\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=23\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=12\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"打脸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=522\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=2\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史古代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=273\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"西游\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=373\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天才\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=90\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"诸天万界\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=71\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"鉴宝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=17\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=263\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"推理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=61\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"架空\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=452\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=8\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"东方玄幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=511\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武侠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=16\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"特种兵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=375\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"盗墓\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=81\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"剑道\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=80\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"空间\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=44\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无敌\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=384\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"三国\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=67\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"外卖\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=75\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"奶爸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=42\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"乡村\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=11\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=538\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"末世\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=68\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市异能\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=516\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"海岛\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=40\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏体育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=746\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"二次元\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=39\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"洪荒\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=66\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"求生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=379\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"体育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=15\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大唐\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=73\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"明朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=126\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"扮猪吃虎\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=93\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=272\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"星际\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=77\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"校花\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=385\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"直播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=69\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"年代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=79\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家庭\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=125\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宠物\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=74\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"网游\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=372\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"衍生同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=718\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"娱乐圈\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=43\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"开局\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=453\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=127\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大小姐\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=519\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大秦\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=377\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"单女主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=389\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"抗战谍战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=504\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"聊天群\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=381\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"美食\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=78\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"末日求生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=515\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"搞笑轻松\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=778\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=539\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"修仙\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=517\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"反派\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=369\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"腹黑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=92\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"电竞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=508\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"学霸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=82\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"影视小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=45\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市青春\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=396\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"异世大陆\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=512\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"特工\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=518\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"官场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=788\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无限流\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=70\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏主播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=509\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大佬\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=520\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"女帝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=378\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵气复苏\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=514\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"神探\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=506\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武将\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=497\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"火影\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=368\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无女主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=391\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"龙珠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=376\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宋朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=501\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"钓鱼\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=493\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"皇帝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=498\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿书\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=382\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"囤物资\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=494\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"漫威\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=374\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=48\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"高武世界\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=513\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"海贼\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=370\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"奥特同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=367\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"战争\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=97\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"神奇宝贝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=371\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"断层\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=500\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"惊悚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=322\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宫廷侯爵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=502\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"九叔\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=383\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"综漫\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=465\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文学小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=47\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"谍战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=507\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成功励志\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=56\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"国运\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=496\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=524\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"克苏鲁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=705\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"清朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=503\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"四合院\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=495\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=0&id=62\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}},{\"title\": \"女♀️生\", \"url\": \"\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 1}}, {\"title\": \"现代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=3\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门总裁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=29\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=5\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宠妻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=30\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"甜宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=96\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿越\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=37\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宫斗宅斗\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=246\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"霸总\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=748\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"萌宝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=28\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"王妃\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=85\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=36\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"HE\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=484\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"幻想言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=32\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=2\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"腹黑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=92\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门世家\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=473\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=23\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门爽文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=745\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=267\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=248\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"嫡女\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=88\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场婚恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=750\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"医术\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=247\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"打脸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=522\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"虐渣\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=457\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"空间\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=44\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"女强\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=86\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"日久生情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=474\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"娱乐圈\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=43\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家庭\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=125\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"团宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=94\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"今穿古\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=463\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"皇后\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=84\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=100\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天才\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=90\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"闪婚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=466\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"校园\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=4\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"系统\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=19\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"公主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=83\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"独宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=460\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"马甲\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=266\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"虐文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=95\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"婚恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=34\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"契约婚姻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=471\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"护短\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=458\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"年代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=79\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=10\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"一见钟情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=477\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑恋爱\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=747\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=253\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"前世今生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=523\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"青梅竹马\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=387\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大佬\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=520\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"毒医\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=491\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"快穿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=24\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"带球跑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=479\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"学霸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=82\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"影视小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=45\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"冰山\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=468\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"病娇\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=380\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"精灵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=89\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"大小姐\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=519\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"扮猪吃虎\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=93\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"明星\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=486\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"相爱相杀\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=483\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无敌\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=384\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"乡村\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=11\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"情有独钟\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=456\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"推理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=61\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"替身\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=470\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"美食\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=78\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"强强\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=478\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"破镜重圆\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=475\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿书\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=382\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"反派\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=369\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"将军\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=492\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"皇叔\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=87\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"异世穿越\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=464\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"医生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=487\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"无CP\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=392\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"二次元\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=39\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"兽世\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=72\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"民国\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=390\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"逃婚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=480\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双面\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=469\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=524\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"直播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=69\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"女扮男装\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=388\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"搞笑轻松\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=778\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=127\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"盗墓\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=81\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古灵精怪\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=459\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"末世\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=68\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古穿今\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=462\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"暗恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=482\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双向奔赴\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=476\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"律师\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=488\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"隐婚\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=467\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天作之合\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=455\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言萌宝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=489\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"清穿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=76\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双洁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=702\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"可盐可甜\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=454\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"星际\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=77\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"作精\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=521\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"厨娘\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=490\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双男主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=275\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=538\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=539\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武侠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=16\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言复仇\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=268\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏体育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=746\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=8\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"衍生同人\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=718\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"囤物资\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=494\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市日常\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=261\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"群穿\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=461\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"电竞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=508\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"游戏主播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=509\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场商战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=485\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"双女主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=704\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文学小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=47\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"综漫\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=465\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"四合院\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=495\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=62\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=48\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"战争\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=97\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"逃荒\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=557\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成功励志\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=56\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"抗战谍战\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=1&id=504\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}},{\"title\": \"出版\", \"url\": \"\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 1}}, {\"title\": \"文学小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=47\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=3\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现实小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=400\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"经济管理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=53\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"社会科学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=50\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"诗歌散文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=46\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=62\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成功励志\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=56\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史传记\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=404\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"人文社科\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=405\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"当代文学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=399\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"经典国学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=423\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文学理论\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=401\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"个人成长\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=410\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古代言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=5\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=48\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"腹黑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=92\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"人际交往\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=412\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"中国名著\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=98\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"中国历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=402\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宫斗宅斗\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=246\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=1\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市日常\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=261\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市生活\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=2\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=12\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=248\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"精灵\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=89\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家庭\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=125\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"王妃\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=85\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"亲子家教\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=415\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=127\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"职场婚恋\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=750\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门总裁\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=29\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"影视小说\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=45\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"甜宠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=96\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"宠妻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=30\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"心理学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=407\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"玄幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=7\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=10\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"推理\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=61\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"文化艺术\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=413\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"幻想言情\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=32\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"思维智商\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=411\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"公主\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=83\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"保健养生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=416\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"穿越\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=37\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"外国文学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=397\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"人物传记\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=409\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"世界历史\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=403\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"两性\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=274\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"武侠\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=16\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"校园\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=4\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"外国名著\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=99\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"美食休闲\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=419\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"政治军事\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=408\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"哲学宗教\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=406\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"风水占卜\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=421\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"国学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=116\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科技\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=52\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"娱乐圈\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=43\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"法律\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=142\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"教育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=54\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"成人教育\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=722\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"历史古代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=273\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"种田\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=23\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"现言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=267\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"战争\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=97\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"天才\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=90\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=100\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"家居旅游\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=420\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"重生\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=36\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"青梅竹马\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=387\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"科幻\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=8\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"直播\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=69\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"悬疑灵异\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=751\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古言脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=253\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"古代文学\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=398\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"民国\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=390\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"盗墓\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=81\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"都市脑洞\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=262\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"豪门爽文\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=745\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"官场\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=788\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"霸总\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=748\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"年代\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=79\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"学霸\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=82\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"明朝\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=126\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}, {\"title\": \"时尚美妆\", \"url\": \"/discover?offset={{(page-1)*100}}&genre_type=160&id=418\", \"style\": {\"layout_flexGrow\": 1, \"layout_flexBasisPercent\": 0.25}}]",
    "respondTime": 180000,
    "customOrder": 0,
    "enabledCookieJar": true,
    "lastUpdateTime": "1742619595083",
    "enabledExplore": true,
    "loginUi": "",
    "ruleContent": {
      "content": "$.content"
    },
    "enabled": true,
    "weight": 60,
    "ruleToc": {
      "updateTime": "$.volume_name",
      "chapterList": "$.chapter_list",
      "chapterName": "$.title",
      "chapterUrl": "/content?item_id={{$.item_id}}&source={{$.source}}"
    },
    "cloudRecordID": "93CC33B7-8543-4BAC-846E-541F2ACAD45B",
    "jsLib": "",
    "loginUrl": "http://api.qingtian618.cn:9999/login",
    "searchUrl": "/search?title={{key}}&tab=小说&source=全部",
    "ruleBookInfo": {
      "kind": "",
      "intro": "&nbsp;&nbsp;🎴当前来源：{{$.source}}\n🎯最新章节：{{$.last_chapter_title}}\n⏳更新时间：{{$.last_chapter_update_time}}\n📚书籍简介：\n{{$.abstract}}",
      "init": "$.book_detail",
      "coverUrl": "$.book_detail.thumb_url",
      "lastChapter": "$.last_chapter_title",
      "author": "$.author",
      "name": "$.book_name",
      "wordCount": "$.word_number",
      "tocUrl": "/catalog?book_id={{$.book_id}}&source={{$.source}}"
    },
    "modificationDate": 1742584301027.017,
    "bookSourceComment": "250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增晴天书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和晴天书架栏目\n2.预计新增阅读记录，阅读过的书籍可在晴天书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n"
  },
  {
    "weight": 60,
    "customOrder": 0,
    "ruleSearch": {
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t\nif ('{{$.source}}'=='番茄'){\n\t'番茄:'+fq_last();\n\t} else if ('{{$.source}}'=='七猫'){\n\t'七猫:'+qm_last();\n\t} else {\n\t\t'{{$.source}}'\n\t\t}\n\n</js>",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "wordCount": "$.word_number",
      "bookList": "$.books",
      "checkKeyWord": "我的26岁女房客",
      "intro": "$.abstract",
      "name": "$.book_name##（别名：.*?）",
      "author": "$.author",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "$.thumb_url"
    },
    "ruleExplore": {
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "wordCount": "word_number",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "name": "book_name",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "author": "author",
      "coverUrl": "thumb_url"
    },
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"晴天书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "ruleToc": {
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet device;\nlet device_type;\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n\nlet content_url = `${item_id}晴天融合2.1${tab}晴天融合2.1${title}晴天融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "chapterList": "$.chapter_list\n<js>\ntry {\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet url = `${base_url}/get_user_bookshelf?book_id=${book_detail.book_id}&source=${book_detail.source}`;\n//java.toast(url);\nlet getbook =JSON.parse(java.ajax(url)).books;\nlet is_bookshelf;\nlet data = [];\nif (book.order < 0 && !getbook.length) {\n\t// 在阅读书架，不在晴天书架，同步到晴天书架\n    book_detail.is_bookshelf = true;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n} else if ( book.order < 0 && getbook.length) {\n\t// 在阅读书架，在晴天书架\n\t  var books=getbook[0];\n    books.is_bookshelf = true;\n    data.push(books);\n} else if (book.order >= 0 && !getbook.length) {\n\t// 不在阅读书架，不在晴天书架，留下浏览记录\n\t   book_detail.is_bookshelf = false;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n\t} else if (book.order >= 0 && getbook.length) {\n\t// 不在阅读书架，在晴天书架，晴天书架下架\n\t   var books=getbook[0];\n    books.is_bookshelf = false;\n    //data.push(books);\n\t}\nif (data.length) {\n\tvar option = {\n\"method\": \"POST\",\n\"body\": JSON.stringify(data),\n};\n    java.ajax(`${base_url}/push_user_bookshelf,`+JSON.stringify(option));\n    }\n\t} catch (e) {};\n\tresult;\n\t</js>",
      "updateTime": "$.volume_name"
    },
    "bookSourceType": 0,
    "enabledCookieJar": true,
    "modificationDate": 1742619096660.359,
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','晴天书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录晴天小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('http://d1.getmc.cn:36189/index', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "cloudRecordID": "22C31744-A0B4-4CA4-878A-2776AE52A092",
    "respondTime": 180000,
    "bookSourceName": "🌞晴天融合2.1(完全版)",
    "ruleBookInfo": {
      "lastChapter": "$.last_chapter_title",
      "init": "$.book_detail",
      "kind": "",
      "wordCount": "$.word_number",
      "intro": "<js>\njava.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录晴天账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄晴天账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "name": "$.book_name",
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>"
    },
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录晴天账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚晴天书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "bookSourceUrl": "http://api.qingtian618.cn:9999",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "enabledExplore": true,
    "lastUpdateTime": "1742619886860",
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('晴天融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://api.qingtian618.cn:9999\n*/\n\n\n此书源请勿传播！！！！！！！！！\n\n\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增晴天书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和晴天书架栏目\n2.预计新增阅读记录，阅读过的书籍可在晴天书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增晴天书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug",
    "enabled": true
  },
  {
    "bookSourceComment": "\n创作：by天天的鸟蛋蛋\n20240726_修复搜索\n24/12/13阅读云搜索修复。\n25/3/16 更新阅读云搜索系列 更改搜索",
    "bookSourceGroup": "笔趣阁",
    "bookSourceName": "54看书-笔趣阁（天天书源）",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.54kanshu.com",
    "customOrder": 1801,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\":\"首页\",\"url\":\"/\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"分类\",\"url\":\"/fenlei/{{page}}\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/fenlei/1/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"奇幻\",\"url\":\"/fenlei/2/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"武侠\",\"url\":\"/fenlei/3/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/fenlei/4/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"都市\",\"url\":\"/fenlei/5/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/fenlei/6/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"历史\",\"url\":\"/fenlei/7/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"游戏\",\"url\":\"/fenlei/8/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"竞技\",\"url\":\"/fenlei/9/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"科幻\",\"url\":\"/fenlei/10/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/fenlei/11/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"灵异\",\"url\":\"/fenlei/12/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"其他\",\"url\":\"/fenlei/13/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"古代言情\",\"url\":\"/fenlei/14/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"仙侠奇缘\",\"url\":\"/fenlei/15/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"现代言情\",\"url\":\"/fenlei/16/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"浪漫青春\",\"url\":\"/fenlei/17/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"玄幻言情\",\"url\":\"/fenlei/18/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"悬疑灵异\",\"url\":\"/fenlei/19/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"科幻空间\",\"url\":\"/fenlei/20/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"游戏竞技\",\"url\":\"/fenlei/21/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"BL文\",\"url\":\"/fenlei/22/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"GL文\",\"url\":\"/fenlei/23/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"二次元\",\"url\":\"/fenlei/24/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"排行\",\"url\":\"/rank/\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"总排行榜\",\"url\":\"/rank/allvisit/{{page}}\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"月排行榜\",\"url\":\"/rank/monthvisit/{{page}}\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"周排行榜\",\"url\":\"/rank/weekvisit/{{page}}\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"收 藏 榜\",\"url\":\"/rank/goodnum/{{page}}\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"完本\",\"url\":\"/quanben/fenlei/{{page}}\",\"style\":{\"layout_flexBasisPercent\":1,\"layout_flexGrow\":1}},{\"title\":\"玄幻\",\"url\":\"/quanben/fenlei/1/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"奇幻\",\"url\":\"/quanben/fenlei/2/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"武侠\",\"url\":\"/quanben/fenlei/3/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"仙侠\",\"url\":\"/quanben/fenlei/4/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"都市\",\"url\":\"/quanben/fenlei/5/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"军事\",\"url\":\"/quanben/fenlei/6/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"历史\",\"url\":\"/quanben/fenlei/7/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"游戏\",\"url\":\"/quanben/fenlei/8/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"竞技\",\"url\":\"/quanben/fenlei/9/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"科幻\",\"url\":\"/quanben/fenlei/10/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"悬疑\",\"url\":\"/quanben/fenlei/11/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"灵异\",\"url\":\"/quanben/fenlei/12/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"其他\",\"url\":\"/quanben/fenlei/13/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"古代言情\",\"url\":\"/quanben/fenlei/14/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"仙侠奇缘\",\"url\":\"/quanben/fenlei/15/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"现代言情\",\"url\":\"/quanben/fenlei/16/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"浪漫青春\",\"url\":\"/quanben/fenlei/17/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"玄幻言情\",\"url\":\"/quanben/fenlei/18/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"悬疑灵异\",\"url\":\"/quanben/fenlei/19/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"科幻空间\",\"url\":\"/quanben/fenlei/20/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"游戏竞技\",\"url\":\"/quanben/fenlei/21/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"BL文\",\"url\":\"/quanben/fenlei/22/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"GL文\",\"url\":\"/quanben/fenlei/23/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}},{\"title\":\"二次元\",\"url\":\"/quanben/fenlei/24/{{page}}/\",\"style\":{\"layout_flexBasisPercent\":0.4,\"layout_flexGrow\":1}}]",
    "header": "",
    "lastUpdateTime": "1742108455981",
    "loginCheckJs": "",
    "loginUrl": "",
    "respondTime": 4510,
    "ruleBookInfo": {
      "author": ".block_txt2@p.2@text",
      "coverUrl": ".block_img2@img@src",
      "intro": ".intro_info@textNodes##推荐地址：",
      "kind": "p.3@a@text&&p.4@text##.*：",
      "lastChapter": "p.6@a@text&&p.-2@text##更新：",
      "name": "h2@text"
    },
    "ruleContent": {
      "content": "id.nr@html",
      "nextContentUrl": "text.下一@href"
    },
    "ruleExplore": {
      "author": "span.1@text",
      "bookList": ".fk@.xbk!0",
      "bookUrl": "a@href",
      "coverUrl": "img@src",
      "intro": "span.2@text",
      "kind": "span.3@text",
      "name": "a@text"
    },
    "ruleSearch": {
      "author": "span@text",
      "bookList": "<js>\nif (result.match(/阅读云/)) {\n   u = baseUrl.split(',')[0]\n   cookie.removeCookie(u)\n   // java.startBrowserAwait(u, \"验证\")\n   java.webView(null, u, \"document.cookie\")\n   ck = cookie.getCookie(u)\n   head = JSON.stringify({ headers: { 'Cookie': ck } })\n   url = u + \",\" + head\n   result = java.ajax(url)\n}\nresult\n</js>\n.block > div > div:nth-child(n+1)",
      "bookUrl": "a@href",
      "checkKeyWord": "",
      "coverUrl": "img@src",
      "intro": "dd@text",
      "name": "a@text"
    },
    "ruleToc": {
      "chapterList": "id.ul_all_chapters@li",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "nextTocUrl": ".index-container@option@value"
    },
    "searchUrl": "https://www.sososhu.com/?site=m54kanshu&q={{key}},{\n  headers: { \"User-Agent\": \"Mozilla/5.0 (Linux; Android 10; PACM00 Build/QP1A.190711.020) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.79 Mobile Safari/537.36\" }}",
    "weight": 0
  },
  {
    "bookSourceComment": "by阿鬼\n\nPS：被G崽崽（辞晨）忽悠写的漫画网站！💢\n\n记得关替换净化！本人写完了才想起来替换净化没关！😭",
    "bookSourceGroup": "[漫画练手处]",
    "bookSourceName": "🔞奇漫屋[已小改]",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.mqzjw.com/",
    "bookUrlPattern": "https?://www.mqzjw.com/book/\\d+.html",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "✧✧✧✧✧✧✧全部分类✧✧✧✧✧✧✧\n科幻::/category/tags/865\n剧情::/category/tags/866\n搞笑::/category/tags/867\n都市::/category/tags/868\n生子::/category/tags/869\nABO::/category/tags/870\n架空::/category/tags/871\n校园::/category/tags/872\n虐恋::/category/tags/873\n古风::/category/tags/874\n甜宠::/category/tags/875\n玄幻::/category/tags/876\n重生::/category/tags/877\n悬疑::/category/tags/878\n热血::/category/tags/879\n穿越::/category/tags/880\n灵异::/category/tags/881\n恋爱::/category/tags/882\n同人::/category/tags/883\n彩虹::/category/tags/884\n其他::/category/tags/885\n纯爱::/category/tags/886\n奇幻::/category/tags/887\n短篇::/category/tags/888\n总裁::/category/tags/889\n霸总::/category/tags/890\n黑白::/category/tags/891\n恐怖::/category/tags/892\n非人类::/category/tags/893\n西方::/category/tags/894\n青春::/category/tags/895\n合集::/category/tags/896\n橘里橘气::/category/tags/897\n言情::/category/tags/898\n民国::/category/tags/899\n异能::/category/tags/900\n复仇::/category/tags/901\n多女主::/category/tags/902\n家庭::/category/tags/903\n真人::/category/tags/904\n游戏竞技::/category/tags/905\n单女主::/category/tags/906\n职场::/category/tags/907\n欧式::/category/tags/908\n逆袭::/category/tags/909\n治愈::/category/tags/910\n魔幻::/category/tags/911\n宫廷::/category/tags/912\n现代::/category/tags/913\n权谋::/category/tags/914\n末世::/category/tags/915\n惊悚::/category/tags/916\n::/category/tags/917\n转生::/category/tags/918\n少年::/category/tags/919\n武侠::/category/tags/920\n少女::/category/tags/921\n冒险::/category/tags/922\n日常::/category/tags/923\n动作::/category/tags/924\n古风宫廷::/category/tags/925\n系统::/category/tags/926\n爱豆::/category/tags/927\n浪漫::/category/tags/928\n犯罪::/category/tags/929\n萌宠::/category/tags/930\n直播::/category/tags/931\n虐心::/category/tags/932\n谋略::/category/tags/933\n耽美::/category/tags/934\n美食::/category/tags/935\n现代}都市::/category/tags/936\n末日::/category/tags/937\n宮廷::/category/tags/938\n欧式魔幻::/category/tags/939\n冒险玄::/category/tags/940\n转世::/category/tags/941\n历史::/category/tags/942\n奇幻治愈::/category/tags/943\n经营::/category/tags/944\n综艺::/category/tags/945\n娱乐::/category/tags/946\n格斗::/category/tags/947\n都市校园::/category/tags/948\n竞技::/category/tags/949\n溺爱::/category/tags/950\n 穿越::/category/tags/951\n料理::/category/tags/952\n励志::/category/tags/953\n救援::/category/tags/954\n养成::/category/tags/955\n科技::/category/tags/956\n马戏::/category/tags/957\n游戏::/category/tags/958\n仙侠::/category/tags/959\n动冒险::/category/tags/960\n魔法少女::/category/tags/962\n清冷::/category/tags/963\n腹黑::/category/tags/964\n聪颖\\/智商在线::/category/tags/965\n生活::/category/tags/966\n其它::/category/tags/967\n正能量::/category/tags/968\n欧风::/category/tags/969\n后宫::/category/tags/970\n宫斗::/category/tags/971\n黑白漫::/category/tags/972\n修真::/category/tags/973\n大女主::/category/tags/974\n悬疑恐怖::/category/tags/975\n百合::/category/tags/976\n东方::/category/tags/977\n欢乐向::/category/tags/978\n战斗::/category/tags/979\n冒险热血::/category/tags/980\n怪物::/category/tags/981\n玄幻科幻::/category/tags/982\n电竞::/category/tags/983\n高甜::/category/tags/984\n女神::/category/tags/985\n脑洞::/category/tags/986\n修仙::/category/tags/987\n娱乐圈::/category/tags/988\n妖怪::/category/tags/989\n古風::/category/tags/990\n奇幻冒险::/category/tags/991\n爆笑::/category/tags/992\n动作冒险::/category/tags/993\n少男::/category/tags/994\n连载::/category/tags/995\n奇幻爱情::/category/tags/996\n爱情::/category/tags/997\n异形::/category/tags/998\n克苏鲁::/category/tags/999\n诡异::/category/tags/1000\n魔王::/category/tags/1001\n现代言情::/category/tags/1002\n韩漫::/category/tags/1003\n长条::/category/tags/1004\n萌系::/category/tags/1005\n悬疑灵异::/category/tags/1006\n少女爱情::/category/tags/1007\n橘系::/category/tags/1008\n知音漫客::/category/tags/1009\n惊奇::/category/tags/1010\n猎奇::/category/tags/1011\n古装::/category/tags/1012\n少儿::/category/tags/1013\n唯美::/category/tags/1014\n偶像::/category/tags/1015\n飒漫画::/category/tags/1016\n西幻::/category/tags/1017\n日漫::/category/tags/1018\n幽默::/category/tags/1019\n鬼怪::/category/tags/1020\n神仙::/category/tags/1021\n橘味::/category/tags/1022\n改编::/category/tags/1023\n兄弟情::/category/tags/1024\n致郁::/category/tags/1025\nLGBTQ+::/category/tags/1026\n女生::/category/tags/1027\n亲情::/category/tags/1028\n冒險::/category/tags/1029\n推理::/category/tags/1030\n伪娘::/category/tags/1031\n迪化::/category/tags/1032\n格鬥::/category/tags/1033\n漫客栈::/category/tags/1034\n体育::/category/tags/1035\n人性::/category/tags/1036\n运动::/category/tags/1037\n运动竞技::/category/tags/1038\n神鬼::/category/tags/1039\n魔法::/category/tags/1040\n少年热血::/category/tags/1041\n科幻魔幻::/category/tags/1042\n劇情::/category/tags/1043\n反套路::/category/tags/1044\n双男主::/category/tags/1045\n漫改::/category/tags/1046\n宅向::/category/tags/1047\n蔷薇::/category/tags/1048\n明星::/category/tags/1049\n玄幻言情::/category/tags/1050\n古代言情::/category/tags/1051\n歌舞::/category/tags/1052\n悬疑推理::/category/tags/1053\n宅斗::/category/tags/1054\n智斗::/category/tags/1055\n男生::/category/tags/1056\n熱血::/category/tags/1057\n惊险::/category/tags/1058\n萝莉::/category/tags/1059\n烧脑::/category/tags/1060\n战争::/category/tags/1061\n青年::/category/tags/1062\n装逼::/category/tags/1063\n古言脑洞::/category/tags/1064\n武侠格斗::/category/tags/1065\n无敌流::/category/tags/1066\n宫斗宅斗::/category/tags/1067\n侦探推理::/category/tags/1068\n戀愛::/category/tags/1069\n无节操::/category/tags/1070\n疗癒/萌系::/category/tags/1071\n震撼::/category/tags/1072\n掌门流::/category/tags/1073\n幻想::/category/tags/1074\n完结::/category/tags/1075\n日本::/category/tags/1076\n都市脑洞::/category/tags/1077\n暗黑::/category/tags/1078\n生活漫画::/category/tags/1079\n金手指::/category/tags/1080\n强强::/category/tags/1081\n橘调::/category/tags/1082\n玄幻脑洞::/category/tags/1083\n神魔::/category/tags/1084\n台湾原创作品::/category/tags/1085\n机战::/category/tags/1086\n恶搞::/category/tags/1087\n欧式宫廷::/category/tags/1088\n暖萌::/category/tags/1089\n撒糖::/category/tags/1090\n豪门总裁::/category/tags/1091\n现言::/category/tags/1092\n耽美爱情::/category/tags/1093\n限制级::/category/tags/1094\n血族::/category/tags/1095\n女强::/category/tags/1096\n情感::/category/tags/1097\n网游::/category/tags/1098\n福利::/category/tags/1099\n经典::/category/tags/1100\n神话::/category/tags/1101\n幽默爆笑::/category/tags/1102\n神豪::/category/tags/1103\n机甲::/category/tags/1104\n新作::/category/tags/1105\nBG::/category/tags/1106\n现言脑洞::/category/tags/1107\n黑暗::/category/tags/1108\n宠兽::/category/tags/1109\n豪快::/category/tags/1110\n宫廷东方::/category/tags/1111\n玄幻 正邪大战 古风::/category/tags/1112\n性转::/category/tags/1113\n长篇::/category/tags/1114\n陈岚::/category/tags/1115\n幻想言情::/category/tags/1116\n栏目::/category/tags/1117\n权斗::/category/tags/1118\n武侠仙侠::/category/tags/1119\n僵尸::/category/tags/1120\n宅男::/category/tags/1121\n逗比::/category/tags/1122\n悬疑脑洞::/category/tags/1123\n综合::/category/tags/1124\n种田::/category/tags/1125\n现代/职场::/category/tags/1126\n美少女::/category/tags/1127\n浪漫爱情::/category/tags/1128\n少年热血 科幻魔幻::/category/tags/1129\n幽默搞笑::/category/tags/1130\n大人系::/category/tags/1131\n神界漫画::/category/tags/1132\n穿书::/category/tags/1133\n畅销::/category/tags/1134\n少年热血 幽默爆笑::/category/tags/1135\n萌娃::/category/tags/1136\n氪金::/category/tags/1137\n末日求生::/category/tags/1138\n少年热血 运动竞技::/category/tags/1139\n丧尸::/category/tags/1140\n少年热血 武侠格斗::/category/tags/1141\n虐渣::/category/tags/1142\n绅士::/category/tags/1143\n原创::/category/tags/1144\n女尊::/category/tags/1145\n三角恋::/category/tags/1146\n前世::/category/tags/1147\n吸血鬼::/category/tags/1148\n男神::/category/tags/1149\n轮回::/category/tags/1150\n投稿::/category/tags/1151\nBL::/category/tags/1152\n团宠::/category/tags/1153\n游戏体育::/category/tags/1154\n欢喜::/category/tags/1155\n北欧::/category/tags/1156\n替身::/category/tags/1157\n军阀::/category/tags/1158\n婚恋::/category/tags/1159\n恐怖灵异::/category/tags/1160\n异世界::/category/tags/1161\n",
    "header": "{\n\t\"User-Agent\":\"Mozilla/5.0 (Linux; Android 13; V2148A Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/128.0.6613.146 Mobile Safari/537.36\"\n\t}",
    "lastUpdateTime": "1742557635723",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@get:{a}",
      "coverUrl": "@get:{i}",
      "init": "@put:{n:\".comics-card__title@text\",\na:\".comics-detail__author@text\",\nc:\"span[3]@text&&span[1]@text\",\nl:\"span[4]@a@text\",\nd:\".comics-detail__desc.overflow-hidden@text\",\ni:\".pure-u-1-1.pure-u-sm-1-3.pure-u-md-1-6@img@src\"}",
      "intro": "@get:{d}",
      "kind": "@get:{c}##更新时间：",
      "lastChapter": "@get:{l}##更新：",
      "name": "@get:{n}",
      "tocUrl": "",
      "wordCount": ""
    },
    "ruleContent": {
      "content": ".lazy-read@html",
      "imageStyle": "FULL",
      "nextContentUrl": ".next_chapter@a@href##$##,{\"webView\": true}"
    },
    "ruleExplore": {
      "author": ".tags@text",
      "bookList": ".comics-card.pure-u-1-3.pure-u-md-1-4.pure-u-lg-1-6",
      "bookUrl": "a[0]@href",
      "coverUrl": ".comics-card__poster.text-decoration-none@img@src",
      "kind": ".tabs.cls@text",
      "name": ".comics-card__title@text"
    },
    "ruleReview": [],
    "ruleSearch": {
      "author": "",
      "bookList": ".list a",
      "bookUrl": "a@href",
      "coverUrl": ".field-img@img@src",
      "kind": ".txt-inner[0]@text&&.txt-inner[1]@text",
      "lastChapter": ".txt-inner[2]@text##更新至",
      "name": ".title@text"
    },
    "ruleToc": {
      "chapterList": ".pure-u-1-2.pure-u-sm-1-2.pure-u-md-1-3.pure-u-lg-1-4.comics-chapters a",
      "chapterName": "span@text",
      "chapterUrl": "href##$##,{\"webView\": true}"
    },
    "searchUrl": "/index.php/search?key={{key}}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "",
    "bookSourceName": "过期杂志",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.52dzxy.com/",
    "bookUrlPattern": "",
    "customOrder": -99973,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "百科知识::https://www.52dzxy.com/bkzs/all.html\n父母必读::https://www.52dzxy.com/fmbd/all.html\n新民周刊::https://www.52dzxy.com/xmzk/all.html\n第一财经::https://www.52dzxy.com/dycj/all.html\n南风窗::https://www.52dzxy.com/nfc/all.html\n环球人物::https://www.52dzxy.com/hqrw/all.html\n轻兵器::https://www.52dzxy.com/qbq/all.html\n知识就是力量::https://www.52dzxy.com/zsjsll/all.html\n中小学心理健康教育::https://www.52dzxy.com/zxxxljkjy/all.html\n中国经济周刊::https://www.52dzxy.com/zgjjzk/all.html\n证券市场周刊::https://www.52dzxy.com/zqsczk/all.html\n股市状态分析::https://www.52dzxy.com/gsdtfx/all.html\n财经::https://www.52dzxy.com/caijing/all.html\n婚姻与家庭·性情读本::https://www.52dzxy.com/hyyjtxqdb/all.html\n南方人物周刊::https://www.52dzxy.com/nfrwzk/all.html\n中国新闻周刊::https://www.52dzxy.com/zgxwzk/all.html\n看世界::https://www.52dzxy.com/ksj/all.html\n阅读时代::https://www.52dzxy.com/ydsd/all.html\n格言·校园版::https://www.52dzxy.com/gyxyb/all.html\n海外文摘::https://www.52dzxy.com/hwwz/all.html\n思维与智慧·上半月::https://www.52dzxy.com/swyzhsby/all.html\n青年文摘::https://www.52dzxy.com/qnwz/all.html\n今日文摘::https://www.52dzxy.com/jrwz/all.html",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9; MIX 2 Build/PKQ1.190118.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/80.0.3987.99 Mobile Safari/537.36\"}",
    "lastUpdateTime": "1742502572404",
    "loginUrl": "",
    "respondTime": 835,
    "ruleBookInfo": {
      "author": "",
      "coverUrl": ".sidebar@img@src",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": ""
    },
    "ruleContent": {
      "content": "tag.p@html##我爱读者校园网",
      "nextContentUrl": ""
    },
    "ruleExplore": {
      "bookList": ".magazine-grid .magazine-item",
      "bookUrl": "a@href",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "a@text"
    },
    "ruleSearch": {
      "bookList": ".magazine-grid .magazine-item",
      "bookUrl": "a@href",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "a@text##更多..."
    },
    "ruleToc": {
      "chapterList": ".catalog-section-title,.article-title a||.maglistbox dt,.maglistbox dl dd a",
      "chapterName": "text",
      "chapterUrl": "href",
      "isVolume": ".catalog-section-title@text||span@text",
      "nextTocUrl": ""
    },
    "searchUrl": "#",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🙈,pixiv",
    "bookSourceName": "🌈pixiv小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://pixiv小说.luoyacheng.ip-ddns.com",
    "bookUrlPattern": "http://localhost/|https://www.pixiv.net/novel/series/\\d{3,}",
    "concurrentRate": "3/2000",
    "coverDecodeJs": "",
    "customOrder": -93827,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.0.7\";\nvar obj = {\n\t动态: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/novel/follow?restrict=public';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`},\n\t推荐: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/novel/recommended?include_privacy_policy=true&filter=for_android&include_ranking_novels=true';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`},\n\t收藏: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\tlet id = source.getLoginInfoMap().get('id');\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/user/bookmarks/novel?user_id='+id+'&restrict=public';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`,\n\t\t\"wb\": 1},\n\t追更: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/watchlist/novel';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`},\n\t'ⅹⅷ': {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/novel/ranking?filter=for_android&mode=day_r18';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`,\n\t\t\twb:1,\n\t\t\tfb:0.2},\n\t'ⅹⅷ_AI': {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/novel/ranking?filter=for_android&mode=week_ai_r18';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`,\n\t\t\tfb:0.2},\n\t'ⅹⅷ_WK': {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\t\t\turl = 'https://app-api.pixiv.net/v1/novel/ranking?filter=for_android&mode=week_r18';\n\t\t\t} else {url = source.get('nurl');}\n\t\t\turl=gethd(url);\n\t\t\t}}`,\n\t\t\tfb:0.2}\n\t}\n\n\nvar sort = [];\npush = (title, url, fg, wrap, fb) => sort.push({\n    \"title\": title,\n    \"url\": url,\n    \"style\": {\n      layout_flexGrow: fg || 1,\n      layout_flexBasisPercent: fb||-1,\n      layout_wrapBefore: wrap ? true : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n\tlet headers = gethd();\n\treturn JSON.stringify(headers);\n})();",
    "jsLib": "//参考自开源项目：pixez-flutter🙏\nsleep = Packages.java.lang.Thread.sleep;\nua = 'PixivAndroidApp/5.0.166 (Android 14; RMX3366)';\nappv = '5.0.166';\na_l = 'zh-CN';\n\nbiaoq = new RegExp('^(?:NTR|NTL|修仙|奇幻|后宫|纯爱|隐奸|乱伦|乱交|母女.?|母子|父女|幼女|姐弟|人妻|正太|足交|口交|肛交|丝袜|催眠|系统|原创|续写|软饭流|修罗场|规则怪谈|女性视角|性开放世界|奸尸|冰恋|.?重口)$','i');\n\nfunction timemd5(time) {\n\tconst {java, source} = this;\nlet salt = '28c1fdd170a5204386cb1313c7077b34f83e4aaf4aa829ce78c231e05b0bae2c';\nlet hash = java.md5Encode(time + salt);\n\treturn hash;\n}\n\nfunction gethdd(url='',ck='') {\n\t//网络判断\nlet url = 'http://127.0.0.1/';\n//try {\nlet urlStr='https://www.pixiv.net';\nlet aly = new JavaImporter(\nPackages.org.jsoup.Jsoup,\nPackages.org.jsoup.Connection);\nwith (aly) {\nJsoup.connect(urlStr)\n.timeout(3000)\n.ignoreContentType(true)\n.followRedirects(false)\n.method(Connection.Method.HEAD)\n.execute()\n\t}\n/*\t} catch(err) {\n//err.message.includes('SocketTimeout') ? \njava.longToast('\\n当前网络不支持访问pixiv') : \njava.log('lyc-px搜索错误：'+err);\n}*/\n}\n\nfunction gethd(url='',ck='') {\n\tconst {java, source} = this;\nlet time = java.timeFormatUTC(Date.now(),\"yyyy-MM-dd'T'HH:mm:ss'+00:00'\",8*60*60*1000);\nlet hash = this.timemd5(time);\nlet atk = source.getLoginHeader()||'';\nif(atk) atk = String('Bearer '+atk);\nlet headers = {\n    'x-client-time': time,\n    \t'User-Agent': ua,\n    \t'accept-language': a_l,\n    \t'authorization': atk,\n    \t'app-os': 'Android',\n    \t'app-os-version': 'Android 14',\n    \t'app-version': appv,\n    'x-client-hash': hash,\n    'cookie': ''\n    \t }\nck!='' && (headers['cookie']=ck);\nurl=url.replace(\"app-api.pixiv.net\",\"210.140.139.155\");\nurl && (headers['host']='app-api.pixiv.net');\nif (url=='') return headers;\nelse {\n\tdelete headers['x-client-time'];\n\tdelete headers['x-client-hash'];\n\treturn url + ',' + JSON.stringify({'headers':headers});}\n};\n\n\n\nfunction leng(str) {\n\tlet length = 0;\n\tconst fuhao = ',.?!:;()[]\"';\n\tconst fuhao2 = '📘';\n\tfor (char of str) {\n\t\tif (fuhao.includes(char) ) length += 0.5;\n\t\telse if (fuhao2.includes(char) ) length += 2;\n\t\telse length += 1;\n\t\t}\n\t\treturn length;\n}\n\nfunction gethdi(url='') {\turl=url.replace(\"i.pximg.net\",\"210.140.139.133\");\nlet imgoptions = {\n  headers: {\n    'User-Agent': 'PixivIOSApp/5.8.0',\n    'accept-encoding': 'gzip, br',\n    'referer': 'https://app-api.pixiv.net/',\n    'host': 'i.pximg.net'\n    }\n  };\n  return url+','+JSON.stringify(imgoptions);\n }\n \nfunction copy(txt) {\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\nbody {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 60vh;}\n</style>\n</head>\n<body>\n<textarea id=\"copyt\" rows=\"3\">${txt}</textarea>\n<br>\n<button id=\"btn1\" onclick=\"copy()\">复制</button>\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", function () {\nconst textarea = document.getElementById(\"copyt\");\ntextarea.style.height = \"auto\";\ntextarea.style.height = textarea.scrollHeight + \"px\";});\nfunction copy() {\nconst cpt = document.getElementById(\"copyt\");\ncpt.select();\ndocument.execCommand(\"copy\");}\n</script>\n</body></html>`;\nthis.java.startBrowser(htm,'复制');\n\t}\n\n\nfunction lookc(lyc) {\nconst [title,uid,unm,uim,tags,caption,cdate,xh,sc,gk,sTitle,id,ugz] = lyc;\n//\tconst {java, source} = this;\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\twidth: 100%;\n\ttable-layout: fixed;\n\ttext-align: center;\n\tmargin: 0 auto;\n\tword-break: break-all;\n\t}\ntd img {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: contain;\n\t}\n.cap {\n\t text-align: left;\n\t text-indent: 2em;\n\t}\na {text-decoration: none;}\np {margin: 0.2em auto;}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<tr>\n<th colspan=\"6\">标题：<a href=\"https://www.pixiv.net/novel/show.php?id=${id}\">${title}</a></th>\n</tr>\n<tr>\n<td colspan=\"4\">\n作者：<a href=\"https://www.pixiv.net/users/${uid}\">${unm}</a>\n${ugz=='true' ? '<span style=\"font-size: 0.7em;\"> (已关注)</span>' : ''}\n</td>\n<td colspan=\"2\"><img src=\"${uim}\"></td>\n</tr>\n${sTitle!='' ? ('<tr><td colspan=\"6\">小说：《'+sTitle+'》'+'</td></tr>') : ''}\n<tr>\n<td>喜欢</td>\n<td>${xh}</td>\n<td>收藏</td>\n<td>${sc}</td>\n<td>观看</td>\n<td>${gk}</td>\n</tr>\n<tr>\n<td>时间</td>\n<td colspan=\"5\">${cdate}</td>\n</tr>\n<td>标签</td>\n<td colspan=\"5\">${tags}</td>\n</tr>\n${caption!='' ? ('<tr><td>简介</td><td class=\"cap\" colspan=\"5\">'+caption+'</td></tr>') : ''}\n</table>\n<br>\n<script>\n\n</script>\n</body></html>`;\n\nthis.java.startBrowser(htm,'信息');\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/pixiv小说/pixiv.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://github.com/Luoyacheng/yuedu/raw/main/书源/pixiv小说/pixiv.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/书源/pixiv小说/pixiv.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'px更新');\r\n}\nfunction fankui(){\tthis.java.startBrowser('https://github.com/Luoyacheng/yuedu/issues','px反馈');\n}",
    "lastUpdateTime": "1742011264868",
    "loginCheckJs": "//java.toast('登录检查：'+result);\n\nif (result.code() == 400) {\n\tsource.login();\n\tsleep(500);\n\tlet url = gethd(result.url());\n\tresult = java.connect(url);\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"token\",\n        type: \"text\"\n    },\n    {\n        name: \"token说明\",\n        type: \"button\",\n        action: \"java.longToast(`\ntoken说明：\n填写该值后点击右上角√进行登录\n可以通过获取token按钮得到(不需要跳转app)\n阅读正式版无法支持获取token功能`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"获取token\",\n        type: \"button\",\n        action: \"Login()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"id\",\n        type: \"text\"\n    },\n    {\n        name: \"id说明\",\n        type: \"button\",\n        action: \"java.longToast(`\nid说明：\n登录时该值为空会自动填写该值，这是登录账号的ID（可手动更改）。\n发现页的收藏分类加载的该ID的收藏`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"搜索说明\",\n        type: \"button\",\n        action: \"java.longToast(`\n搜索说明：\n默认使用关键词搜索\n输入小说id号显示对应的小说\n输入“正文@许斌”搜索正文含许斌的小说\n输入“作者@69559022”搜索指定id作者的书`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n     {\n        name: \"↑追更该书\",\n        type: \"button\",\n        action: \"scz(3)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n     {\n        name: \"复制id\",\n        type: \"button\",\n        action: \"fuzhi(2)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"取消追更\",\n        type: \"button\",\n        action: \"scz(30)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"章节\",\n        type: \"text\"\n    },\n    {\n        name: \"↑收藏该章\",\n        type: \"button\",\n        action: \"scz(1)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n     {\n        name: \"详情\",\n        type: \"button\",\n        action: \"caption()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"取消收藏\",\n        type: \"button\",\n        action: \"scz(10)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"作者\",\n        type: \"text\"\n    },\n    {\n        name: \"↑关注作者\",\n        type: \"button\",\n        action: \"scz(2)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n     {\n        name: \"复制id\",\n        type: \"button\",\n        action: \"fuzhi(1)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n     {\n        name: \"取消关注\",\n        type: \"button\",\n        action: \"scz(20)\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"📘书名标识\",\n        type: \"button\",\n        action: \"gongcun()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"反馈\",\n        type: \"button\",\n        action: \"fankui()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    \t{\n        name: \"版本更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🫧补充序号\",\n        type: \"button\",\n        action: \"xvhao()\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"占位\",\n        type: \"button\",\n        action: \"java.longToast(`这里没有东西`);\",\n        style: {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.2\n        }\n    },\n    \t{\n        name: \"书源介绍\",\n        type: \"button\",\n        action: \"java.startBrowser('https://www.luoyacheng.ip-ddns.com/#P站','介绍');\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"＃简介标签\",\n        type: \"button\",\n        action: \"biaoqian()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    }\n]",
    "loginUrl": "function gongcun() {\nlet gc = source.get('gc');\nif(gc!=1) {source.put('gc',1);java.toast('🟢已开启\\n书名开头会有📘符号');}\nelse {source.put('gc',0);java.toast('⚫已关闭\\n不会添加📘');}\n\t}\nfunction xvhao() {\nlet xh = source.get('xh');\nif(xh!=1) {source.put('xh',1);java.toast('🟢已开启\\n会自动补充章节名序号');}\nelse {source.put('xh',0);java.toast('⚫已关闭\\n不会补充序号');}\n\t}\nfunction biaoqian() {\nlet bq = source.get('bq');\nif(bq!=1) {source.put('bq',1);java.toast('🟢已开启\\n会在简介显示作品标签');}\nelse {source.put('bq',0);java.toast('⚫已关闭\\n不会显示简介标签');}\n\t}\n\nfunction login() {\nlet time = java.timeFormatUTC(Date.now(),\"yyyy-MM-dd'T'HH:mm:ss'+00:00'\",8*60*60*1000);\nlet hash = timemd5(time);\n\tlet headers = {\n    'User-Agent': 'PixivAndroidApp/5.0.155 (Android 6.0; Pixel C)',\n    'content-type': 'application/x-www-form-urlencoded',\n    'x-client-hash': hash,\n    'accept-language': a_l,\n    'app-version': appv,\n    'app-os-version': 'Android 6.0',\n    'x-client-time': time,\n    'app-os': 'Android'\n  };    \n  let url = 'https://oauth.secure.pixiv.net/auth/token';\n  headers['host']='oauth.secure.pixiv.net';\n  url =url.replace(\"oauth.secure.pixiv.net\",\"210.140.139.155\");\n  let Info = source.getLoginInfoMap();\n  \n  try {\n  let tk = Info.token;\n  let body = `client_id=MOBrBDS8blbauoSck0ZfDbtuzpyT&client_secret=lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj&grant_type=refresh_token&refresh_token=${tk}&include_policy=true`;\n\tlet rr = java.post(url,body,headers).body();\n\tlet atk = rr.match(/\"access_token\"[:\\s\"]+([^\"]+)/)[1];\n\tsource.putLoginHeader(atk);\n\tif (Info.id=='') {\n\t\tInfo.id = com.jayway.jsonpath.JsonPath.read(rr, \"$.user.id\");}\n\tsource.putLoginInfo(JSON.stringify(Info));\n\tjava.toast('\\n😆登录成功');\n\t} catch(err) {\n\t\tjava.toast('\\n💔登录失败');\n\t\tjava.log('px登录失败：'+err);\n\t\t}\n  \t//为了显示\n  \tsleep(600);\n\t}\n\nfunction scz(x) {\n\tlet headers = gethd();\n\t//let url = 'https://app-api.pixiv.net/';\n\tlet url = \"https://210.140.139.155/\";\n\tlet body,nm,tt,ttt;\n\tif (x==1) {\n\t url += 'v2/novel/bookmark/add';\n\t \tlet id = cache.get('pxid');\n\t \tif (id=='') ttt='请刷新章节';\n\t \tbody = 'novel_id='+id+'&restrict=public';\n\t \tnm = source.getLoginInfoMap().get('章节');\n\t \ttt='收藏';\n\t } else if(x==2) {\n\t \turl += 'v1/user/follow/add';\n\t \tlet uid = cache.get('pxuid');\n\t \tif (uid=='') ttt='请刷新章节或详情页';\n\t \tbody = 'user_id='+uid+'&restrict=public';\n\t \tnm = source.getLoginInfoMap().get('作者');\n\t \ttt='关注';\n\t \t} else if(x==10) {\n\t \turl += 'v1/novel/bookmark/delete';\n\t \tlet id = String(cache.get('pxid'));\n\t \tbody = id ? 'novel_id='+id : '';\n\t \tnm = source.getLoginInfoMap().get('章节');\n\t \ttt='取消收藏😅';\n\t \t} else if(x==20) {\n\t \turl += 'v1/user/follow/delete';\n\t \tlet uid = String(cache.get('pxuid'));\n\t \tbody = uid ? 'user_id='+uid : '';\n\t \tnm = source.getLoginInfoMap().get('作者');\n\t \ttt='取消关注😅';\n\t \t} else if(x==3) {\n\t \turl += 'v1/watchlist/novel/add';\n\t \tlet sid = cache.get('pxsid');\n\t \tif (sid=='') ttt='请刷新详情页';\n\t \tbody = 'series_id='+sid;\n\t \tnm = source.getLoginInfoMap().get('书名');\n\t \ttt='追更';\n\t \t} else if(x==30) {\n\t \turl += 'v1/watchlist/novel/delete';\n\t \tlet sid = String(cache.get('pxsid'));\n\t \tbody = sid ? 'series_id='+sid : '';\n\t \tnm = source.getLoginInfoMap().get('书名');\n\t \ttt='取消追更😅';\n\t \t}\n\n\ttry {\n\t\tif (ttt) {java.longToast(ttt);throw 't空';}\n\t\tif (!body) throw 'b空';\n\t\theaders['host']='app-api.pixiv.net';\n\t\tlet jg = java.post(url,body,headers).statusCode();\n\t\tif (jg!=200) throw tt+'响应码异常';\n\t\telse java.longToast(`\\n已${tt}：\\n${nm}`);\n\t\t} catch(e) {\n\t\t\tif (!ttt) java.toast(`\\n${tt}失败`);\n\t\t\tjava.log(e);}\n\t}\n\n\n\nfunction Login() {\nsource.removeLoginHeader();\nlet rkey = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\nlet cv='';\nfor (let i = 0; i < 128; i++) {\n\tlet ra = Math.floor(Math.random()*rkey.length);\n\tcv+=rkey.charAt(ra);\n\t}\n\nlet aly = new JavaImporter(\nPackages.cn.hutool.crypto.digest.Digester,\nPackages.cn.hutool.core.codec.Base64,\nPackages.cn.hutool.crypto.digest.DigestAlgorithm);\nwith (aly) {\n\t//转ASCII数组\n\tlet asBs =  Packages.java.lang.String(cv).getBytes(\"US-ASCII\");\n\t//创建SHA256并计算\n\tlet digester = new Digester(DigestAlgorithm.SHA256);\n\tlet hashBs = digester.digest(asBs);\n\t//Base64URL编码并移除填充\n\tvar codeChallenge  = Base64.encodeUrlSafe(hashBs);\n}\n\nlet urllg =`https://app-api.pixiv.net/web/v1/login?code_challenge=${codeChallenge}&code_challenge_method=S256&client=pixiv-android`;\n\n//cookie.removeCookie('https://app-api.pixiv.net');\n//cookie.removeCookie('https://accounts.pixiv.net'); 异常时还是得手动清除内置浏览器\n\nlet wbua=java.getWebViewUA();\n\nlet bb=java.startBrowserAwait(urllg+`,{\nheaders:{\n\tUser-Agent: \"${wbua}\"\n\t}}`,'登录',false).body();\n\nlet code;\nif (bb.includes('<title>Online com')) {\nsleep(600);\njava.toast('稍等');\nlet over = java.webViewGetOverrideUrl(bb,'https://app-api.pixiv.net/','','pixiv:.*');\ncode = over.match(/code=([^&]+)/);\n}\n\nlet token;\nif (code) {\nlet tkurl = 'https://oauth.secure.pixiv.net/auth/token';\nlet headers = gethd();\nlet body = `code_verifier=${cv}&code=${code[1]}&grant_type=authorization_code&redirect_uri=https://app-api.pixiv.net/web/v1/users/auth/pixiv/callback&client_id=MOBrBDS8blbauoSck0ZfDbtuzpyT&client_secret=lsACyCD94FhDUtGTXi3QzcFE2uU1hqtDaKeqrdwj&include_policy=true`;\nlet tkr = java.post(tkurl,body,headers);\njava.log(tkr.body())\ntoken = tkr.body().match(/refresh_token\":\"([^\"]+)/);\n}\n\nif (token) {\nlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>\nh2 {\n\ttext-align: center;\n\tline-height: 6;}\ntextarea {\n\tfont-size: 12px;\n\twidth: 96%;\n\tmargin: 10px 2%;\n\tpadding: 6px;}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;}\nbutton {\n\tbackground-color: rgb(76,175,80);\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\ttransition: font-size 0.3s;\n\tfont-size: 16px;}\n.an-s {\n\tfont-size: 12px;}\n.alert-overlay {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0, 0, 0, 0.6);\n\tdisplay: none;\n\tjustify-content: center;\n\talign-items: center;\n\tz-index: 9999;}\n/* 对话框主体 */\n.alert-box {\n\tbackground: rgb(232,234,246);\n\tpadding: 10px;\n\tborder-radius: 12px;\n\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n\tmin-width: 100px;\n\ttext-align: center;}\n</style></head>\n<body>\n<div class=\"alert-overlay\" id=\"alertO\">\n <div class=\"alert-box\">\n  <p>已复制到剪贴板：</p>\n  <p id=\"alertM\" style=\"font-size: 12px;\"></p>\n </div>\n</div>\n<h2>Token获取成功🥳</h2>\n<textarea readonly id=\"copyt\" rows=\"3\">${token[1]}</textarea>\n<p style=\"font-size: 12px;\">请复制粘贴到登录界面的token框，然后点击√进行登录</p>\n<div class=\"ann\">\n<button id=\"btn1\" onclick=\"copy()\">复制</button>\n</div>\n<script>\nfunction showAlert(txt, time) {\nconst overlay = document.getElementById('alertO');\nconst message = document.getElementById('alertM');\nmessage.textContent = txt;\noverlay.style.display = 'flex';\nif (time > 0) {\n\tsetTimeout(() => {\n\t\toverlay.style.display = 'none';\n\t\t}, time);\n\t}\n}\nfunction copy() {\nconst btn = document.getElementById('btn1');\nbtn.classList.add('an-s');\nconst cpt = document.getElementById(\"copyt\");\ncpt.select();\ntry {\n    const cpy = document.execCommand(\"copy\");\n    if (cpy.length<9) throw '异常';\n    showAlert(cpt.value, 1000);\n  } catch (e) {alert(\"复制失败，请手动复制\");}\nsetTimeout(() => {\n\tbtn.classList.remove('an-s');\n\t}, 450);\n}\n</script>\n</body></html>`;\n\njava.startBrowser(htm,'获取token');\njava.log(token[1]); //留一份到日志\t\n\t} else {sleep(700);java.toast('获取失败😭');}\n}\n\nfunction fuzhi(x) {\n\tif (x==1) {\n\tlet uid = cache.get('pxuid');\n\tcopy(uid);}\n\tif (x==2) {\n\tlet sid = cache.get('pxsid');\n\tcopy(sid);}\n\t}\n\nfunction caption() {\n\tlet lyc=cache.getFromMemory('pxcjj');\n\tif (lyc) lookc(lyc);\n\telse java.longToast('请刷新正文');\n\t}",
    "respondTime": 229699,
    "ruleBookInfo": {
      "author": "$.novel_series_detail.user.name\n<js>\nlet uid = java.get('uid');\nlet auth = result || String(book.author).replace(/[\\u200b]+/,'')\nif (uid == '') {uid = java.getString('$.novel_series_detail.user.id');}\nlet Info=source.getLoginInfoMap();\nInfo['作者'] = auth;\ncache.put('pxuid',uid);\nsource.putLoginInfo(JSON.stringify(Info));\n'\\u200b' + auth\n</js>",
      "canReName": "1",
      "init": "<js>\nvar sid = java.get('sid');\nlet i = String(book.bookUrl).includes('https:/');\nif (i) { sid = String(book.bookUrl).match(/\\d{3,}$/);}\n\ncache.deleteMemory('pxcjj'); //仅通过正文打开详情，防错\nif (sid == '🇨🇳') {\n\tlet Info=source.getLoginInfoMap();\n\tlet bkn = String(book.name);\n\tlet id = java.hexDecodeToString(result).match(/\\d+$/)[0];\n\tInfo['书名'] = '';\n\tcache.put('pxsid','');\n\tInfo['章节'] = bkn;\n\tcache.put('pxid',id);\n\tsource.putLoginInfo(JSON.stringify(Info));\n\tlet length = leng(bkn);\t\nbook.intro = (source.get('bq')==1?String(java.get('tags')).replace(/, /g,' #').replace('[','#').replace(']','\\n\\n'):'') + (length>18?('《'+book.name+'》\\n'):'') + java.get('jianjie');\n\trr='1';\n\t}\n\nelse {\nlet url = 'https://app-api.pixiv.net/v2/novel/series?series_id=' + sid;\n//修正bookurl\nbook.bookUrl = `data:;base64,${java.base64Encode(url)},{'type':''}`;\n\ntry {\n\njg = java.connect(gethd(url));\nrr = jg.body();\nif (jg.code() == 400) {\n\tsource.login();\n\tPackages.java.lang.Thread.sleep(500);\n\trr = java.ajax(gethd(url));\n\t}\n\n} catch(err) {\n\trr={};\n\tjava.toast('详情页链接加载失败'+sid);\n\t}\n\n//设置解析结果\njava.setContent(rr);\n\n\n//更新更新时间\ntry {\nlet tm = java.getString('$.novel_series_latest_novel.create_date');\nlet d = new Date(tm);\nd = java.timeFormatUTC(d,'yy/MM/dd',8*60*60*1000);\nbook.kind = String(book.kind).replace(/\\d+\\/\\d+\\/\\d+|$/,d).replace('null','');\n} catch(err) {java.toast('详情页内容错误');}\n\n//获取书名并净化\nlet bkn = String(java.getString('$.novel_series_detail.title')).replace(/^《(.+)》$/,'$1');\nbook.name = bkn.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'');\n\n//java.log('┌获取书名\\n[99:99.999] └'+book.name);\n\n//获取书名失败\nif (book.name == '') {\n\t//效果，unicode转字符\n\t// let ee = JSON.stringify(JSON.parse(rr) );\n\tlet txte = java.getString('$..user_message',rr);\n\t//弹出提示，sid相应序列不存在\n\tjava.longToast('\\n未获取到书名\\n'+txte);\n\t} else {\n\t\n\t//放入书名\n\tlet Info=source.getLoginInfoMap();\n\tInfo['书名'] = book.name;\n\tcache.put('pxsid',sid);\n\tInfo['章节'] = '';\n\tcache.put('pxid','');\n\tsource.putLoginInfo(JSON.stringify(Info));\n\t\n\t//同名共存\n\tif (source.get('gc') == 1) book.name='📘'+book.name;\n\t}\n\n//补充封面链接\nif (book.coverUrl == null) {\n\tlet img = java.getString('$.novel_series_latest_novel.image_urls.large');\n\tbook.coverUrl = img+','+JSON.stringify(imgoptions);\n\t\n//java.log('┌获取封面\\n[99:99.999] └'+book.coverUrl);\n}\n\n//计算书名长度\nlet length = leng(String(book.name));\n//大于18个全角字符\nif (length > 18) length= '《'+String(book.name).replace(/^📘/,'')+'》\\n';\nelse length = '';\n\n\nlet jianjie = java.getString('$.novel_series_detail.caption');\n\n\nbook.intro = (source.get('bq')==1?String(java.get('tags')).replace(/, /g,' #').replace('[','#').replace(']','\\n\\n'):'') + length + java.get('jianjie');\njava.put('jianjie',jianjie);\njava.put('bookr',rr);\n}\n//java.put('i',0);\n\n//book.intro = String(book.kind).replace(/^|,/g,' #') + \"\\n\" + java.get('jianjie');\n\trr\n</js>",
      "intro": "",
      "lastChapter": "$.novel_series_latest_novel.title##【?{{book.name}}】?",
      "name": "",
      "tocUrl": "{{book.bookUrl.replace(\"pe':'\",\"pe':'ml\")}}",
      "wordCount": "$.novel_series_detail.total_character_count"
    },
    "ruleContent": {
      "content": "script.0@html\n<js>\nlet rr = result.match(/novel:\\s*({.+})/)[1];\nlet id = String(chapter.url).match(/\\d+(?=$|,)/)[0];\n\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nif (inn==0) {\nlet rra = result.match(/authorDetails:\\s*({.+})/)[1];\n//作者信息\nlet uid = java.getString('$..userId',rra);\nlet unm = java.getString('$..userName',rra);\nlet uim = java.getString('$..url',rra);\nuim = uim.replace('i.pximg.net','pximg.hakurei.cc');\nlet ugz = java.getString('$..isFollowed',rra);\n//作品信息\nlet tags = java.getStringList('$..tags[*]',rr);\ntags = Array.from(tags).map(x => `＃${x}`).join(' ');\nlet caption = String(java.getString('$..caption',rr));\ncaption = caption ? '<p>'+caption.replace(/(?:<br \\/>)+/g, '</p><p>')+'</p>' : '';\nlet cdate = java.getString('$..cdate',rr);\nlet xh = java.getString('$..rating.like',rr);\nlet sc = java.getString('$..rating.bookmark',rr);\nlet gk = java.getString('$..rating.view',rr);\nlet title = java.getString('$.title',rr);\nlet sTitle = java.getString('$.seriesTitle',rr);\n//放入信息\ncache.putMemory('pxcjj',[title,uid,unm,uim,tags,caption,cdate,xh,sc,gk,sTitle,id,ugz]);\ncache.put('pxuid',uid);\ncache.put('pxid',id);\nlet Info=source.getLoginInfoMap();\n\nlet sid = java.get('sid');\nif (sid != '🇨🇳') {\n\tInfo['书名']=String(book.name).replace(/^📘/,'');\n\tcache.put('pxsid',sid);} else {\n\tInfo['书名']='';\n\tcache.put('pxsid','');}\n\nInfo['章节'] = chapter.title;\nInfo['作者'] = book.author.replace('\\u200b','');\n//放入UI界面\nsource.putLoginInfo(JSON.stringify(Info));\n}\n\nlet urls = java.getString('$..urls',rr);\nlet tt = String(java.getString('$.text',rr));\nlet img1 = tt.match(/\\[uploadedimage\\:\\d+\\]/g)||'';\nlet img2 = tt.match(/\\[pixivimage\\:[\\d\\-]+\\]/g)||'';\nfor (x of img1) {\n\tlet id = x.match(/\\d+/)[0];\n\tlet url = java.getString('$..'+id+'.urls.original',rr);\n\tlet re = new RegExp('\\\\[uploadedimage\\\\:'+id+'\\\\]');\n\t//let hd = ','+JSON.stringify(imgoptions);\n\ttt = tt.replace(re,'<img src=\"'+gethdi(url)+'\"/>');\n\t}\nfor (x of img2) {\n\tlet id = x.match(/[\\d\\-]+/)[0];\n\tlet url = java.getString('$..'+id+'..images.original',rr);\n\tif (url=='null') url = java.getString('$..'+id+'..images.medium',rr);\n\tlet re = new RegExp('\\\\[pixivimage\\\\:'+id+'\\\\]');\n//\tlet hd = ','+JSON.stringify(imgoptions);\n\ttt = tt.replace(re,'<img src=\"'+gethdi(url)+'\"/>');\n\t}\ntt.replaceAll('[newpage]','\\n—换页符—\\n').replace(/\\[\\[jumpuri\\:(.+)\\>.+\\]\\]/,'🖇️$1🖇️')\n</js>",
      "imageStyle": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "$.user.name\n<js>\nlet uid = java.getString('$.user.id');\njava.put('uid',uid);\nresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\trr = [{}];\n\t} else {\nlet nurl = java.getString('$.next_url');\nif (nurl == '') {\n\tjava.toast('发现页到底了');\n\tsource.put('nurl','http://127.0.0.1');\n\t}\nelse {\n\tsource.put('nurl',nurl);\n\t}\nif (baseUrl.includes('/watchlist/novel') ) {\n\trr = java.getElement(\"$.series\");\n\t} else { rr = java.getElement(\"$.novels\");}\n\n}\nrr\n</js>",
      "bookUrl": "<js>\nlet id = java.getString('$.id');\nlet sid = java.getString('$.series.id');\nlet rr = 'https://app-api.pixiv.net/webview/v2/novel?id=' + id;\n\nif (baseUrl.includes('/watchlist/novel') ) {\n\tsid = id;\n\tif (source.get('gc')=='1') book.name='📘'+book.name;\n}\nelse if (sid=='') {sid='🇨🇳';}\nelse {\n\tlet jj = java.get('jianjie');\n\tjava.put('jianjie',book.name+'\\n'+jj);\n}\njava.put('sid',sid);\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "coverUrl": "<js>\nif (baseUrl.includes('/watchlist/novel') ) {url = java.getString('$.url');}\nelse {url = java.getString('$.image_urls.large');}\ngethdi(url);\n</js>",
      "intro": "<js>\nlet jj = java.get('jianjie');\nlet rr = '\\n' + java.getString('$.caption');\nlet rs = java.htmlFormat(rr);\njava.put('jianjie',rs);\njj + rs\n</js>",
      "kind": "@js:\nif (baseUrl.includes('/watchlist/novel') ) {\n\trrr = '';\n\ttm = java.getString('$.last_published_content_datetime');\n\t} else {\n\t\tlet tags = java.getStringList('$.tags..name');\n\t\tjava.put('tags',tags);\n\t\t//将list数组处理为js正常数组，并且保证了元素值为js字符串\n\t\trr=String(tags).slice(1,-1).split(', ');\n\t\t//下面方式会复杂了点，但能保证元素也能含逗号\n\t\t//rr = Array.from(tags);rr=rr.join().split(',');\n\t\trrr = rr.filter(i => biaoq.test(i) );\n\t\trr.forEach(x=>{\n\t\t\tif (x=='萝莉') {\n\t\t\t\tif (!rrr.includes('幼女')) rrr.unshift(x);}\n\t\t\telse if (['熟女','淫妻'].includes(x)) {\n\t\t\t\tif (!rrr.includes('人妻')) rrr.unshift(x);}\n\t\t\telse if (['仙侠','古风','武侠'].includes(x) && !rrr.some(y=>/[修仙古风武侠]{2}/.test(y))) {\n\t\t\t\t\trrr.unshift(x);}\n\n\n\t});\n\t\ttm = java.getString('$.create_date');\n}\nlet d=new Date(tm);\nd=java.timeFormatUTC(d,'yy/MM/dd',8*60*60*1000);\n\nrrr.toString()+','+d",
      "lastChapter": "",
      "name": "$.title\n<js>\nlet bookn = String(java.getString('$.series.title')).replace(/^《(.+)》$/,'$1');\nif (bookn != '') {\n\tjava.put('jianjie', '《'+bookn+'》\\n');\n\tresult = result.replace(bookn,'♸').replace(/[《【]?♸[】》]?/,'')||result;\n\t}\nresult = result.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'').replace(/《(.+)》/,'$1');\nresult\n</js>",
      "wordCount": "$.text_length"
    },
    "ruleSearch": {
      "author": "$.user.name\n<js>\nlet uid = java.getString('$.user.id');\njava.put('uid',uid);\nresult\n</js>",
      "bookList": "<js>\npage=cache.getFromMemory('pxpage');\ncache.deleteMemory('pxpage');\nif (baseUrl.startsWith('http://127.')) {rr = [{}];}\n\nelse {\nrr = java.getElement('$.novels');\nnurl = java.getString('$.next_url');\nif (rr.length<6&&page==1&&nurl!='') {\n\t//处理不触发下一页且有nurl的情况\n\tsleep(500);\n\trs = java.ajax(gethd(nurl));\n\tjava.setContent(rs)\n\trrr = java.getElement('$.novels');\n\t//合并对象函数，可直接用\n\trr.addAll(rrr);\n\tnurl = java.getString('$.next_url');\n}\n\nif (nurl == '') {\n\tjava.toast('搜索页到底了');\n\tsource.put('nurls','http://127.0.0.1');\n\t} else {source.put('nurls',nurl);}\n\n}\nrr\n</js>",
      "bookUrl": "<js>\nlet id = java.getString('$.id');\nlet sid = java.getString('$.series.id');\nif (sid=='') {\n\tsid='🇨🇳';\n\t} else {\n\tlet jj = java.get('jianjie');\n\tjava.put('jianjie',book.name+'\\n'+jj);\n\t}\nlet rr = 'https://app-api.pixiv.net/webview/v2/novel?id=' + id;\njava.put('sid',sid);\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "checkKeyWord": "",
      "coverUrl": "$.image_urls.large\n<js>\ngethdi(result);\n</js>",
      "intro": "<js>\nlet jj = java.get('jianjie');\nlet rr = '\\n' + java.getString('$.caption');\nlet rs = java.htmlFormat(rr);\njava.put('jianjie',rs);\njj + rs\n</js>",
      "kind": "<js>\n{{(source.ruleExplore.kind).replace('@js:','')}}\n</js>",
      "name": "$.title\n<js>\nlet bookn = String(java.getString('$.series.title')).replace(/^《(.+)》$/,'$1');\nif (bookn != '') {\n\tjava.put('jianjie', '《'+bookn+'》\\n');\n\tresult = result.replace(bookn,'♸').replace(/[《【]?♸[】》]?/,'')||result;\n\t}\nresult = result.replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'').replace(/《(.+)》/,'$1');\nresult\n</js>",
      "wordCount": "$.text_length"
    },
    "ruleToc": {
      "chapterList": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {result=[result];}\nelse {\n\tlet i = java.get('i');\n\tif (i==0) {\n\t\tlet url = java.hexDecodeToString(result);\n\t\tlet bookr = String(java.get('bookr'))||java.ajax(gethd(url));\n\t\tjava.setContent(bookr);\n\t\tjava.put('bookr','');\n\t\t}\nresult = java.getElement('$.novels');\n}\nresult\n</js>",
      "chapterName": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {cc=book.name;}\nelse {\nlet title = java.getString('$.title');\ntitle = String(title).replace(/[(（].{0,9}((?:仙侠|纯爱|后宫|萝莉).?){3,}.{0,9}[)）](?=\\s*[一-ꀀ])/,'');\nlet bkn=String(book.name).replace(/^📘|[。？！]+$/g,'');\n//消除后不剩字则不消除\ncc = title.replace(bkn,'♸').replace(/[《【]♸[。？！]*[】》]\\s*|♸[。？！\\s]*/,'')||title;\n\t}\nif (source.get('xh')==1) {\n\tcc='▫️'+cc;\n}\n\tcc\n</js>",
      "chapterUrl": "<js>\nlet sid = java.get('sid');\nif (sid == '🇨🇳') {\n\t\tuu=java.hexDecodeToString(result);\n\t\tbook.putCustomVariable('这是单贴，链接：'+uu);\n\t}\nelse {\nlet id = java.getString('$.id');\nuu='https://app-api.pixiv.net/webview/v2/novel?id=' + id;\n}\ngethd(uu);\n</js>",
      "formatJs": "title.replace(/^▫️(?![第序]|#?第?[\\d零一二三四五六七八九十百千]+[章回])/,'第'+index+'章 ').replace(/^▫️/,'');",
      "isPay": "",
      "isVolume": "",
      "nextTocUrl": "$.next_url\n<js>\nif (result!='[]') {\njava.put('i',1);\nresult=gethd(result[0]);\n}else{result=[];}\nresult\n</js>",
      "preUpdateJs": "java.put('i',0);",
      "updateTime": "$.create_date\n<js>\nif (result) {\nlet d=new Date(result);\nupt=java.timeFormatUTC(d,\"yyyy/MM/dd HH:mm\",8*60*60*1000);\n}\nelse '';\n</js>"
    },
    "searchUrl": "<js>\nif (page == 1) {\ncache.putMemory('pxpage',page);\n\t\tif (/^\\u200b/.test(key)) {\n\t\t\tlet uid = cache.getFromMemory('pxuid');\n\t\t\tif (uid=='') java.longToast('\\n请刷新书籍');\n\t\t\telse url = 'https://app-api.pixiv.net/v1/user/novels?filter=for_android&user_id=' + uid;}\n\t\telse if (key.startsWith('作者@')) {\n\t\t\tlet uid = key.slice(3);\n\t\t\tif (!/^\\d{3,}$/.test(uid)) java.longToast('\\n请输入正确的id');\n\t\t\telse url = 'https://app-api.pixiv.net/v1/user/novels?filter=for_android&user_id='+uid;\t}\n\t\telse if (/\\d{5,}$/.test(key) ) {\n\t\t\tlet sid = key.match(/\\d+$/)[0];\n\t\t\tjava.put('sid',sid);\n\t\t\tif (key.startsWith('作者')) java.longToast('\\n请输入正确的搜索格式');\n\t\t\telse url = `data:;base64,${java.base64Encode(sid)},{'type':''}`;}\n\t\telse if (key.startsWith('正文@')) {\n\t\t\turl = 'https://app-api.pixiv.net/v1/search/novel?filter=for_android&merge_plain_keyword_results=true&sort=date_desc&search_target=text&word='+key.slice(3);}\n\t\telse { url = 'https://app-api.pixiv.net/v1/search/novel?filter=for_android&merge_plain_keyword_results=true&word='+key;}\nsource.put('nurls','http://127.0.0.1'); //重置储存的下一页\n\n} else {url = source.get('nurls');}\ngethd(url)\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "-自制,✨极速",
    "bookSourceName": "齐鲁文学(修复正文下一页)",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.qiluwx.com#测试",
    "bookUrlPattern": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": false,
    "exploreUrl": "",
    "header": "{\n\t\"x-requested-with\": \"XMLHttpRequest\",\n\t\"User-Agent\": \"Mozilla/5.0 (Linux; Android 10; SK) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36\"\n}",
    "lastUpdateTime": "1742533907861",
    "loginUrl": "",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property$=og:novel:author]@content",
      "coverUrl": "[property$=og:image]@content",
      "downloadUrls": ".addbookcase@href",
      "init": "",
      "intro": "[property$=og:description]@content",
      "kind": "[property$=og:novel:category]@content&&[property$=og:novel:status]@content&&[property$=og:novel:update_time]@content",
      "lastChapter": "[property$=og:novel:latest_chapter_name]@content",
      "name": "[property$=og:title]@content",
      "tocUrl": "[property$=og:url]@content@js:result.replace(\"_\",\"/\")",
      "wordCount": ".visible-xs.1@text##字数："
    },
    "ruleContent": {
      "content": "#booktxt@html##<script[^>]*>.*?</script>",
      "imageStyle": "",
      "nextContentUrl": "<js>\n(function(){\n    // 使用正则检测分页标签\n    const hasNextLink = /<a\\s+rel=\\\"next\\\"\\s+class=\\\"next\\\"[^>]*>下—页<\\/a>/i.test(result);\n    if (!hasNextLink) return '';\n    \n    try {\n        // 动态生成分页URL（适配数字型URL）\n        let url = baseUrl;\n        const pageMatch = url.match(/(\\d+)(?:_(\\d+))?\\.html$/);\n        if (!pageMatch) return '';\n        \n        const [_, baseId, currentPage] = pageMatch;\n        const pageNum = currentPage ? parseInt(currentPage) : 1;\n        \n        // 安全限制（最大3页）\n        if (pageNum > 2) return ''; // 第3页后停止\n        \n        // 生成新URL（如 /123_2.html → /123_3.html）\n        return url.replace(/(\\d+)(?:_(\\d+))?\\.html$/, `${baseId}_${pageNum + 1}.html`);\n    } catch(e) {\n        return '';\n    }\n})()\n</js>",
      "replaceRegex": "##(请记住.*?域名|最新章节！|请收藏本站)"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": ""
    },
    "ruleSearch": {
      "author": ".btm@a@title",
      "bookList": "#hotcontent@.item",
      "bookUrl": "a@href@js:try{var r=String(result);r.charAt(0)==='/'?r:'/'+r}catch(e){'/'}",
      "checkKeyWord": "副本需要我这样的人才",
      "coverUrl": ".lazy@src",
      "intro": "dl@dd@text",
      "kind": ".blue@text",
      "lastChapter": "",
      "name": "dt@a@text",
      "wordCount": ".orange@text"
    },
    "ruleToc": {
      "chapterList": "#content_1@a",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href@js:try{var u=String(result);u.indexOf('/')===0?u:'/'+u}catch(e){'/'}",
      "nextTocUrl": "text.下一页@href@js:try{var p=String(result);p.substring(0,1)==='/'?p:'/'+p}catch(e){''}"
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}\nhttps://www.qiluwx.com/search/,{\n  \"body\": \"keyword={{key}}\",\n  \"method\": \"POST\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "",
    "bookSourceGroup": "🙈,🎨,绅士漫画",
    "bookSourceName": "🌈绅士漫画",
    "bookSourceType": 2,
    "bookSourceUrl": "https://绅士漫画.luoyacheng.ip-ddns.com",
    "concurrentRate": "6/1200",
    "customOrder": -93915,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.1.0\";\nlet rere = Object.entries(flfl);\nrere.splice(14,2);\nrere.sort((a,b)=>{return a[1][1]-b[1][1]})\nlet obj={};\nfor (char of rere) {\n\tobj[char[1][0]] = {\"url\": `\\`data:;base64,\\${java.base64Encode('■'+${char[0]}+'🀄'+page)},{'type':''}\\``};\n\t}\n\n\nvar sort = [];\nph = (title, url, size, wrap, cc) => sort.push({\n    \"title\": title,\n    \"url\": '{{'+url+'}}',\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: cc || 0.25,\n      layout_wrapBefore: wrap ? wrap : false\n     }\n  });\n\nfor (x in obj) {\n\tph(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n\treturn gethd();\n})();",
    "jsLib": "flfl={\n\t\t1: [\"同人/汉化\",1],\n\t\t12: [\"同人/日语\",2],\n\t\t16: [\"同人/英语\",3],\n\t\t9: [\"单行/汉化\",4],\n\t\t13: [\"单行/日语\",5],\n\t\t17: [\"单行/英语\",6],\n\t\t10: [\"短篇/汉化\",7],\n\t\t14: [\"短篇/日语\",8],\n\t\t18: [\"短篇/英语\",9],\n\t\t2: [\"CG\",10],\n\t\t3: [\"Cos\",11],\n\t\t37: [\"AI\",12],\n\t\t22: [\"3D\",13],\n\t\t23: [\"3D/汉化\",0],\n\t\t24: [\"3D/其它\",0],\n\t\t20: [\"韩漫/汉化\",14],\n\t\t21: [\"韩漫/生肉\",15]\n\t\t};\n\nu_a = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36 Edg/132.0.2957.129';\ns_c_ua = `'Microsoft Edge';v='131', 'Chromium';v='131', 'Not_A Brand';v='24'`;\ns_c_ua_m = '?1';\ns_c_ua_p =  `'Android'`;\ncache_c = 'max-age=0';\na_l = 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7';\n\nfunction gets(x, r) {\nlet re = r==undefined ? this.java.getString(x) : this.java.getString(x,r);\nreturn String(re);}\nfunction getsl(x, r) {\nreturn r == undefined ? this.java.getStringList(x) : this.java.getStringList(x,r)}\n\nfunction surl() {\n\tlet url=String((this.source.getLoginInfoMap()||{})['地址']);\n\tif (/^http/.test(url)) {url=url.replace(/\\/*$/,'')}\n\telse url='https://www.wn02.uk';\n\treturn url;}\n\nfunction gethd(url='',ck='') {\n//\tlet u_a=this.java.getWebViewUA();\n\tlet headers = {\n\t\t  \t'User-Agent': u_a,\n\t\t  'sec-ch-ua': s_c_ua,\n    \t 'sec-ch-ua-mobile': s_c_ua_m,\n     \t'sec-ch-ua-platform': s_c_ua_p,\n     \t'cache-control': cache_c,\n     \t'accept-language': a_l\n    \t }\nif (ck!='') headers['cookie']=ck;\nif (url=='') return JSON.stringify(headers);\nelse return url + ',' + JSON.stringify({'headers':headers});\n};\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/漫画/绅士漫画/shenshi.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>更新</title>\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/importonline?src=https://github.com/Luoyacheng/yuedu/raw/main/漫画/绅士漫画/shenshi.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n<a href=\"legado://import/importonline?src=https://cdn.jsdelivr.net/gh/Luoyacheng/yuedu@main/漫画/绅士漫画/shenshi.json\" style=\"font-size: 10px;\">备用链接</a>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'更新');\r\n}\nfunction fankui(){\tthis.java.startBrowser('https://github.com/Luoyacheng/yuedu/issues','绅士反馈');\n}",
    "lastUpdateTime": "1742011422593",
    "loginUi": "[\n    {\n        name: \"地址\",\n        type: \"text\"\n    },\n    \t{\n        name: \"发布页\",\n        type: \"button\",\n        action: \"fabuye()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": 0.3\n        }\n    },\n    \t{\n        name: \"测速\",\n        type: \"button\",\n        action: \"cesu()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": 0.3\n        }\n    },\n    \t{\n        name: \"更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": 0.25\n        }\n    },\n    {\n        name: \"发现起始页数\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐书源介绍\",\n        type: \"button\",\n        action: \"java.startBrowser('https://www.luoyacheng.ip-ddns.com/#绅士','介绍');\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    }\n]",
    "loginUrl": "function login() {}\n\nfunction fabuye() {\n\tlet webr = java.startBrowserAwait('https://wnacg.date/','发布页',false).body();\n\tlet rr = org.jsoup.Jsoup.parse(webr);\n\trr = rr.select('.content-top li:gt(1):lt(4) a');\n\tlet re=[];\nfor (char of rr) {re.push(char.attr('href'));}\nsource.put('yurl',re);\ncesu();\n}\n\nfunction cesu() {\n\t['　　　','·　　','··　','···'].forEach((_,i) => {java.toast('\\n\\n测试中'+_+'\\n');Packages.java.lang.Thread.sleep((3-i)*100);});\nlet url = source.get('yurl').split(',').reverse();\nlet tm=[], mit=99, miu='';\n\ttry {\n\tfor (char of url) {\n  let startTime=new Date().getTime();\n\tjava.head(char,{\t'User-Agent': u_a});\n\tlet endTime=new Date().getTime();\n\tlet speed = (endTime - startTime) / 1000;\n\tspeed = speed.toFixed(2);\n\tif (mit>speed) {mit=speed; miu=char;}\n\ttm.push(speed);\n\t}\n\tjava.longToast('\\n'+url[0]+'：'+tm[0]+'秒\\n'+url[1]+'：'+tm[1]+'秒');\n\t} catch(err) {java.longToast(err);}\n\tlet Info=source.getLoginInfoMap()||{};\n\tInfo['地址'] = miu;\nsource.putLoginInfo(JSON.stringify(Info));\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "coverUrl": "fm",
      "init": "<js>\nlet hj=java.get('sshj');\nif (hj=='') {\nlet tags=String.raw`{{@@.addtags>a:not(:last-of-type)@text##\\n## #}}`;\ntags=tags ? ('#'+tags+'\\n') : '';\nlet jj=tags+java.get('jianjie')+`\n{{@@.addtags~p@textNodes##`##\\\\`}}`.replace(/簡介：/,'');\nresult={\n\tjj:jj};\n\n} else {\n\tlet st=gets('.info@text');\n\tlet sj=st.match(/创建于([\\d\\ \\-\\:]+)/)[1];\n\tlet fm=gets('#classify_container li img.0@src');\n\tfm+=`,{headers:{referer:'${surl()}/'}}`;\n\tresult={\n\ttags:sj,\n\tfm:fm};\n\n}\n</js>",
      "intro": "jj",
      "kind": "tags",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "<js>\nlet ref=baseUrl.replace('webp','slist');\n\nlet rr=result.match(/\\/\\/[^\"\\n]+\\.(?:webp|jpg|png|jpeg)/g);\nfor (let i=0;i<rr.length;i++) {\n\trr[i]=`<img src=\"${rr[i]},{headers:{referer:'${ref}'}}\">`\n\t}\n\nrr.toString()\n</js>",
      "nextContentUrl": "",
      "title": ""
    },
    "ruleExplore": {
      "bookList": ""
    },
    "ruleSearch": {
      "author": "@get:{anm}",
      "bookList": "<js>\nlet [key,page] = java.hexDecodeToString(result).split('🀄');\nlet url=surl();\n\nif (key.startsWith('@')) {\n\tkey=key.slice(1);\n\tjava.put('sshj',key);\n\turl += '/q/?q='+key+'&m=&f=_all&s=create_time_DESC&p=1';}\nelse if (/^[#＃]/.test(key)) {\n\tlet webua=java.getWebViewUA();\n\tkey=key.slice(1);\n\turl += `/albums-index-page-${page}-tag-${key}.html,{headers:{User-Agent:\"${webua}\"}}`;}\nelse if (/^■\\d/.test(key)) {\n\tjava.put('cos',1);\n\tlet page2=(source.getLoginInfoMap()||{})['发现起始页数']||'1';\n\tif (page2=='') page2=1;\n\tpage=+page + +page2-1;\n\tlet webua=java.getWebViewUA();\n\tkey=key.slice(1);\n\turl += `/albums-index-page-${page}-cate-${key}.html,{headers:{User-Agent:\"${webua}\"}}`;}\nelse {\t\n\turl+='/q/?q='+key+'&m=&f=_all&s=create_time_DESC&p='+page;}\nlet webr=java.ajax(url);\njava.setContent(webr);\nresult=java.getElement('#classify_container li');\nlet hj=java.get('sshj');\nif (page>4&&(page&1)==0)\njava.toast('第'+page+'页');\n\nif (hj!=''&&result.length>1) {\n\tlet st=java.getString('.info@text',result);\n\tlet sj=st.match(/创建于([\\d\\ \\-\\:]+)/)[1];\n\tlet sl=st.match(/\\d+(?=张图)/g);\n\tsl=sl.reduce((acc, cur)=>acc+Number(cur),0);\n\tlet im=java.getString('img.0@all',result);\n\tlet rr=`<li><a class=\"info\" href=\"${url}\">${sl}张图${sj}</a></li>+${im}`;\n\tresult=[rr];\n\t} else {java.put('sshj','');\n\tresult;}\n</js>",
      "bookUrl": "<js>\nlet hj=java.get('sshj');\nlet url;\nif (hj=='') url= surl()+java.getString('a@href');\nelse url=java.getString('a@href');\n</js>",
      "checkKeyWord": "@邪恶变形系统",
      "coverUrl": "https:{{@@img@src}},{headers:{referer:'{{surl()}}/'}}",
      "intro": "<js>\nlet hj=java.get('sshj');\nif (hj=='') {\n\tlet rr=String(java.getString('a@text'));\n\tlet nm = rr.match(/\\[([^\\[\\]]+)\\]\\-?\\s*([^\\[\\]]+)(?:(\\[[^\\[\\]]+\\])\\s*)(?:(\\[[^\\[\\]]+\\])\\s*)?/);\n\tif (nm) {result=nm[3]+(nm[4]?nm[4]:'');java.put('jianjie',result);}\n\telse result='';\n\t}\n</js>",
      "kind": "<js>\n\tlet rr = '{{@@li@class##cate-}}';\n\tlet tt = `{{@@.info@text##([\\d\\-\\s\\:]{4,})$##$1###}}`;\n\tresult=rr ? (flfl[rr][0]+','+tt) : tt;\n</js>",
      "lastChapter": "",
      "name": "<js>\nlet hj=java.get('sshj');\nlet cos=java.get('cos');\n\nif (hj=='') {\n\tlet rr=String(java.getString('a@text'));\n\tlet nm = rr.match(/\\[([^\\[\\]]+)\\]\\-?\\s*([^\\[\\]]+)/);\n\tif(!nm&&cos==1) nm=rr.match(/(^.+)\\s+[–\\-]\\s+(.+$)/);\n\tif (nm&&!/^3d$/i.test(nm[1])) {java.put('anm',nm[1]); result=nm[2];}\n\telse {java.put('anm',rr); result=rr;}\n\t}\nelse {java.put('anm','合集'); result='📚'+hj;}\n\nresult\n</js>",
      "wordCount": ".info@text##^(\\d+)##$1张图###"
    },
    "ruleToc": {
      "chapterList": "-<js>\nlet hj=java.get('sshj');\nif (hj=='') {\n\tlet rr=`<a href=\"${baseUrl}\">单章</a>`;\n\tresult = [rr];\n} else result = java.getElement('#classify_container li');\nresult\n</js>",
      "chapterName": "a@text",
      "chapterUrl": "a@href##index##webp",
      "formatJs": "",
      "isPay": "",
      "isVolume": "",
      "nextTocUrl": "<js>\nlet hj=java.get('sshj');\nif (hj=='') {result=[];}\nelse {\nresult=gets('.block-pagination a@href').split('\\n');\nresult.push(\"http:data:;base64,aHR0,{'type':'ss'}\");\n}\nresult\n</js>",
      "preUpdateJs": "",
      "updateTime": ".info@text##^(\\d+)\\D*([\\d\\-\\s\\:]{4,})$##$2　$1张图###"
    },
    "searchUrl": "{{`data:;base64,${java.base64Encode(key+'🀄'+page)},{'type':''}`;}}",
    "weight": 0
  },
  {
    "bookSourceComment": "//by 天天的鸟蛋蛋更改url\n// By情无羁修复,25.01.27,搜索重定向后把网址复制到URL即可\n\n/*同站一大堆\n修复搜索，可设置源变量限制搜索数量\n优化by:游客2580\n搜索加载by:Thomas&&youke2580\n以下同库网站可以自行替换网址\nm.wnxsw.cc\nm.quge.cc\nm.bq9.cc\nm.bqg18.cc\nm.bqg113.com\nm.bqg119.com\nm.bqg222.com\nm.bqg227.com\nm.p2wt.com\nm.wpxs.cc\nm.lwp7.com\nm.4z6p.com\nm.aofce.com\nm.fqxs123.com\nm.1q1m.com\nm.wnxsw.com\nm.shuhui8.cc\nm.ok120.net\nm.ecc6.com\nm.bqg332.com\nm.bqg122.com\nm.bqg18.cc\nm.shuhui8.cc\n*/",
    "bookSourceGroup": "",
    "bookSourceName": "笔趣阁",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.soushuwang.cc",
    "bookUrlPattern": "",
    "customOrder": 78,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "玄幻::/json?sortid=1&page={{page}}\n武侠::/json?sortid=2&page={{page}}\n都市::/json?sortid=3&page={{page}}\n历史::/json?sortid=4&page={{page}}\n网游::/json?sortid=5&page={{page}}\n科幻::/json?sortid=6&page={{page}}\n女生::/json?sortid=7&page={{page}}\n完本::/json?sortid=0&page={{page}}",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\"}",
    "lastUpdateTime": "1742057596533",
    "respondTime": 196008,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "intro": "[property$=description]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "[property$=book_name]@content",
      "tocUrl": ".book_more@a@href##^##/userverify",
      "wordCount": "{{@@text.字数@text##字数：}}"
    },
    "ruleContent": {
      "content": "#chaptercontent@html",
      "nextContentUrl": "text.下一@href",
      "replaceRegex": "##\\s*（.*阅读模式.*）\\s*|\\s*请收藏.*(com|cc)"
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "",
      "intro": "",
      "kind": "",
      "name": ""
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "<js>\nfunction loading(){\nvar su=source.getKey(),\nsk=java.get(\"sk\"),\nq=\"?q=\"+java.encodeURI(sk);\n\nvar c=\"Hm_lvt_=\"+~~(Date.now()/1e3);\nvar head={\n\taccept: \"application/json\",\n\t\"accept-language\": \"zh-CN,en-US;q=0.9\",\n\treferer: baseUrl,\n\tcookie: String(c)\n};\n\nvar hm=\";hm=\"+java.head(su+\"/user/hm.html\"+q,head).cookies().hm;\nhead.cookie = String(head.cookie+hm);\n\nvar get=java.get(su+\"/user/search.html\"+q, head).body();\n\nvar j=JSON.parse(get),\nm=j.map(_=>JSON.stringify(_));\n\nvar b=[],\nv=source.getVariable();\n//条件判断，存在不为空和0，且小于长度\nif(v&&v!=\"\"&&v!=0&&v<m.length){\n\tfor(i=0;i<=v-1;i++){\n\t\tb.push(m[i])\n\t\t}\n\tm=b;\n\t}else{m=m}\n//返回列表\nreturn m\n}\n//当前url包含json为发现，直接返回结果\nm=/json/.test(baseUrl)?result:loading();\n//不包含json为搜索，进行搜索加载\nm\n</js>\n$.*",
      "bookUrl": "$.url_list",
      "checkKeyWord": "剑来",
      "coverUrl": "$.url_img",
      "intro": "$.intro",
      "kind": "0",
      "lastChapter": "",
      "name": "$.articlename"
    },
    "ruleToc": {
      "chapterList": "dl@dd!0",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "preUpdateJs": ""
    },
    "searchUrl": "{{source.getKey()}}/s?q={{java.put(\"sk\",key)}}",
    "variableComment": "输入数字设置搜索列表数量，过大无效。\n1为1个，2为2个，3为3个，以此类推。\n不设置或0清空显示全部列表。",
    "weight": 0
  },
  {
    "bookSourceComment": "/*\n请勿修改此处的地址\nhttp://219.154.201.122:5006\nhttps://api.langge.cf\nhttps://20.langge.tk\nhttp://v2.dahuilang.cf\n*/\n\n250101新增番茄来源\n250203新增七猫来源\n250204新增得间来源\n250204新增QQ来源(仅支持免费小说)\n250204新增熊猫看书\n250210更新日志：\n1.采用全新验证方式，之后未填写密钥，可以在阅读页登陆后刷新阅读页面即可！\n2.搜索默认改为全局搜索，目前仅支持番茄，七猫，QQ，得间，熊猫，后面的按钮是预设，后期会添加相关来源\n3.新增大灰狼书架功能，在登陆里面点击书架查看\n\n下个版本预计更新内容：\n1.预计发现页新增阅读记录和大灰狼书架栏目\n2.预计新增阅读记录，阅读过的书籍可在大灰狼书架-阅读历史中查看\n3.预计新增塔读小说，米读小说，小米阅读，猫眼看书，部分起点\n\n250213更新日志:\n新增塔读，69书吧，笔趣阁，喜马拉雅\n新增大灰狼书架同步功能(书籍详情页刷新同步)\n\n250214更新日志:\n新增小米阅读，修复登录失效的问题\n\n250218更新日志:\n新增百度免费小说，新增猫眼免费小说，新增下载提醒\n\n250218更新日志:\n新增歪瑞古德漫画\n\n250227更新日志:\n开放安卓端短剧模式\n\n250302更新日志:\n修复切换服务器后目录加载失败的问题\n\n250302更新日志:\n修复bug\n\n250304更新日志:\n修复听书模式识别失败bug\n\n250309更新日志:\n修复部分书籍目录加载失败的问题",
    "bookSourceName": "全新聚合库书源",
    "bookSourceType": 0,
    "bookSourceUrl": "http://v2.dahuilang.cf",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server',String(source.bookSourceComment));\nlet ms = getArguments(open_argument,'tone_id',String(source.bookSourceComment));\n\nlet sdtoken;\n\ntry {\n    sdtoken= String(source.getLoginInfoMap()['手动填写番茄token(可不填)']);\n     } catch (e) {\n    sdtoken= '';\n  }\n\nlet fqsjurl = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || sdtoken).replace(/=/g, '%3D');\n//let fqsjurl = ''\nif (!fqsjurl) {\njava.toast('您还未登陆番茄账号，无法同步数据哦！');\n}\nfqsjurl = base_url + \"/bookshelf?page={{page}}&cookie=\" + fqsjurl;\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": fqsjurl,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },{\n        \"title\": \"大灰狼书架\",\n        \"url\": base_url + '/get_user_bookshelf?is_bookshelf=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "jsLib": "function getKey(key) {\n    const parts = key.split(\";\");\n    for (let part of parts) {\n        if (part.includes(\"secretKey2\")) {\n            return part.split(\"=\")[1];\n        }\n    }\n    return \"\";\n}\n\nfunction getArguments(open_argument,key,servers) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        const serverList = servers.match(/https?:\\/\\/[^\\s]+/g);\n        open_argument = {\n            \"media\": \"小说\",\n            \"tone_id\": \"默认音色\",\n            \"server\": serverList[0],\n            \"source\":\"全部\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n\nfunction generateVideoPage(title, videoUrl) {\n    return `<!DOCTYPE html><html lang=\"zh-CN\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>${title}</title><style>body,html{margin:0;padding:0;height:100%}video{width:100%;height:100%;object-fit:cover}.controls{position:absolute;bottom:20px;left:0;right:0;display:flex;justify-content:space-between;align-items:center;padding:0 20px;box-sizing:border-box;opacity:0;transition:opacity 0.3s ease}.controls.show{opacity:1}.progress-bar{flex:1;height:8px;background:rgba(255,255,255,0.2);border-radius:10px;position:relative;margin:0 15px;cursor:pointer}.progress{height:100%;background:linear-gradient(to right,#00c6ff,#0072ff);border-radius:10px}.btn{color:white;background:rgba(0,0,0,0.6);padding:8px 16px;border-radius:25px;cursor:pointer;font-size:16px;border:2px solid rgba(255,255,255,0.2);transition:background 0.3s ease}.btn:hover{background:rgba(0,0,0,0.8);border-color:white}.speed-btn{background:rgba(0,0,0,0.5);border-radius:20px;padding:8px 16px;color:white;font-size:14px;font-weight:bold;cursor:pointer;transition:background 0.3s ease}.speed-btn:hover{background:rgba(0,0,0,0.8)}</style></head><body><video id=\"video\" controlslist=\"nodownload nofullscreen noremoteplayback\" onclick=\"toggleControls(event)\"><source src=\"${videoUrl}\" type=\"video/mp4\">您的浏览器不支持 HTML5 视频标签。</video><div class=\"controls\" id=\"controls\"><div class=\"btn play-pause\" onclick=\"togglePlayPause()\">⏸️</div><div class=\"progress-bar\" onclick=\"seek(event)\"><div class=\"progress\"></div></div><div class=\"speed-btn\" onclick=\"changeSpeed()\">1x</div></div><script>const video=document.getElementById('video'),controls=document.getElementById('controls'),progressBar=document.querySelector('.progress-bar'),progress=document.querySelector('.progress'),speedBtn=document.querySelector('.speed-btn'),playPauseBtn=document.querySelector('.play-pause');video.onplay=updateProgress;video.ontimeupdate=updateProgress;function togglePlayPause(){if(video.paused){video.play();playPauseBtn.textContent='⏸️'}else{video.pause();playPauseBtn.textContent='▶️'}}function updateProgress(){const progressPercent=(video.currentTime/video.duration)*100;progress.style.width=\\`\\${progressPercent}%\\`}function seek(event){const rect=progressBar.getBoundingClientRect(),clickPosition=(event.clientX-rect.left)/rect.width;video.currentTime=clickPosition*video.duration}function changeSpeed(){const currentSpeed=video.playbackRate;video.playbackRate=currentSpeed<3?currentSpeed+0.5:1;speedBtn.textContent=\\`\\${video.playbackRate}x\\`}function toggleControls(event){if(event.target===video){controls.classList.toggle('show')}else{controls.classList.remove('show')}}window.onload=function(){video.play().catch(function(){console.log('自动播放被阻止')})}</script></body></html>`;\n}",
    "lastUpdateTime": "1742551092275",
    "loginUi": "[ {\n        \"name\":  \"♥♥ 登录大灰狼账号♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },{\n        \"name\":  \"📚大灰狼书架\",\n        \"type\": \"button\",\n        \"action\": \"qtsj()\"\n      },{\n        \"name\":  \"🍅🍅🍅番茄登录🍅🍅🍅\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },{\n        \"name\":  \"  退出登录  \",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\": \"全部\",\n        \"type\": \"button\",\n        \"action\": \"set_source('全部')\"\n      },{\n        \"name\": \"番茄\",\n        \"type\": \"button\",\n        \"action\": \"set_source('番茄')\"\n      },{\n        \"name\": \"七猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('七猫')\"\n      },{\n        \"name\": \"得间\",\n        \"type\": \"button\",\n        \"action\": \"set_source('得间')\"\n      },{\n        \"name\": \"QQ\",\n        \"type\": \"button\",\n        \"action\": \"set_source('QQ')\"\n      },{\n        \"name\": \"熊猫\",\n        \"type\": \"button\",\n        \"action\": \"set_source('熊猫')\"\n      },{\n        \"name\": \"塔读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('塔读')\"\n      },{\n        \"name\": \"猫眼\",\n        \"type\": \"button\",\n        \"action\": \"set_source('猫眼')\"\n      },{\n        \"name\": \"米读\",\n        \"type\": \"button\",\n        \"action\": \"set_source('米读')\"\n      },{\n        \"name\": \"小米\",\n        \"type\": \"button\",\n        \"action\": \"set_source('小米')\"\n      },{\n        \"name\": \"百度\",\n        \"type\": \"button\",\n        \"action\": \"set_source('百度')\"\n      },{\n        \"name\": \"起点(部分)\",\n        \"type\": \"button\",\n        \"action\": \"set_source('起点')\"\n      },{\n        \"name\": \"喜马拉雅\",\n        \"type\": \"button\",\n        \"action\": \"set_source('喜马拉雅')\"\n      },{\n        \"name\": \"歪瑞古德漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_source('歪瑞古德')\"\n     },{\n        \"name\": \"↑↑上方可切换自己想要的来源进行搜索↑↑\",\n        \"type\": \"button\",\n        \"action\": \"\"\n      },{\n        \"name\":  \"☕解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },{\n        \"name\":  \"♻️检测服务器可用性\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },{\n        \"name\":  \"    🎚切换服务器    \",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"    🖱当前服务器    \",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },{\n        \"name\":  \"                                🗂当前模式                                \",\n        \"type\": \"button\",\n        \"action\": \"get_media()\"\n      },{\n        \"name\": \"      📖小说模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('小说')\"\n      },{\n        \"name\": \"      🔊听书模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('听书')\"\n      },{\n        \"name\": \"      🏞漫画模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('漫画')\"\n      },{\n        \"name\": \"      🖲短剧模式      \",\n        \"type\": \"button\",\n        \"action\": \"set_media('短剧')\"\n      },{\n        \"name\": \"听书Ai音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      },{\n        \"name\":  \"自定义服务器(可不填)\",\n        \"type\": \"text\"\n        }, {\n        \"name\":  \"手动填写番茄token(可不填)\",\n        \"type\": \"text\"\n      }\n\n\n      ]",
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } \n            } catch (error) {\n    }\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['听书Ai音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        } else {\n            setArgument('tone_id', '默认音色');\n        }\n    } catch (error) {\n    }\n}\nfunction qtsj() {\n\tjava.startBrowserAwait(getArgument('server') + '/online_bookshelf','大灰狼书架');\n\t}\n\n// 填写密钥\nfunction loginqt() {\n        java.startBrowserAwait(getArgument('server') + '/login', '登录大灰狼小说书源');\n    }\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies);\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出登录\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    \n    const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n    for (let server of servers) {\n    cookie.removeCookie(server);\n    }\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    return open_argument[key];\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '',String(source.bookSourceComment));\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() { java.startBrowserAwait('https://dashabi.tk', \"首页\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//设置搜索媒体\nfunction set_media(media) {\n        let source = getArgument('source');\n     if (source!='番茄' && source!='全部'){\n                       if (source=='喜马拉雅') {\n                           setArgument('media', '听书');\n          java.toast(\"\\n\\n目前\"+source+\"：仅支持听书模式！\");\n                           }else if (source=='七猫' && media == '听书') {\n                               setArgument('media', '听书');\n            java.toast(\"\\n\\n已切换至：听书\\n请重新搜索书籍！\");\n                               } else if (source=='歪瑞古德') {\n                               setArgument('media', '漫画');\n            java.toast(\"\\n\\n目前\"+source+\"：仅支持漫画模式！\");\n                               } else {\n                                   setArgument('media', '小说');\n                                   if (media=='小说') {\n                                       java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                                       } else {\n                                           java.toast(\"\\n\\n目前\"+source+\"：不支持\"+media+\"模式！\");\n                                           }\n                                   }\n                                    } else {\n                      setArgument('media', media);\n         java.toast(\"\\n\\n已切换至：\" + media + '\\n请重新搜索书籍！');\n                      }\n    }\n\n//获取搜索媒体\nfunction get_media() {\n    let media = getArgument('media');\n    if (media == '') {\n        media = '全部';\n    }\n    java.toast(\"\\n\\n当前搜索范围是：\" + media);\n\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['自定义服务器(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    if (!zdyserver) {\n        const servers = String(source.bookSourceComment).match(/https?:\\/\\/[^\\s]+/g);\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\n//设置来源\nfunction set_source(source) {\n\t          setArgument('source', source);\n\t          set_media('小说');\n            java.toast(`\\n\\n当前来源已切换为:\\n${source}\\n\\n切换后请重新搜索`);\n       }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.author",
      "coverUrl": "$.thumb_url",
      "init": "$.book_detail",
      "intro": "<js>\njava.log(123);\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab;\nlet book_tts = result.book_tts;\nlet tags = result.tags;\nlet role = result.role;\nlet last_chapter_title = result.last_chapter_title;\nlet last_chapter_update_time = result.last_chapter_update_time;\nlet word_number = result.word_number;\nlet status = result.status;\nlet score = result.score;\nlet media = result.media;\nlet abstract = result.abstract;\nlet book_review = result.book_review;\nlet copyright_info = result.copyright_info;\njava.put('book_detail',JSON.stringify(result));\nlet info;\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\n\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n        } catch (e) {key='';}\nif (key != ''){key = '✅️已登录';} else {key = '‼️⛔️您还未登录大灰狼账号哦，可以点击右上角登录♨️';}\ninfo = `&nbsp;&nbsp;🎚当前服务器：${base_url}\n🪄大灰狼账号：${key}\n🎴当前来源：${sources}\n🗂当前模式：${tab}\\n`\nif (tab =='听书') {info = info+\t'🔊当前音色：'+ getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment))+'\\n'+book_tts+'\\n&lrm;';}\nif (`${tags}`) {info = info +  `🕹分类：${tags}\\n`};\nif (`${role}`) {info = info +  `🎗书籍主角：${role}\\n`};\nif (`${last_chapter_title}`) {info = info +  `🎯最新章节：${last_chapter_title}\\n`};\nif (`${last_chapter_update_time}`) {info = info +  `⏳更新时间：${last_chapter_update_time}\\n`};\nif (`${word_number}`) {info = info +  `📝书籍字数：${word_number}\\n`};\nif (`${status}`) {info = info +  `💥书籍状态：${status}\\n`};\nif (`${score}`) {info = info +  `✨书籍评分：${score}\\n`};\nif (`${media}`) {info = info +  `📌出版媒体：${media}\\n`};\nif (`${abstract}`) {info = info +  `&lrm;\n📚书籍简介：\n${abstract}\\n`};\nif (`${book_review}`) {info = info +  `&lrm;\\n${book_review}\\n`};\nif (`${copyright_info}`) {info = info +  `📍${copyright_info}`};\n</js>",
      "kind": "",
      "lastChapter": "$.last_chapter_title",
      "name": "$.book_name",
      "tocUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/catalog?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "wordCount": "$.word_number"
    },
    "ruleContent": {
      "content": "<js>\nlet res =java.hexDecodeToString(result).split('大灰狼融合2.1');\n\nlet item_id = res[0];\nlet tab = res[1];\nlet title = res[2];\nlet sources = res[3];\nlet tone_id = getArguments(source.getVariable(),'tone_id',String(source.bookSourceComment));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key = '';\ntry {\n\tkey = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey = getKey(key);\n } catch (e) {key='';}\n        \n        \nlet device,device_type;\ntry {\n    device = java.androidId();\n    device_type='安卓';\n} catch (e) {\n    try{\ndevice = java.deviceID();\ndevice_type='苹果';\n}catch (e) {device = '';\ndevice_type='安卓';\n}\n}\n\n\nlet content_url;\nif (tab=='小说') {\n\tcontent_url= `/content?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n } \n else if (tab=='听书') {\n \t \tcontent_url= `/audio?item_id=${item_id}&device=${device}&tone_id=${tone_id}&source=${sources}&tab=${tab}&key=${key}`;\n \t} else if (tab=='漫画') {\n \t\t \tcontent_url=\t`/pic?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t} else if (tab=='短剧') {\n \t\tcontent_url=\t`/video?item_id=${item_id}&device=${device}&source=${sources}&tab=${tab}&key=${key}`;\n \t\t\t}\n let data = java.ajax(base_url+content_url);\n try {\nif (JSON.parse(data).msg) {\n\tjava.toast(JSON.parse(data).msg);\n\t}}catch (e) {}\nlet content = JSON.parse(data).content;\nif (device_type=='安卓' && tab  == '短剧'){\n\tdata = {'content':`【右上角刷新】开启播放(下一集请切换下一章刷新)\\n播放直链：\\n${content}`}\n\tdata = JSON.stringify(data);\n\t if (book.durChapterIndex===chapter.index){\n\t //let b64 = java.base64Encode(generateVideoPage(title,content));\n\t// let dataUrl = `data:text/html;base64,${b64}`;\n\t// \tjava.startBrowser(dataUrl,title);\n\t \tjava.startBrowser(content,title);\n\t \tjava.toast('正在加载视频...');\n\t}};\n\ndata;\n</js>\n$.content"
    },
    "ruleExplore": {
      "author": "author",
      "bookList": "$.books&&$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = (String(cookie.getCookie('fanqienovel.com')) || String(java.getCookie('fanqienovel.com')) || String(source.getLoginInfoMap()['手动填写番茄token(可不填)'])).replace(/=/g, '%3D');\n\nif (!cookie || cookie == \"\") {\n        java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n    } \n\t}\n\nresult;",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "coverUrl": "thumb_url",
      "intro": "{{$.source}}\n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "name": "book_name",
      "wordCount": "word_number"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "$.books",
      "bookUrl": "<js>\nlet book_id = result.book_id;\nlet sources = result.source;\nlet tab = result.tab || '小说';\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\n`${base_url}/detail?book_id=${book_id}&source=${sources}&tab=${tab}`\n</js>",
      "checkKeyWord": "我的26岁女房客",
      "coverUrl": "$.thumb_url",
      "intro": "$.abstract",
      "kind": "{{$.status}},{{$.score}},{{$.tags}},{{$.last_chapter_update_time}}",
      "lastChapter": "<js>\nfunction fq_last() {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\n\t\nfunction qm_last() {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':{{$.book_id}}, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n\t\nif ('{{$.source}}'=='番茄'){\n\t'番茄:'+fq_last();\n\t} else if ('{{$.source}}'=='七猫'){\n\t'七猫:'+qm_last();\n\t} else {\n\t\t'{{$.source}}'\n\t\t}\n\n</js>",
      "name": "$.book_name##（别名：.*?）",
      "wordCount": "$.word_number"
    },
    "ruleToc": {
      "chapterList": "$.chapter_list\n<js>\ntry {\nlet book_detail = JSON.parse(java.get('book_detail'));\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet url = `${base_url}/get_user_bookshelf?book_id=${book_detail.book_id}&source=${book_detail.source}`;\n//java.toast(url);\nlet getbook =JSON.parse(java.ajax(url)).books;\nlet is_bookshelf;\nlet data = [];\nif (book.order < 0 && !getbook.length) {\n\t// 在阅读书架，不在大灰狼书架，同步到大灰狼书架\n    book_detail.is_bookshelf = true;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n} else if ( book.order < 0 && getbook.length) {\n\t// 在阅读书架，在大灰狼书架\n\t  var books=getbook[0];\n    books.is_bookshelf = true;\n    data.push(books);\n} else if (book.order >= 0 && !getbook.length) {\n\t// 不在阅读书架，不在大灰狼书架，留下浏览记录\n\t   book_detail.is_bookshelf = false;\n    book_detail.last_chapter_title = '未开始';\n    book_detail.last_chapter_update_time = '未开始';\n    data.push(book_detail);\n\t} else if (book.order >= 0 && getbook.length) {\n\t// 不在阅读书架，在大灰狼书架，大灰狼书架下架\n\t   var books=getbook[0];\n    books.is_bookshelf = false;\n    //data.push(books);\n\t}\nif (data.length) {\n\tvar option = {\n\"method\": \"POST\",\n\"body\": JSON.stringify(data),\n};\n    java.ajax(`${base_url}/push_user_bookshelf,`+JSON.stringify(option));\n    }\n\t} catch (e) {};\n\tresult;\n\t</js>",
      "chapterName": "$.title",
      "chapterUrl": "<js>\nlet device;\nlet device_type;\nlet tab = result.tab;\nlet sources = result.source;\nlet title = result.title;\nlet item_id = result.item_id;\n\ntry {\n device = java.androidId();\n device_type='安卓';\n} catch (e) {\n device_type='苹果';\n};\n\nif (tab=='小说') {\n\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n } \n else if (tab=='听书') {\n \tif (device_type == '安卓') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n \t} else if (tab=='漫画') {\n \t\tif (device_type == '安卓') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n \t } else if (tab=='短剧') {\n \t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 3;\n    \t}\n \t\t \t\t\t} else {\n \t\t \t\t\t\tif (device_type == '安卓') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\t\t\n \t\t \t\t\t\t}\n\nlet content_url = `${item_id}大灰狼融合2.1${tab}大灰狼融合2.1${title}大灰狼融合2.1${sources}`;\ncontent_url= java.base64Encode(content_url);\ncontent_url= `data:;base64,${content_url},{\"type\":\"qingtian\"}`;\n</js>",
      "updateTime": "$.volume_name"
    },
    "searchUrl": "<js>\nlet base_url = getArguments(source.getVariable(),'server',String(source.bookSourceComment));\nlet key2 = '';\ntry {\n\tkey2 = String(cookie.getCookie(base_url)) || String(java.getCookie(base_url));\n\tkey2 = getKey(key2);\n        } catch (e) {key2='';}\nlet media = getArguments(source.getVariable(),'media',String(source.bookSourceComment));\nlet sources = getArguments(source.getVariable(),'source',String(source.bookSourceComment));\n`${base_url}/search?title={{key}}&tab=${media}&source=${sources}&key=${key2}`\n</js>",
    "weight": 60
  },
  {
    "bookSourceComment": "如不能加载请尝试删除书籍，重新搜索添加",
    "bookSourceGroup": "⑦📚  出版",
    "bookSourceName": "📚豆瓣阅读",
    "bookSourceType": 0,
    "bookSourceUrl": "https://read.douban.com",
    "bookUrlPattern": "https://read.douban.com/(ebook|read|column).*",
    "customOrder": 82,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "[{'title':'言情小说','url':'https://read.douban.com/kind/501?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'女性小说','url':'https://read.douban.com/kind/532?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'悬疑小说','url':'https://read.douban.com/kind/508?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'科幻小说','url':'https://read.douban.com/kind/505?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'幻想小说','url':'https://read.douban.com/kind/506?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'文艺小说','url':'https://read.douban.com/kind/503?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'历史小说','url':'https://read.douban.com/kind/510?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'非小说','url':'https://read.douban.com/kind/516?start={{(page-1)*20}}&sort=hot&promotion_only=False&min_price=None&max_price=None&works_type=1,{\\'headers\\':\\'{\"User-Agent\":\"Mozilla/5.0 (Linux; Android 8.1.0; JKM-AL00b Build/HUAWEIJKM-AL00b; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/66.0.3359.126 MQQBrowser/6.2 TBS/044807 Mobile Safari/537.36\"}\\'}','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'生活悬疑','url':'https://read.douban.com/j/tag/生活悬疑?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'都市犯罪','url':'https://read.douban.com/j/tag/都市犯罪?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'社会事件','url':'https://read.douban.com/j/tag/社会事件?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'私家侦探','url':'https://read.douban.com/j/tag/私家侦探?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'职业女性','url':'https://read.douban.com/j/tag/职业女性?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'单身女性','url':'https://read.douban.com/j/tag/单身女性?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'女性成长','url':'https://read.douban.com/j/tag/女性成长?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'家庭故事','url':'https://read.douban.com/j/tag/家庭故事?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'时空穿越','url':'https://read.douban.com/j/tag/时空穿越?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'都市奇幻','url':'https://read.douban.com/j/tag/都市奇幻?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'脑洞故事','url':'https://read.douban.com/j/tag/脑洞故事?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'近未来','url':'https://read.douban.com/j/tag/近未来?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'青春成长','url':'https://read.douban.com/j/tag/青春成长?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'都市冷暖','url':'https://read.douban.com/j/tag/都市冷暖?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'漂泊故事','url':'https://read.douban.com/j/tag/漂泊故事?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'时代记忆','url':'https://read.douban.com/j/tag/时代记忆?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'武侠小说','url':'https://read.douban.com/j/tag/武侠小说?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'历史纪实','url':'https://read.douban.com/j/tag/历史纪实?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'历史言情','url':'https://read.douban.com/j/tag/历史言情?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}},\n{'title':'历史传奇','url':'https://read.douban.com/j/tag/历史传奇?start={{(page-1)*10}}&limit={{(page)*10}}&sort=top','style':{layout_flexGrow: 1,layout_flexBasisPercent:0.2}}]",
    "header": "",
    "lastUpdateTime": "1742362666747",
    "loginCheckJs": "",
    "loginUi": "",
    "loginUrl": "https://read.douban.com/app",
    "respondTime": 203289,
    "ruleBookInfo": {
      "author": "class.author.0@class.author-item@text",
      "coverUrl": "class.cover shadow-cover@img@src",
      "init": "",
      "intro": "{{@class.section-abstract@html||class.abstract-full@html||class.intro@html}}<br>{{@class.rally-waiting-tip@html}}",
      "kind": "@js:\nis_bundle = /bundle/.test(\"{{//link[@rel=\"alternate\"]/@href}}\");\nis_bundle?java.put(\"is_bundle\",is_bundle):java.put(\"is_bundle\",\"false\");\"\"",
      "lastChapter": "class.current-price-count@text##^##全本定价:",
      "name": "<js>\nr = result.match(/Ark.CSRF_TOKEN = '([^']+)'/)[1];\njava.put(\"X-CSRF-TOKEN\",r);\njava.getString(\"@class.article-title@text\")\n</js>",
      "tocUrl": "@js:\n\nif(java.get(\"is_bundle\")==\"false\"){\n\t\nid=baseUrl.match(/(\\d+)/)[1];\nif(baseUrl.match(/ebook/)){result=baseUrl}else{\nresult=\"https://read.douban.com/j/column_v2/\"+id+\"/chapters?start=0&limit=10000&latestFirst=0\";}\n}else{\n\tresult = baseUrl\n\t}"
    },
    "ruleContent": {
      "content": "<js>\n\nif(java.get(\"is_bundle\")==\"false\"){\nhtml = java.ajax(\"https://read.douban.com\");\neval(html.match(/Ark\\.(user = \\{[\\s\\S]+?\\})/)[1]);\ncok = user.id??\"anonymous\";\njava.log(\"cok: \"+cok)\nt = java.getString(\"$.data\");\nscript = `<script>\nt = \"${t}\";\nfunction name(t){\n  const e = Uint8Array.from(window.atob(t), (t=>t.charCodeAt(0)))\n    , i = e.buffer\n    , u = e.length - 16 - 13\n    , d = new Uint8Array(i,u,16)\n    , p = new Uint8Array(i,0,u)\n    , f = {};\n    f.name = \"AES-CBC\",\n    f[\"iv\"] = d,\n  c = new TextEncoder().encode(\"${cok}\");\n  return window[\"crypto\"][\"subtle\"][\"digest\"](\"SHA-256\", c)\n  .then(t=>window[\"crypto\"][\"subtle\"][\"importKey\"](\"raw\", t, \"AES-CBC\", !0, [\"decrypt\"])\n  .then(t=>window[\"crypto\"][\"subtle\"][\"decrypt\"](f, t, p))\n  .then(t=>JSON.parse((new TextDecoder).decode(t)))\n .then(t=>t.posts[0].contents));\n}\n(async function () {\n  result = await name(t)\n  })();\n</script>`;\n\nddd = java.webView(script,baseUrl,\"result\");\n\n//规范Json数据\n// 定义正则表达式\nconst pattern = /:\"(.*?)\"([,\\]\\}])/g;\n\n// 替换逻辑\nddd = String(ddd).replace(pattern, (match, content,suffix) => {\n  // 将内容中的双引号替换为转义字符\n  const replacedContent = content.replace(/\"/g, '\\\\\"');\n  // 返回替换后的结果\n  return `:\"${replacedContent}\"${suffix}`;\n}).replace(/\\n+/g,'\\\\n').replace(/[\\x00-\\x1F\\x7F]/g,'');\nvar data = JSON.parse(String(ddd));\n\nfunction extractContent(item) {\n    const textList = item.data?.text;\n\n    const process = (content) => {\n        if (typeof content === 'string') {\n            return content;\n        }\n        if (Array.isArray(content)) {\n            return content.map(process).join('');\n        }\n        if (content && content.content) {\n            return process(content.content);\n        }\n        return '';\n    };\n    return typeof textList === 'string' ? textList : process(textList);\n}\n\n\nfunction getChapterContent(chapterNumber) {\n    let chapterContent = [];\n    let currentChapter = -1;\n    let isFirstHeadlineFound = false;\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (item.type === 'headline') {\n            currentChapter++;\n            if (!isFirstHeadlineFound) {\n                isFirstHeadlineFound = true;\n            }\n            if (currentChapter > chapterNumber) {\n                break;\n            }\n        }\n        if ((currentChapter === chapterNumber) || (chapterNumber === 0 && !isFirstHeadlineFound && item.type !== 'headline')) {\n                if(item.type === \"illus\")chapterContent.push(`<img src=\"${item.data?.size.orig.src}\">\\n`);\n                if(item.type !== 'headline')chapterContent.push(extractContent(item));\n            \n        }\n    }\n    return chapterContent.length > 0 ? chapterContent.join('\\n') : null;\n}\n\nresult = \"\";\n// 检查是否需要使用章节逻辑\nif (book.bookUrl.includes(\"ebook\")) {    \n    let index = chapter.index;\n    result = getChapterContent(index);\n} else {\n    // 遍历数据，提取并拼接 content\n    data.forEach(item => {\n            if(item.type === \"illus\")result += `<img src=\"${item.data?.size.orig.src}\">\\n`\n            result += extractContent(item) + \"\\n\"; // 每个段落换行\n        \n    });\n}\n\n}else{\n\tbookName = java.getString(\"@class.article-title@text\");\n\tbookAuthor = java.getString(\"@class.author-item@text\");\n\timgSrc = java.getString(\"@class.cover shadow-cover@img@src\");\n\tinfo = java.getString(\"@class.info@p@text\");\n\tresult = `❗️刷新本章跳转加入书架界面❗️\\n书名：${bookName}\\n作者：${bookAuthor}\\n<img src=\"${imgSrc}\">\\n简介：\\n${info}`\n\t\tif(book.durChapterIndex === chapter.index){\n\t\turl = \"legado://import/addToBookshelf?src=\"+baseUrl;\n\t\tscript = `data:text/html;charset=utf-8,\n\t\t<html>\n\t\t<title>《${bookName}》加入书架</title>\t\t\n\t\t<img src=\"${imgSrc}\" style=\"max-width: 300px; max-height: 400px\">\n\t\t<p style=\"text-align: center;\"><a href=\"${url}\" style=\"font-size:50px;\">跳转加入书架</a></p>\n\t\t<p style=\"font-size:60px\">简介：${info}\n\t\t</p>\t\t\t\t\n\t\t</html>\n\t\t<script>\n        window.onload = function () {\n            window.location.href = '${url}';\n        };\n    </script>`;    \n\t\tjava.startBrowser(script,\"《\"+bookName+\"》\")\t\t\n\t\t}\t\t\n\t}\nresult\n\n</js>",
      "imageStyle": "",
      "nextContentUrl": "",
      "payAction": "",
      "replaceRegex": "",
      "title": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "class.author@text||$.author",
      "bookList": "class.item||$.[?(@.alias_id)]",
      "bookUrl": "@js:\nresult = java.getString(\"@href\");\n\nif(!String(result)){\n\tresult = \"https://read.douban.com/column/{{$.alias_id}}/\"\n\t}\njava.put('is_bundle',/bundle/.test(result));\nresult",
      "coverUrl": "img@src||$.cover",
      "intro": "class.intro@text||$.abstract",
      "kind": "{{@@class.tag@text}},{{@@class.score@text}},{{@@class.amount}},{{@@class.price@text}},{{$.kind&&$.category&&$.tags[*].tag&&$.kinds[*].shortName&&$.highlightTags[*].name}}##(\\d+\\.\\d{2})##$1元💰",
      "name": "class.title@html||$.title##<span class=\"tag\">.*?</span>|<.*?>"
    },
    "ruleSearch": {
      "author": "$.author",
      "bookList": "<js>\nlist=JSON.parse(result);\nJson=[]\nfor(i in list){\nif(list[i].title.indexOf(java.get('key'))>-1){\nJson.push(list[i])\n}\n}\nresult=JSON.stringify(Json)\n</js>\n$.[*]",
      "bookUrl": "https://read.douban.com/{{$.type}}/{{$.id}}/",
      "checkKeyWord": "红楼梦",
      "coverUrl": "$.cover",
      "intro": "$.abstract",
      "kind": "{{String(java.getString(\"$.fixed_price\"))===\"false\"?\"免费\":\"原价:\"+(Number(java.getString(\"$.fixed_price\"))/100)+\"元\"+\"💡特价:\"+(Number(java.getString(\"$.price\"))/100)+\"元\"}},{{$.tags[*].tag&&$.kind&&$.category}}",
      "lastChapter": "@js:\nString(java.getString(\"$.fixed_price\"))===\"false\"?\"免费\":\"原价:\"+(Number(java.getString(\"$.fixed_price\"))/100)+\"元\"+\"💡特价:\"+(Number(java.getString(\"$.price\"))/100)+\"元\"",
      "name": "$.title",
      "wordCount": "@js:\n\"{{$..is_bundle}}\"!=\"\"?java.put(\"is_bundle\",\"{{$..is_bundle}}\"):java.put(\"is_bundle\",\"false\");\"\""
    },
    "ruleToc": {
      "chapterList": "<js>\nresult = java.getElements(\"@class.story-item@a||class.ebook-list@li\");\nif(!result.length){\n\t\tresult = java.getElements(\"$.list[*]\")\n\t\t}\n\t\t\nif(result.length===0){\n  java.setContent('<a href=\"ebook/0/toc/0\">暂无目录</a>');\n\tresult = java.getElements(\"@@tag.a\")\n\t}\nresult;\n</js>",
      "chapterName": "img@alt||text||title",
      "chapterUrl": "<js>\nif(java.get(\"is_bundle\")==\"false\"){\naid = \"{{$.id}}\"==\"\"?\"{{@@href}}\".match(/ebook\\/(\\d+)/)[1]:\"{{$.id}}\";\n\nid=\"{{$.id}}\"==\"\"?\"{{@@href}}\".match(/ebook\\/\\d+\\/toc\\/(\\d+)/)[1]:\"\";\nurl = \"https://read.douban.com/j/article_v2/get_reader_data\";\nbody = \"aid=\"+aid;\nresult = url +\",\"+ JSON.stringify({\n\t\"method\":\"POST\",\n\t\"body\":String(body),\n\t\"headers\":{\n\t\t\"referer\":\"https://read.douban.com/reader/column/{{baseUrl.match(/\\/(\\d+)\\//)[1]}}/chapter/\"+(id!=\"\"?id:aid)+\"/\",\n\t\t\"X-CSRF-TOKEN\":java.get(\"X-CSRF-TOKEN\")\n\t\t}\n\t});\n\t}else{\n\t\tresult = java.getString(\"@tag.a.0@href\")\n\t\t}\n</js>",
      "formatJs": "",
      "isPay": "",
      "isVip": "$.price",
      "isVolume": "",
      "nextTocUrl": "",
      "preUpdateJs": "",
      "updateTime": ""
    },
    "searchUrl": "https://read.douban.com/j/search?start={{(page-1)*10}}&limit=10&query={{key}}\n@js:java.put('key',key);result",
    "variableComment": "",
    "weight": 0
  }
]